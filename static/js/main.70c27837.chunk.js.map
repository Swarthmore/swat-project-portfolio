{"version":3,"sources":["config.ts","store/reducer.ts","store/store.ts","layouts/CoreLayout/styles.ts","containers/Navbar/LogoutButton/LogoutButton.tsx","containers/Navbar/ProfileButton/ProfileButton.tsx","containers/Navbar/styles.ts","contexts/DarkMode.tsx","containers/DarkModeSwitch/styles.ts","containers/DarkModeSwitch/DarkModeSwitch.tsx","containers/Navbar/index.ts","containers/Navbar/Navbar.tsx","containers/LoginCard/styles.ts","containers/LoginCard/index.ts","containers/LoginCard/LoginCard.tsx","containers/SideMenu/styles.ts","hooks/useTeams.ts","hooks/useUid.ts","constants/paths.ts","containers/SideMenu/Indicator/styles.ts","containers/SideMenu/Indicator/Indicator.tsx","containers/SideMenu/index.ts","containers/SideMenu/SideMenu.tsx","contexts/Snackbar.tsx","hooks/useSnax.ts","layouts/CoreLayout/index.ts","layouts/CoreLayout/CoreLayout.tsx","routes/Home/components/styles.ts","routes/Home/index.ts","routes/Home/components/Home.tsx","routes/NotFound/components/styles.ts","routes/NotFound/index.ts","routes/NotFound/components/NotFound.tsx","routes/Projects/components/styles.ts","containers/PageTitle/PageTitle.tsx","containers/PCard/styles.ts","utils/index.ts","containers/ProjectDialog/styles.ts","containers/MarkdownRenderer/MarkdownRenderer.tsx","containers/StatusUpdate/styles.ts","containers/StatusUpdate/StatusUpdate.tsx","containers/ProjectDialog/ProjectDialog.tsx","containers/PCard/PCard.tsx","routes/Projects/index.ts","routes/Projects/components/Projects.tsx","routes/AddProject/components/styles.ts","hooks/useInput.ts","containers/FormSubmitButton/FormSubmitButton.tsx","routes/AddProject/components/AddProject.tsx","routes/AddProject/index.ts","routes/Manage/components/styles.ts","routes/Manage/index.ts","routes/Manage/components/ManagePage.tsx","routes/EditProject/components/styles.ts","routes/EditProject/index.ts","routes/EditProject/components/EditProject.tsx","containers/AuthIsLoaded/index.ts","containers/AuthIsLoaded/AuthIsLoaded.tsx","theme.tsx","containers/App/index.ts","containers/App/App.tsx","index.tsx","routes/index.tsx"],"names":["rrfConfig","userProfile","useFirestoreForProfile","appConfig","name","rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","createStore","makeStyles","theme","root","flexGrow","content","display","background","palette","paper","children","padding","spacing","LogoutButton","useFirebase","history","useHistory","Tooltip","title","IconButton","color","aria-label","component","onClick","logout","then","push","ProfileButton","auth","useSelector","state","uid","cursor","textDecoration","DarkModeCtx","createContext","isOn","toggle","DarkModeProvider","matches","window","matchMedia","useState","setIsOn","Provider","value","alignItems","paddingLeft","paddingRight","on","fontWeight","off","DarkModeSwitch","classes","useContext","className","Switch","checked","onChange","icon","Brightness7","checkedIcon","Brightness2","Navbar","styles","AppBar","position","Toolbar","Typography","variant","isLoaded","isEmpty","top","right","width","zIndex","LoginCard","Card","CardHeader","CardContent","Button","fullWidth","login","provider","type","minWidth","borderRight","minHeight","useTeams","useFirestoreConnect","collection","teams","ordered","loaded","useUid","SINGLE_PATH","LIST_BY_TEAM","MANAGE_PATH","useStyles","textAlign","text","secondary","Indicator","SideMenu","pathname","useLocation","lastPathPart","split","pop","MenuList","map","team","MenuItem","id","replace","Divider","style","marginTop","marginBottom","SnackbarContext","snack","msg","open","setSnack","useSnax","CoreLayout","closeSnack","Snackbar","autoHideDuration","onClose","Alert","elevation","severity","path","to","row","cardGrid","flexDirection","gridItem","PageTitle","gutterBottom","actions","updateDate","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","dateString","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","MarkdownRenderer","rest","plugins","gfm","components","a","props","Link","button","StatusUpdate","onSubmit","React","val","setVal","TextField","e","target","slice","label","error","console","disabled","length","ProjectDialog","project","handleClose","ref","useRef","isOwner","meta","ownedBy","useFirestore","useLayoutEffect","current","focus","updateStatus","update","createdOn","now","toString","createdBy","updates","FieldValue","arrayUnion","Dialog","scroll","DialogTitle","DialogContent","markdown","DialogActions","ReadMoreIconButton","More","ExpandIconButton","tooltipMsg","PCard","isExpanded","setIsExpanded","isOpen","setIsOpen","parseCreatedOnToDate","str","parseInt","sortedUpdates","Array","from","sort","first","second","firstUpdate","subheader","displayName","avatar","Avatar","src","avatarUrl","CardActions","align","Collapse","in","timeout","unmountOnExit","useParams","teamsAreLoaded","populates","child","projects","populate","filteredProjects","Object","keys","key","filter","teamName","Grid","container","item","lg","maxWidth","form","field","mdButton","border","boxSizing","useInput","initialValue","setValue","reset","bind","parse","toISOString","FormSubmitButton","size","markdownCheat","mdPreview","setMdPreview","bindName","resetName","description","bindDescription","resetDescription","deadline","bindDeadline","resetDeadline","bindMarkdown","resetMarkdown","addProject","add","resetForm","undefined","event","preventDefault","res","required","DatePicker","format","disablePast","href","rows","rowsMax","multiline","descriptionCell","dialogState","setDialogState","where","storeAs","ownedProject","onDeleteClick","confirm","doc","delete","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","openDialog","substr","onEditClick","preview","params","updatedProject","deleteUpdate","updatedData","arrayRemove","i","AuthIsLoaded","email","test","makeTheme","createMuiTheme","primary","deepPurple","lightBlue","red","blue","ThemeProvider","App","store","routes","rrfProps","config","dispatch","createFirestoreInstance","utils","MomentUtils","CssBaseline","document","getElementById","ReactDOM","exact","HomeRoute","AddProjectRoute","EditProjectRoute","ProjectsRoute","ManageRoute","settings","NotFoundRoute","version","join"],"mappings":"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","file":"static/js/main.70c27837.chunk.js","sourcesContent":["/**\n * @description\n * \n * This file contains configurations for packages used in this app\n * \n */\n\n// firebase config\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const fbConfig = {\n    apiKey: \"AIzaSyDyQLHfX6av-b8p1BkvZiAR6W387AqdmT4\",\n    authDomain: \"swart-project-portfolio.firebaseapp.com\",\n    projectId: \"swart-project-portfolio\",\n    storageBucket: \"swart-project-portfolio.appspot.com\",\n    messagingSenderId: \"418686934766\",\n    appId: \"1:418686934766:web:8064a0a8c9bb5f20de5dff\",\n    measurementId: \"G-7HCHCYKQFS\"\n};\n\n// react-redux-firebase config\nexport const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\n\n// app config\nexport const appConfig = {\n    name: \"Projects @ Swarthmore\"\n}\n","/**\n * @description\n * \n * This file contains the root reducer for the firebase / firestore store\n * \n */\n\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nexport const rootReducer = combineReducers({\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","/**\n * @description\n * \n * This file includes configuration and setup for react-redux-firebase. It exports both the rrfConfig,\n * which is used by the root-level provider in the App component, as well as the firebase store.\n * \n */\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport { createStore } from \"redux\";\nimport { fbConfig, rrfConfig } from \"../config\";\nimport { rootReducer } from \"./reducer\";\n\n// initialize firebase\nfirebase.initializeApp({ ...fbConfig, ...rrfConfig})\n\n// initialize firestore\nfirebase.firestore()\n\n// enable analytics\nfirebase.analytics();\n\n// initial state for this store\nconst initialState = {}\n\nexport default createStore(rootReducer, initialState)","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    content: {\n        display: \"flex\",\n        flexGrow: 1,\n        background: theme.palette.background.paper\n    },\n    children: {\n        flexGrow: 1,\n        padding: theme.spacing(4)\n    }\n}));\n","/**\n * @description\n * \n * This component provides a styled logout button that when clicked\n * will log the user out of the app. This should destroy session/cookie\n * data for the user.\n * \n */\n\nimport * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tooltip } from \"@material-ui/core\";\n\nexport default function LogoutButton() {\n\n    const firebase = useFirebase();\n    const history = useHistory();\n\n    function onClick() {\n        firebase.logout().then(() => {\n            history.push(\"/\");\n        });\n    }\n\n    return (\n        <Tooltip title=\"Logout of app\">\n            <IconButton color=\"inherit\" aria-label=\"Logout of app\" component=\"span\" onClick={onClick}>\n                <ExitToAppIcon />\n            </IconButton>\n        </Tooltip>      \n    )\n\n}","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ProfileIcon from \"@material-ui/icons/Person\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ProfileButton() {\n\n    const auth = useSelector((state: any) => state.firebase.auth)\n    const history = useHistory();\n\n    if (!auth.uid) {\n        return <>no uid</>\n    }\n    return (\n        <Tooltip title=\"View Profile\">\n            <IconButton color=\"inherit\" aria-label=\"View Profile\" component=\"span\" onClick={() => history.push(\"/manage\")}>\n                <ProfileIcon />\n            </IconButton>\n        </Tooltip>      \n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    title: {\n        flexGrow: 1,\n        cursor: \"pointer\",\n        \"&:hover\": {\n            textDecoration: \"underline\"\n        }\n    }\n}));","import {createContext, useState} from \"react\";\n\n// TODO: Get this setting from the browser, then set it as default\nexport const DarkModeCtx = createContext<{isOn: boolean, toggle: () => void}>({\n    isOn: false,\n    toggle: () => {}\n});\n\nexport const DarkModeProvider = ({children}: {children: JSX.Element}) => {\n\n    // check user's browser preferences for dark mode\n    const matches = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    const [isOn, setIsOn] = useState(matches);\n\n    const toggle = () => {\n        if (isOn) {\n            setIsOn(false);\n        } else {\n            setIsOn(true);\n        }\n    }\n\n    return (\n        <DarkModeCtx.Provider value={{isOn, toggle}}>{children}</DarkModeCtx.Provider>\n    );\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1)\n    },\n    on: {\n        fontWeight: \"bold\",\n        color: \"#ffffff\"\n    },\n    off: {\n        fontWeight: \"lighter\",\n        color: \"#dedede\"\n    }\n}));","import {Switch} from \"@material-ui/core\";\nimport {useContext} from \"react\";\nimport {DarkModeCtx} from \"../../contexts/DarkMode\";\nimport {\n    Brightness2,\n    Brightness7\n} from \"@material-ui/icons\";\nimport makeStyles from \"./styles\";\n\nexport default function DarkModeSwitch() {\n\n    const classes = makeStyles();\n    const {isOn, toggle} = useContext(DarkModeCtx);\n\n    return (\n        <div className={classes.root}>\n            <span className={isOn ? classes.off : classes.on }>Light</span>\n            <Switch\n                checked={isOn}\n                onChange={toggle}\n                icon={<Brightness7/>}\n                checkedIcon={<Brightness2/>}\n            />\n            <span className={isOn ? classes.on : classes.off}>Dark</span>\n        </div>\n    );\n}","import Navbar from \"./Navbar\";\nexport default Navbar;\n","/**\n * @description\n * \n * This file contains the main navbar for the app. It will appear on the top of the page.\n * \n */\n\nimport * as React from \"react\";\nimport { AppBar, Link, Toolbar, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { RootState } from \"../../store/reducer\";\nimport LogoutButton from \"./LogoutButton/LogoutButton\";\nimport ProfileButton from \"./ProfileButton/ProfileButton\";\nimport styles from \"./styles\";\nimport { appConfig } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\nimport DarkModeSwitch from \"../DarkModeSwitch/DarkModeSwitch\";\n\nexport default function Navbar() {\n\n    const auth = useSelector((state: RootState) => state.firebase.auth)\n    const classes = styles();\n    const history = useHistory();\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title} color=\"inherit\" onClick={() => history.push(\"/\")}>{appConfig.name}</Typography>\n                <DarkModeSwitch />\n                {/* Display the logout button if the user is logged in */}\n                {isLoaded(auth) && !isEmpty(auth) && <ProfileButton />}\n                {isLoaded(auth) && !isEmpty(auth) && <LogoutButton />}\n            </Toolbar>\n        </AppBar>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        width: \"400px\",\n        background: theme.palette.background.paper,\n        zIndex: 100\n    },\n}))","import LoginCard from \"./LoginCard\";\nexport default LoginCard;","import * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { Card, CardContent, CardHeader, Button } from \"@material-ui/core\";\nimport { appConfig } from \"../../config\";\nimport styles from \"./styles\";\n\nexport default function LoginCard() {\n\n    const firebase = useFirebase();\n    const classes = styles();\n\n    function loginWithGoogle() {\n        return firebase.login({ provider: \"google\", type: \"popup\"  })\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader \n                title={appConfig.name}\n            />\n            <CardContent>\n                <Button color=\"primary\" fullWidth variant=\"contained\" onClick={loginWithGoogle}>Sign in with Google</Button>\n            </CardContent>\n        </Card>\n    )\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        width: 300,\n        minWidth: 300,\n        borderRight: `1px solid #ccc`,\n        minHeight: \"100vh\"\n    }\n}));","import {isLoaded, useFirestoreConnect} from \"react-redux-firebase\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducer\";\n\nexport default function useTeams() {\n    useFirestoreConnect([\n        {collection: \"teams\"}\n    ]);\n    const { teams } = useSelector((state:RootState) => state.firestore.ordered)\n    return {\n        loaded: isLoaded(teams),\n        teams\n    }\n}","import {useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducer\";\n\nexport default function useUid() {\n    const { uid } = useSelector((state: RootState) => state.firebase.auth);\n    return { uid }\n}","export const LOGIN_PATH = \"/login\";\nexport const ACCOUNT_PATH = \"/account\";\nexport const SINGLE_PATH = \"/single-project/:id\";\nexport const LIST_BY_TEAM = \"/projects/by-team/:id\";\nexport const LIST_BY_USER = \"/projects/by-user/:id\";\nexport const ADD_PROJECT_ROUTE = \"/projects/add\";\nexport const MANAGE_PATH = \"/manage\";\nexport const LOGOUT_PATH = \"/logout\";\nexport const HOME_PATH = \"/\";","import {makeStyles, Theme} from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme)=> ({\n    root: {\n        width: \"100%\",\n        textAlign: \"right\",\n        color: theme.palette.text.secondary\n    }\n}));","import {useStyles} from \"./styles\";\n\nexport default function Indicator() {\n    const classes = useStyles();\n    return <div className={classes.root}>&#9679;</div>\n}","import SideMenu from \"./SideMenu\";\nexport default SideMenu;\n","import React from \"react\";\nimport { MenuList, MenuItem, Divider } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport useTeams from \"../../hooks/useTeams\";\nimport useUid from \"../../hooks/useUid\";\nimport {Team} from \"../../types\";\nimport {ADD_PROJECT_ROUTE, LIST_BY_TEAM, MANAGE_PATH} from \"../../constants/paths\";\nimport Indicator from \"./Indicator/Indicator\";\n\nexport default function SideMenu() {\n\n    const classes = styles();\n    const history = useHistory();\n    const { pathname } = useLocation();\n\n    const { uid } = useUid();\n    const { teams, loaded } = useTeams();\n\n    if (!uid) {\n        return <div>Not logged in</div>\n    }\n\n    const onSelect = (id: string) => {\n        history.push(LIST_BY_TEAM.replace(\":id\", id));\n    }\n\n    const onShowAllClick = () => {\n        history.push(LIST_BY_TEAM.replace(\":id\", \"all\"));\n    }\n\n    const onAddClick = () => {\n        history.push(ADD_PROJECT_ROUTE);\n    }\n\n    const onManageClick = () => {\n        history.push(MANAGE_PATH);\n    }\n\n\n    const lastPathPart = pathname.split(\"/\").pop();\n\n    return !loaded\n        ? <>Loading</>\n        : (\n            <div className={classes.root}>\n                <MenuList>\n                    {teams.map((team: Team) => <MenuItem key={team.id} onClick={() => onSelect(team.id)}>\n                        {lastPathPart === team.id ? <strong>{team.name}</strong> : team.name}\n                        {lastPathPart === team.id && <Indicator />}\n                    </MenuItem>)}\n                    <Divider style={{ marginTop: \"5px\", marginBottom: \"5px\" }} />\n                    <MenuItem onClick={onShowAllClick}>\n                        {lastPathPart === \"all\" ? <strong>All Projects</strong> : \"All Projects\"}\n                        {lastPathPart === \"all\" && <Indicator />}\n                    </MenuItem>\n                    <Divider style={{ marginTop: \"5px\", marginBottom: \"5px\" }} />\n                    {uid && (\n                        <div>\n                            <MenuItem onClick={onAddClick}>\n                                {lastPathPart === \"add\" ? <strong>Add Project</strong> : \"Add Project\"}\n                                {lastPathPart === \"add\" && <Indicator />}\n                            </MenuItem>\n                            <MenuItem onClick={onManageClick}>\n                                {lastPathPart === \"manage\" ? <strong>My Projects</strong> : \"My Projects\"}\n                                {lastPathPart === \"manage\" && <Indicator />}\n                            </MenuItem>\n                        </div>\n                    )}\n                </MenuList>\n            </div>\n        );\n}","import {createContext, useState} from \"react\";\n\ntype Severity = \"error\" | \"warning\" | \"info\" | \"success\";\n\ninterface Snack {\n    type: Severity,\n    msg: string,\n    open: boolean\n}\n\nexport const SnackbarContext = createContext<{ snack: Snack, setSnack: any }>(\n    {\n        snack: { type: \"error\", msg: \"\", open: false },\n        setSnack: () => {}\n    }\n);\n\nexport default function({ children }: { children: JSX.Element }) {\n    const [snack, setSnack] = useState<Snack>({\n        type: \"error\",\n        msg: \"\",\n        open: false\n    });\n\n    return <SnackbarContext.Provider value={{ snack, setSnack }}>\n        {children}\n    </SnackbarContext.Provider>\n}","import {useContext} from \"react\";\nimport {SnackbarContext} from \"../contexts/Snackbar\";\n\nexport default function useSnax() {\n    const {snack, setSnack} = useContext(SnackbarContext);\n    return {snack, setSnack}\n}","import CoreLayout from \"./CoreLayout\";\nexport default CoreLayout;","import React from \"react\";\nimport styles from \"./styles\";\nimport Props from \"./props\";\nimport Navbar from \"../../containers/Navbar\";\nimport LoginCard from \"../../containers/LoginCard\";\nimport SideMenu from \"../../containers/SideMenu\";\nimport useUid from \"../../hooks/useUid\";\nimport {Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport useSnax from \"../../hooks/useSnax\";\n\nexport default function CoreLayout({ children }: Props) {\n\n    const classes = styles();\n    const { uid } = useUid();\n\n    const { snack, setSnack } = useSnax();\n\n    const closeSnack = () => setSnack({ open: false, msg: \"\", type: \"\" });\n\n    return (\n        <div className={classes.root}>\n            {!uid && <LoginCard />}\n            <Navbar />\n            <div className={classes.content}>\n                {uid && <SideMenu/>}\n                <div className={classes.children}>{children}</div>\n            </div>\n            {snack.open && <Snackbar open={snack.open} autoHideDuration={5000} onClose={() => closeSnack()}>\n                <Alert elevation={6} variant=\"filled\" severity={snack.type}\n                       onClose={() => closeSnack()}>{snack.msg}</Alert>\n            </Snackbar>}\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {}\n}));","import HomePage from \"./components/Home\";\n\nexport default {\n    path: \"/\",\n    component: HomePage\n};","import React from \"react\";\nimport styles from \"./styles\";\nimport { Redirect } from \"react-router-dom\";\nimport useUid from \"../../../hooks/useUid\";\n\nexport default function Home() {\n\n    const classes = styles();\n    const { uid } = useUid();\n\n\n    return uid ? <Redirect to=\"projects/by-team/all\" /> : <div>Login to view projects</div>\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {}\n}));\n","import NotFoundPage from \"./components/NotFound\";\n\nexport default {\n    component: NotFoundPage \n};","import * as React from \"react\";\nimport styles from \"./styles\"\n\nexport default function NotFoundPage() {\n\n    const classes = styles();\n\n    return (\n        <div className={classes.root}>\n            <p>404</p>\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        width: \"100%\"\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    },\n    cardGrid: {\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    gridItem: {\n        display: \"flex\",\n        flexGrow: 1\n    }\n}));\n","import { Typography } from \"@material-ui/core\";\n\nexport function PageTitle({ title }: { title: string }) {\n\n    return (\n        <Typography variant=\"h4\" gutterBottom >{title} Projects</Typography>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles((theme)=> ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexGrow: 1,\n        width: \"100%\"\n    },\n    actions: {\n        display: \"flex\",\n        background: theme.palette.background.paper,\n    },\n    content: {\n        flexGrow: 1\n    },\n    updateDate: {\n        flexGrow: 1\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    }\n}));\n","import {ProjectStatusUpdate} from \"../types\";\n\nexport function createMeta(createdBy: string) {\n    return {\n        createdBy,\n        createdOn: Date.now().toString(),\n        visible: true\n    }\n}\n\nexport function dateString(timestamp: string) {\n    const date = new Date(+timestamp);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}`\n}\n\nexport function sortUpdates(updates: ProjectStatusUpdate[]) {\n    return Array.from(updates).sort((first, second) => (+second.createdOn - +first.createdOn));\n}","import {makeStyles, Theme} from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n        root: { flexGrow: 1}\n    }\n));","import ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport {Link} from \"@material-ui/core\";\n\nexport default function MarkdownRenderer({ children, ...rest }: { children: any }) {\n   return (\n       <ReactMarkdown\n           plugins={[gfm]}\n           children={children}\n           components={{\n               a: (props) => <Link {...props} color=\"secondary\" />\n           }}\n           {...rest}\n       />\n   )\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2)\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nexport default function StatusUpdate({ onSubmit }: { onSubmit: (val: string) => void }) {\n\n    const [val, setVal] = React.useState(\"\");\n\n    const classes = styles();\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        // restrict to 300 characters\n        setVal(\n            e.target.value.slice(0, 300)\n        )\n    }\n\n    const onClick = (val:string) => {\n        try {\n            onSubmit(val);\n            // clear the form\n            setVal(\"\");\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    \n    return (\n        <div className={classes.root}>\n            <TextField value={val} onChange={onChange} fullWidth variant=\"filled\" label=\"Share an update about this project\"  color=\"secondary\" />\n            <Button className={classes.button} color=\"primary\" variant=\"contained\" onClick={() => onClick(val)} disabled={val.length < 5}>Post Update</Button>\n        </div>\n    )\n\n}","import {\n    Dialog,\n    DialogProps,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Button\n} from \"@material-ui/core\";\nimport {useStyles} from \"./styles\";\nimport {useLayoutEffect, useRef} from \"react\";\nimport {Project} from \"../../types\";\nimport MarkdownRenderer from \"../MarkdownRenderer/MarkdownRenderer\";\nimport StatusUpdate from \"../StatusUpdate/StatusUpdate\";\nimport useUid from \"../../hooks/useUid\";\nimport firebase from \"firebase\";\nimport useSnax from \"../../hooks/useSnax\";\nimport {useFirestore} from \"react-redux-firebase\";\n\ninterface ProjectDialogProps extends DialogProps {\n    project: Project,\n    handleClose: () => void\n}\n\nexport default function ProjectDialog({\n    project,\n    open,\n    handleClose,\n    ...rest\n}: ProjectDialogProps) {\n\n    const classes = useStyles();\n\n    const ref = useRef<HTMLElement | null>(null);\n\n    const {uid} = useUid();\n    const isOwner = project.meta.ownedBy === uid;\n    const {setSnack} = useSnax();\n    const firestore = useFirestore();\n\n    useLayoutEffect(() => {\n        if (open) {\n            const {current} = ref;\n            if (current) {\n                current.focus();\n            }\n        }\n    }, [open]);\n\n    const updateStatus = async (value: string) => {\n        try {\n            const update = {\n                value: value,\n                createdOn: Date.now().toString(),\n                createdBy: uid\n            }\n            await firestore.update(`projects/${project.id}`, { updates:  firebase.firestore.FieldValue.arrayUnion(update) });\n            setSnack({ msg: \"Status update posted\", type: \"success\", open: true });\n            handleClose();\n        } catch(error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true });\n            handleClose();\n        }\n    }\n\n    return (\n        <Dialog\n            className={classes.root}\n            scroll=\"paper\"\n            open={open}\n            onClose={handleClose}\n            {...rest}\n        >\n            <DialogTitle>{project.name}</DialogTitle>\n            <DialogContent>\n                <div>\n                    {isOwner && <StatusUpdate onSubmit={updateStatus} />}\n                </div>\n                {project.markdown &&\n                <MarkdownRenderer>{project.markdown}</MarkdownRenderer>}\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"secondary\" onClick={handleClose}>Close</Button>\n\n            </DialogActions>\n        </Dialog>\n    );\n}","import {Project} from \"../../types\";\nimport {\n    Avatar,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader, Collapse, IconButton, IconButtonProps, Tooltip,\n    Typography\n} from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport {More} from \"@material-ui/icons\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport React, {useState} from \"react\";\nimport {sortUpdates} from \"../../utils\";\nimport {useHistory} from \"react-router-dom\";\nimport ProjectDialog from \"../ProjectDialog/ProjectDialog\";\n\nexport interface PCardProps {\n    project: Project &\n        {\n            meta: {\n                createdBy: any,\n                createdOn: any,\n                [k:string]: any\n            }\n        }\n}\n\nfunction ReadMoreIconButton(props: IconButtonProps) {\n    return (\n        <Tooltip title=\"Read More\">\n            <IconButton {...props}>\n                <More />\n            </IconButton>\n        </Tooltip>\n    )\n}\n\ninterface ExpandIconButtonProps extends IconButtonProps {\n    tooltipMsg: string\n}\n\nfunction ExpandIconButton({ tooltipMsg, ...rest }: ExpandIconButtonProps) {\n    return (\n        <Tooltip title={tooltipMsg}>\n            <IconButton {...rest}>\n                <ExpandMoreIcon />\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nexport default function PCard({ project, ...rest }: PCardProps) {\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleExpandClick = () => setIsExpanded(!isExpanded);\n    const handleClose = () => setIsOpen(false);\n    const handleOpen = () => setIsOpen(true);\n\n    const parseCreatedOnToDate = (str: string) => {\n        const date = new Date(parseInt(str));\n        return date.toLocaleDateString();\n    }\n\n    const sortedUpdates = (project.updates && project.updates.length > 0) ? sortUpdates(Array.from(project.updates)) : [];\n\n    const firstUpdate = sortedUpdates[0];\n\n    return (\n\n            <>\n\n                <ProjectDialog project={project} open={isOpen} handleClose={handleClose} />\n\n                <Card className={classes.root} {...rest}>\n\n                <CardHeader\n                    title={project.name}\n                    subheader={`${project.meta.createdBy.displayName} on ${parseCreatedOnToDate(project.meta.createdOn)}`}\n                    avatar={\n                        <Avatar\n                            src={project.meta.createdBy.avatarUrl}\n                        />\n                    }\n                />\n\n                <CardContent className={classes.content}>\n                    {firstUpdate && (\n                        <Typography variant=\"body2\">\n                            {firstUpdate.value}\n                        </Typography>\n                    )}\n                </CardContent>\n\n                <CardActions className={classes.actions}>\n                    <ReadMoreIconButton onClick={handleOpen} />\n                    {firstUpdate && (\n                        <>\n                            <Typography className={classes.updateDate} variant=\"caption\" align=\"center\" color=\"textSecondary\">\n                                {parseCreatedOnToDate(firstUpdate.createdOn)}\n                            </Typography>\n                            {project.updates && project.updates?.length > 0 && (\n                                <ExpandIconButton\n                                    className={isExpanded ? classes.expand : classes.expandOpen}\n                                    onClick={handleExpandClick}\n                                    tooltipMsg={`${project.updates.length} more update${project.updates.length  > 1 ? \"s\" : \"\"}`}\n                                />\n                            )}\n                        </>\n                    )}\n                </CardActions>\n\n                {project.updates && project.updates?.length > 0 && (\n                    <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit={true}>\n                        {sortedUpdates.map(update => (\n                           <CardContent key={update.value}>\n                               <Typography variant=\"h6\">{parseCreatedOnToDate(update.createdOn)}</Typography>\n                               <Typography variant=\"body2\">{update.value}</Typography>\n                           </CardContent>\n                        ))}\n                    </Collapse>\n                )}\n\n            </Card>\n        </>\n    )\n}","import ProjectsPage from \"./components/Projects\";\nimport { LIST_BY_TEAM as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectsPage\n}","import React from \"react\";\nimport styles from \"./styles\";\nimport {useFirestoreConnect, populate, isLoaded, isEmpty} from \"react-redux-firebase\";\nimport {useSelector} from \"react-redux\";\nimport {useLocation, useParams} from \"react-router-dom\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport {Project, Team} from \"../../../types/index\";\nimport { PageTitle } from \"../../../containers/PageTitle\";\nimport {RootState} from \"../../../store/reducer\";\nimport useTeams from \"../../../hooks/useTeams\";\nimport PCard from \"../../../containers/PCard/PCard\";\n\nexport default function Projects(props: any) {\n\n    const classes = styles();\n    const { id }: { id: string } = useParams();\n    const { teams, loaded: teamsAreLoaded } = useTeams();\n    const { pathname } = useLocation();\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n\n    useFirestoreConnect([\n        { \n            collection: \"projects\",\n            populates,\n            ...(id ? [\"meta.createdBy.team\", \"==\", id]: {})\n        },\n    ]);\n\n    // at this point, the results aren't filtered because we need to populate the projects to get\n    // the team id\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    if (!isLoaded(projects) || !teamsAreLoaded) {\n        return <div>Loading...</div>\n    }\n\n    if (isEmpty(projects)) {\n        return <div>No projects found</div>\n    }\n\n    // filter the projects by team id\n    const filteredProjects = Object.keys(projects)\n        .map(key => ({ id: key, ...projects[key] }))\n        .filter(project => (id === \"all\" ? project : project.meta.createdBy.team === id))\n\n    const lastPathPart = pathname.split(\"/\").pop();\n\n    const teamName = lastPathPart === \"all\" ? \"All\" : teams.filter((team: Team) => team.id === id)[0].name || \"Unknown\";\n\n    return (\n        <div className={classes.root}>\n            <PageTitle title={teamName} />\n            {filteredProjects.length === 0 && <Typography variant=\"subtitle1\">This team doesn't have any projects posted yet</Typography>}\n            {filteredProjects.length > 0 && (\n                <Grid container spacing={3}>\n                    {filteredProjects.map((project: Project) => (\n                        <Grid item lg={3} key={project.id} className={classes.gridItem}>\n                            <PCard project={project} />\n                        </Grid>\n                    ))}\n                </Grid>\n            )}\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(2),\n        maxWidth: 200\n    },\n    markdown: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    }\n}));\n","import { useState } from \"react\";\n\nexport default function useInput(initialValue: string) {\n\n    const [value, setValue] = useState(initialValue)\n\n    return {\n        value,\n        setValue: () => setValue,\n        reset: (val: string|undefined) => val ? setValue(val) : setValue(\"\"),\n        bind: {\n            value,\n            onChange: (e: any) => {\n                // If event.target is set, we can assume the field is a text input with a value property\n                // If event.target is not set, check to see if e is a moment object. If it is a moment object\n                // that means we can use e.toString() to get the date\n                e.target \n                    ? setValue(e.target.value) \n                        : Date.parse(e)\n                            ? setValue(e.toISOString()) : null\n            }\n        }\n    }\n\n}","import { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n        maxWidth: 300\n    }\n}));\n\ninterface Props extends ButtonProps {\n    label: string\n}\n\nexport function FormSubmitButton({ label, ...rest }: Props) {\n\n    const classes = styles();\n\n    return (\n        <Button size=\"large\" variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.root} {...rest}>{label}</Button>\n    );\n\n}","import { TextField, Button, Typography, Link } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Project } from \"../../../types\";\nimport { RootState } from \"../../../store/reducer\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport {SINGLE_PATH} from \"../../../constants/paths\";\nimport MD from \"react-markdown\";\nimport gfm from \"remark-gfm\"\nimport MarkdownRenderer from \"../../../containers/MarkdownRenderer/MarkdownRenderer\";\n\nexport const markdownCheat = \"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\";\n\nexport default function AddProjectPage() {\n\n    // whether or not to show markdown preview\n    const [mdPreview, setMdPreview] = React.useState(false);\n\n    const firestore = useFirestore();\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const classes = styles();\n    const {setSnack} = useSnax();\n\n    // if auth.email is not from swarthmore, log the user out\n\n    const history = useHistory();\n\n    // the name field\n    const { \n        value: name, \n        bind: bindName, \n        reset: resetName \n    } = useInput(\"\");\n\n    // the description field\n    const { \n        value: description, \n        bind: bindDescription, \n        reset: resetDescription \n    } = useInput(\"\");\n\n    // the deadline field\n    const { \n        value: deadline, \n        bind: bindDeadline, \n        reset: resetDeadline\n    } = useInput(new Date(Date.now()).toISOString());\n\n    // the markdown field\n    const { \n        value: markdown, \n        bind: bindMarkdown, \n        reset: resetMarkdown\n     } = useInput(\"\");\n\n    // adds a project to firestore\n    function addProject(project: Project) {\n        return firestore.collection('projects').add(project);\n    }\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n\n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n        \n        const uid = auth.uid.toString();\n\n        const project: Project = {\n            name,\n            description,\n            markdown,\n            deadline,\n            meta: {\n                ownedBy: uid,\n                createdBy: uid,\n                createdOn: Date.now().toString() \n            },\n            updates: []\n        }\n\n        try {\n            const res = await addProject(project);\n            resetForm();\n            setSnack({ type: \"success\", msg: \"Project created success\", open: true });\n            history.push(SINGLE_PATH.replace(\":id\", res.id));\n            \n        } catch (error) {\n            setSnack({ type: \"error\", msg: error.toString(), open: true });\n        }\n\n    }\n\n    const handlePreviewClick = () => {\n        setMdPreview(true);\n    }\n\n    const closeMarkdownPreview = () => {\n        setMdPreview(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Add Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField color=\"secondary\" className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField color=\"secondary\" className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n\n                <DatePicker label=\"Project Deadline\" className={classes.field} format=\"MM/DD/yyyy\" disablePast={true} {...bindDeadline} />\n\n                {mdPreview\n                    ? (\n                        <div className={classes.field}>\n                            <Typography variant=\"caption\" gutterBottom>Markdown Preview</Typography>\n                            <MarkdownRenderer children={markdown} />\n                            <Button fullWidth size=\"large\" variant=\"contained\" onClick={closeMarkdownPreview}>Edit</Button>\n                        </div>\n\n                    ) : (\n                        <>\n                            <div className={classes.field}>\n                                <label>\n                                    Tell us about your project. You can use Markdown, but keep it under 400 characters\n                                </label>\n                                <br/>\n                                <Link href={markdownCheat} target=\"_blank\" color=\"secondary\">Markdown Cheat Sheet</Link>\n                                <TextField className={classes.field} fullWidth label=\"Markdown description\" rows={10} rowsMax={10}\n                                           color=\"secondary\" variant=\"filled\" multiline {...bindMarkdown} />\n                            </div>\n                            <Button size=\"large\" variant=\"contained\" onClick={handlePreviewClick} disabled={mdPreview}>Preview Markdown</Button>\n                        </>\n                )}\n\n\n                <FormSubmitButton label=\"Submit\" />\n            </form>\n        </div>\n    )\n\n}","import AddProjectPage from \"./components/AddProject\";\nexport default {\n    path: \"/projects/add\",\n    component: AddProjectPage\n};\n\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    descriptionCell: {\n        flexGrow: 1\n    }\n}));\n","import ManagePage from \"./components/ManagePage\";\n\nexport default {\n    path: \"/manage\",\n    component: ManagePage\n};","import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {useFirestoreConnect, isLoaded, isEmpty, useFirestore} from \"react-redux-firebase\";\nimport {RootState} from \"../../../store/reducer\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Paper,\n    Table,\n    TableBody,\n    TableHead,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Button,\n    IconButton\n} from \"@material-ui/core\";\nimport {Project} from \"../../../types\";\nimport {dateString} from \"../../../utils\";\nimport useUid from \"../../../hooks/useUid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"./styles\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport ProjectDialog from \"../../../containers/ProjectDialog/ProjectDialog\";\n\nexport default function ManagePage() {\n\n    const [dialogState, setDialogState] = useState<{ open: boolean, project: Project | null }>({\n        open: false,\n        project: null\n    });\n    const [showDialog, setShowDialog] = useState(false);\n\n    const history = useHistory();\n    const firestore = useFirestore();\n    const {uid} = useUid();\n    const classes = styles();\n    const {setSnack} = useSnax();\n\n    // at this point we have the user id\n    useFirestoreConnect([\n        {\n            collection: \"projects\",\n            where: [\"meta.createdBy\", \"==\", uid],\n            storeAs: \"ownedProject\"\n        }\n    ]);\n\n    const projects = useSelector((state: RootState) => state.firestore.ordered.ownedProject);\n\n    if (!isLoaded(projects)) {\n        return <>Loading...</>;\n    }\n\n    if (isEmpty(projects)) {\n        return <>You have no projects</>;\n    }\n\n    const onEditClick = (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        e.preventDefault();\n        history.push(`/projects/edit/${project.id}`);\n    };\n\n    const onDeleteClick = async (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        try {\n            e.preventDefault();\n            const confirmation = confirm(\"WARNING: This action is permanent. Click OK to proceed.\");\n            if (!confirmation) return;\n            await firestore.collection(\"projects\").doc(project.id).delete();\n            setSnack({msg: \"Project deleted\", type: \"success\", open: true});\n        } catch (error) {\n            setSnack({msg: error.toString(), type: \"error\", open: true});\n        }\n    };\n\n    const openDialog = (project: Project) => {\n        setDialogState({open: true, project: project});\n    };\n\n    const closeDialog = () => {\n        setDialogState({open: false, project: null});\n    };\n\n    return (\n        <>\n            {dialogState.project &&\n            <ProjectDialog project={dialogState.project} handleClose={closeDialog}\n                           open={dialogState.open}/>}\n            <TableContainer component={Paper} className={classes.root}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Description</TableCell>\n                            <TableCell>Deadline</TableCell>\n                            <TableCell>Created</TableCell>\n                            <TableCell>Actions</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {projects.map((project: Project) => (\n                            <TableRow key={project.id}>\n                                <TableCell>\n                                    <Button onClick={() => openDialog(project)}>\n                                        {project.name}\n                                    </Button>\n                                </TableCell>\n                                <TableCell className={classes.descriptionCell}>\n                                    {project.description.length > 100\n                                        ? project.description.substr(0, 100) + \"...\"\n                                        : project.description}\n                                </TableCell>\n                                <TableCell>\n                                    {project.deadline && new Date(project.deadline).toLocaleDateString()}\n                                </TableCell>\n                                <TableCell>\n                                    {dateString(project.meta.createdOn)}\n                                </TableCell>\n                                <TableCell>\n                                    <IconButton onClick={e => onEditClick(e, project)}>\n                                        <EditIcon/>\n                                    </IconButton>\n                                    <IconButton onClick={e => onDeleteClick(e, project)}>\n                                        <DeleteIcon/>\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(1)\n    },\n    preview: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    },\n    updates: {\n        marginTop: theme.spacing(2)\n    },\n    markdown: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    }\n}));\n","import EditProjectPage from \"./components/EditProject\";\nexport default {\n    path: \"/projects/edit/:id\",\n    component: EditProjectPage\n};\n\n","import React, {useState} from \"react\";\nimport {TextField, Button, Typography, Card, CardContent, CardActions, Link} from \"@material-ui/core\";\nimport { useFirestore, useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { RootState } from \"../../../store/reducer\";\nimport { dateString } from \"../../../utils\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\nimport {HOME_PATH, MANAGE_PATH, SINGLE_PATH} from \"../../../constants/paths\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport MD from \"react-markdown\";\nimport {markdownCheat} from \"../../AddProject/components/AddProject\";\nimport gfm from \"remark-gfm\"\nimport MarkdownRenderer from \"../../../containers/MarkdownRenderer/MarkdownRenderer\";\n\nexport default function EditProjectPage() {\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n    const firestore = useFirestore();\n    const { setSnack } = useSnax();\n\n    if (!params.id) {\n        history.push(\"/\");\n    }\n\n    const classes = styles();\n\n    const [mdPreview, setMdPreview] = useState(false);\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = params.id;\n\n    useFirestoreConnect([\n        { collection, populates, doc }\n    ]);\n\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    // Show message while project is loading\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project\n    if (isEmpty(projects)) {\n        return <div>Project is empty</div>\n    }\n\n    // the name field\n    const {\n        value: name,\n        bind: bindName,\n        reset: resetName\n    } = useInput(projects[params.id].name);\n\n    // the description field\n    const {\n        value: description,\n        bind: bindDescription,\n        reset: resetDescription\n    } = useInput(projects[params.id].description);\n\n    // the deadline field\n    const {\n        value: deadline,\n        bind: bindDeadline,\n        reset: resetDeadline\n    } = useInput(projects[params.id].deadline);\n\n    // the markdown field\n    const {\n        value: markdown,\n        bind: bindMarkdown,\n        reset: resetMarkdown\n    } = useInput(projects[params.id].markdown);\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n\n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n\n        const updatedProject = {\n            name,\n            description,\n            markdown,\n            deadline\n        }\n\n        try {\n            await firestore.update(`projects/${params.id}`, updatedProject)\n            resetForm();\n            setSnack({ msg: \"Project updated\", type: \"success\", open: true })\n            history.push(MANAGE_PATH);\n\n        } catch (error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true })\n        }\n\n    }\n\n    const deleteUpdate = async (update: any) => {\n        try {\n            const updatedData = {\n                updates: firestore.FieldValue.arrayRemove(update)\n            }\n            const confirmed = confirm(\"WARNING: This action is permanent. Proceed?\");\n            if (!confirmed) return;\n            await firestore.update({ collection: \"projects\", doc: params.id }, updatedData);\n            setSnack({ msg: \"Status update deleted\", type: \"success\", open: true })\n            // TODO: this is hacky and should be fixed\n            history.push(HOME_PATH);\n\n        } catch(error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true });\n        }\n    }\n\n    const handlePreviewClick = () => {\n        setMdPreview(true);\n    }\n\n    const closeMarkdownPreview = () => {\n        setMdPreview(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\" gutterBottom>Edit Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField color=\"secondary\" className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField color=\"secondary\" className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n                <DatePicker className={classes.field} format=\"MM/DD/yyyy\" {...bindDeadline} />\n\n                {mdPreview ? (\n                    <div className={classes.field}>\n                        <Typography variant=\"caption\" gutterBottom>Markdown Preview</Typography>\n                        <MarkdownRenderer children={markdown} />\n                        <Button fullWidth size=\"large\" variant=\"contained\" onClick={closeMarkdownPreview}>Edit</Button>\n                    </div>\n                ) : (\n                    <>\n                        <Link href={markdownCheat} target=\"_blank\" color=\"secondary\">Markdown Cheat Sheet</Link>\n                        <TextField color=\"secondary\" className={classes.field} label=\"Project Markdown\" rows=\"10\" rowsMax=\"10\" variant=\"filled\" multiline fullWidth {...bindMarkdown} />\n                        <Button size=\"large\" variant=\"contained\" onClick={handlePreviewClick} disabled={mdPreview}>Preview Markdown</Button>\n                    </>\n                )}\n                <FormSubmitButton label=\"Save\" />\n            </form>\n\n\n            <div className={classes.updates}>\n                {<Typography variant=\"h5\" gutterBottom>Updates</Typography>}\n                {projects[params.id].updates.length === 0 && <Typography>You haven't posted any updates to this project yet</Typography>}\n                {projects[params.id].updates.map((update: any, i: number) => (\n                    <Card key={i}>\n                        <CardContent>\n                            <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button onClick={() => deleteUpdate(update)}>Delete</Button>\n                        </CardActions>\n                    </Card>\n                ))}\n            </div>\n        </div>\n    )\n\n}","import AuthIsLoaded from \"./AuthIsLoaded\";\nexport default AuthIsLoaded;","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/reducer\";\nimport {isLoaded, useFirebase} from \"react-redux-firebase\";\nimport {useHistory} from \"react-router-dom\";\nimport useSnax from \"../../hooks/useSnax\";\n\nexport default function AuthIsLoaded({ children }: { children: JSX.Element }) {\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const firebase = useFirebase();\n    const history = useHistory();\n    const {setSnack} = useSnax();\n\n    if (!isLoaded(auth)) {\n        return <>Loading...</>\n    }\n\n    // if auth.email exists, and is not part of the swarthmore domain, log the user out\n    if (isLoaded(auth) && auth.email) {\n        if (!(/@swarthmore.edu\\s*$/.test(auth.email))) {\n            firebase.logout().then(() => {\n                setSnack({ type: \"error\", msg: \"User email must be part of the @swarthmore.edu domain\", open: true })\n                history.push(\"/\");\n            });\n        }\n    }\n\n    return children;\n}","import * as React from \"react\";\nimport {createMuiTheme} from \"@material-ui/core\";\nimport {ThemeProvider as MuiThemeProvider} from \"@material-ui/core/styles\";\nimport {blue, deepPurple, lightBlue, red} from \"@material-ui/core/colors\";\nimport {useContext} from \"react\";\nimport {DarkModeCtx} from \"./contexts/DarkMode\";\n\nconst makeTheme = (isOn: boolean) => {\n    return createMuiTheme(\n        !isOn ? {\n            palette: {\n                type: \"light\", primary: red, secondary: blue,\n            }\n        } : {\n            palette: {\n                type: \"dark\", primary: deepPurple, secondary: lightBlue\n            }\n        }\n    );\n}\n\nexport const ThemeProvider = ({ children }: { children: JSX.Element }) => {\n    const {isOn} = useContext(DarkModeCtx);\n    return (\n        <MuiThemeProvider theme={makeTheme(isOn)}>\n            {children}\n        </MuiThemeProvider>\n    );\n}","import App from \"./App\";\nexport default App;\n","import * as React from \"react\";\nimport firebase from \"firebase/app\";\nimport { rrfConfig } from \"../../config\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport {HashRouter} from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport Props from \"./props\";\nimport SnackbarProvider from \"../../contexts/Snackbar\";\nimport {DarkModeProvider} from \"../../contexts/DarkMode\";\nimport {ThemeProvider} from \"../../theme\";\n\nexport default function App({ store, routes }: Props) {\n\n    // react-redux-firebase props\n    const rrfProps = {\n        firebase,\n        config: rrfConfig,\n        dispatch: store.dispatch,\n        createFirestoreInstance\n    }\n\n    return (\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <DarkModeProvider>\n                    <ThemeProvider>\n                        <SnackbarProvider>\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\n                                <HashRouter>\n                                    <CssBaseline/>\n                                    {routes}\n                                </HashRouter>\n                            </MuiPickersUtilsProvider>\n                        </SnackbarProvider>\n                    </ThemeProvider>\n                </DarkModeProvider>\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport store from \"./store/store\";\nimport createRoutes from \"./routes\";\nimport {version} from \"../package.json\";\nimport {appConfig} from \"./config\";\nimport App from \"./containers/App\";\nimport \"./global.css\";\n\nconst target = document.getElementById(\"root\");\nReactDOM.render(<App store={store} routes={createRoutes()} />, target);\n\n// change the title\nconst title = [appConfig.name, version].join(\" \");\nwindow.document.title = title;\n\n","import * as React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport CoreLayout from \"../layouts/CoreLayout\";\nimport HomeRoute from \"./Home\";\nimport NotFoundRoute from \"./NotFound\";\nimport ProjectsRoute from \"./Projects\";\nimport AddProjectRoute from \"./AddProject\";\nimport ManageRoute from \"./Manage\";\nimport EditProjectRoute from \"./EditProject\";\nimport AuthIsLoaded from \"../containers/AuthIsLoaded\";\n\nexport default function createRoutes() {\n    return (\n        <CoreLayout>\n            <AuthIsLoaded>\n                <Switch>\n                    <Route exact path={HomeRoute.path} component={HomeRoute.component} />\n                    {[\n                        AddProjectRoute,\n                        EditProjectRoute,\n                        ProjectsRoute,\n                        ManageRoute\n                    ].map((settings: any, i) => <Route key={i} {...settings} />)}\n                    <Route component={NotFoundRoute.component} />\n                </Switch>\n            </AuthIsLoaded>\n        </CoreLayout>\n    );\n\n}\n"],"sourceRoot":""}