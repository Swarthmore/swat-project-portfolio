{"version":3,"sources":["config.ts","store/reducer.ts","store/store.ts","layouts/CoreLayout/styles.ts","containers/Navbar/LogoutButton/LogoutButton.tsx","containers/Navbar/ProfileButton/ProfileButton.tsx","containers/Navbar/styles.ts","containers/Navbar/index.ts","containers/Navbar/Navbar.tsx","containers/LoginCard/styles.ts","containers/LoginCard/index.ts","containers/LoginCard/LoginCard.tsx","containers/SideMenu/styles.ts","hooks/useUid.ts","constants/paths.ts","containers/SideMenu/index.ts","containers/SideMenu/SideMenu.tsx","hooks/useTeams.ts","layouts/CoreLayout/index.ts","layouts/CoreLayout/CoreLayout.tsx","routes/Home/components/styles.ts","routes/Home/index.ts","routes/Home/components/Home.tsx","routes/NotFound/components/styles.ts","routes/NotFound/index.ts","routes/NotFound/components/NotFound.tsx","routes/Projects/components/styles.ts","containers/ProjectCard/styles.ts","utils/index.ts","containers/ProjectCard/ProjectCard.tsx","routes/Projects/index.ts","routes/Projects/components/Projects.tsx","routes/AddProject/components/styles.ts","hooks/useInput.ts","containers/FormSubmitButton/FormSubmitButton.tsx","routes/AddProject/index.ts","routes/AddProject/components/AddProject.tsx","routes/Project/components/styles.ts","containers/StatusUpdate/styles.ts","containers/StatusUpdate/StatusUpdate.tsx","routes/Project/index.ts","routes/Project/components/Project.tsx","routes/User/components/styles.ts","routes/User/index.ts","routes/User/components/User.tsx","routes/Manage/index.ts","routes/Manage/components/ManagePage.tsx","routes/EditProject/components/styles.ts","routes/EditProject/index.ts","routes/EditProject/components/EditProject.tsx","containers/AuthIsLoaded/index.ts","containers/AuthIsLoaded/AuthIsLoaded.tsx","containers/App/styles.ts","theme.ts","containers/App/index.ts","containers/App/App.tsx","index.tsx","routes/index.tsx"],"names":["rrfConfig","userProfile","useFirestoreForProfile","appConfig","rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","createStore","makeStyles","theme","root","flexGrow","content","display","background","palette","paper","children","padding","spacing","LogoutButton","useFirebase","history","useHistory","Tooltip","title","IconButton","color","aria-label","component","onClick","logout","then","push","ProfileButton","auth","useSelector","state","uid","Navbar","classes","styles","AppBar","position","Toolbar","Typography","variant","className","Link","href","isLoaded","isEmpty","top","right","width","LoginCard","Card","CardHeader","CardContent","Button","fullWidth","login","provider","type","maxWidth","borderRight","minHeight","useUid","SINGLE_PATH","LIST_BY_TEAM","SideMenu","pathname","useLocation","useFirestoreConnect","collection","teams","ordered","loaded","useTeams","lastPathPart","split","pop","MenuList","map","team","MenuItem","id","replace","name","Divider","CoreLayout","React","useEffect","row","marginTop","marginBottom","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","dateString","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","ProjectCard","project","rest","useState","expanded","setExpanded","avatar","Avatar","src","meta","createdBy","avatarUrl","subheader","createdOn","updates","length","gutterBottom","value","description","CardActions","disableSpacing","disabled","style","Collapse","in","timeout","unmountOnExit","update","path","props","useParams","populates","child","projects","populate","filteredProjects","Object","keys","key","filter","form","flexDirection","field","mdButton","button","preview","border","boxSizing","useInput","initialValue","setValue","reset","val","bind","onChange","e","target","parse","toISOString","FormSubmitButton","label","size","useFirestore","bindName","resetName","bindDescription","resetDescription","now","deadline","bindDeadline","resetDeadline","markdown","bindMarkdown","resetMarkdown","addProject","add","resetForm","undefined","event","a","preventDefault","toString","ownedBy","res","console","error","onSubmit","TextField","required","DatePicker","format","disablePast","rows","rowsMax","multiline","divider","card","StatusUpdate","setVal","slice","params","doc","isOwner","FieldValue","arrayUnion","i","marginButton","where","userId","log","displayName","storeAs","ownedProject","onDeleteClick","confirm","delete","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","substr","onEditClick","updatedProject","deleteUpdate","updatedData","arrayRemove","AuthIsLoaded","blue","colors","MuiTheme","createMuiTheme","primary","main","secondary","App","store","routes","rrfProps","config","dispatch","createFirestoreInstance","ThemeProvider","utils","MomentUtils","CssBaseline","document","getElementById","ReactDOM","exact","HomeRoute","AddProjectRoute","EditProjectRoute","ProjectsRoute","ProjectRoute","UserRoute","ManageRoute","settings","NotFoundRoute"],"mappings":"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","file":"static/js/main.e9f83592.chunk.js","sourcesContent":["/**\n * @description\n * \n * This file contains configurations for packages used in this app\n * \n */\n\n// firebase config\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const fbConfig = {\n    apiKey: \"AIzaSyDyQLHfX6av-b8p1BkvZiAR6W387AqdmT4\",\n    authDomain: \"swart-project-portfolio.firebaseapp.com\",\n    projectId: \"swart-project-portfolio\",\n    storageBucket: \"swart-project-portfolio.appspot.com\",\n    messagingSenderId: \"418686934766\",\n    appId: \"1:418686934766:web:8064a0a8c9bb5f20de5dff\",\n    measurementId: \"G-7HCHCYKQFS\"\n};\n\n// react-redux-firebase config\nexport const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\n\n// app config\nexport const appConfig = {\n    name: \"Projects @ Swarthmore\"\n}\n","/**\n * @description\n * \n * This file contains the root reducer for the firebase / firestore store\n * \n */\n\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nexport const rootReducer = combineReducers({\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","/**\n * @description\n * \n * This file includes configuration and setup for react-redux-firebase. It exports both the rrfConfig,\n * which is used by the root-level provider in the App component, as well as the firebase store.\n * \n */\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport { createStore } from \"redux\";\nimport { fbConfig, rrfConfig } from \"../config\";\nimport { rootReducer } from \"./reducer\";\n\n// initialize firebase\nfirebase.initializeApp({ ...fbConfig, ...rrfConfig})\n\n// initialize firestore\nfirebase.firestore()\n\n// enable analytics\nfirebase.analytics();\n\n// initial state for this store\nconst initialState = {}\n\nexport default createStore(rootReducer, initialState)","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    content: {\n        display: \"flex\",\n        flexGrow: 1,\n        background: theme.palette.background.paper\n    },\n    children: {\n        flexGrow: 1,\n        padding: theme.spacing(4)\n    }\n}));\n","/**\n * @description\n * \n * This component provides a styled logout button that when clicked\n * will log the user out of the app. This should destroy session/cookie\n * data for the user.\n * \n */\n\nimport * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tooltip } from \"@material-ui/core\";\n\nexport default function LogoutButton() {\n\n    const firebase = useFirebase();\n    const history = useHistory();\n\n    function onClick() {\n        firebase.logout().then(() => {\n            history.push(\"/\");\n        });\n    }\n\n    return (\n        <Tooltip title=\"Logout of app\">\n            <IconButton color=\"inherit\" aria-label=\"Logout of app\" component=\"span\" onClick={onClick}>\n                <ExitToAppIcon />\n            </IconButton>\n        </Tooltip>      \n    )\n\n}","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ProfileIcon from \"@material-ui/icons/Person\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ProfileButton() {\n\n    const auth = useSelector((state: any) => state.firebase.auth)\n    const history = useHistory();\n\n    if (!auth.uid) {\n        return <>no uid</>\n    }\n    return (\n        <Tooltip title=\"View Profile\">\n            <IconButton color=\"inherit\" aria-label=\"View Profile\" component=\"span\" onClick={() => history.push(\"/manage\")}>\n                <ProfileIcon />\n            </IconButton>\n        </Tooltip>      \n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    title: {\n        flexGrow: 1\n    }\n}));","import Navbar from \"./Navbar\";\nexport default Navbar;\n","/**\n * @description\n * \n * This file contains the main navbar for the app. It will appear on the top of the page.\n * \n */\n\nimport * as React from \"react\";\nimport { AppBar, Link, Toolbar, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { RootState } from \"../../store/reducer\";\nimport LogoutButton from \"./LogoutButton/LogoutButton\";\nimport ProfileButton from \"./ProfileButton/ProfileButton\";\nimport styles from \"./styles\";\nimport { appConfig } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Navbar() {\n\n    const auth = useSelector((state: RootState) => state.firebase.auth)\n    const classes = styles();\n    const history = useHistory();\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title} color=\"inherit\"><Link color=\"inherit\" href=\"/\">{appConfig.name}</Link></Typography>\n                {/* Display the logout button if the user is logged in */}\n                {isLoaded(auth) && !isEmpty(auth) && <ProfileButton />}\n                {isLoaded(auth) && !isEmpty(auth) && <LogoutButton />}\n            </Toolbar>\n        </AppBar>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        width: \"400px\",\n        background: theme.palette.background.paper\n    },\n}))","import LoginCard from \"./LoginCard\";\nexport default LoginCard;","import * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { Card, CardContent, CardHeader, Button } from \"@material-ui/core\";\nimport { appConfig } from \"../../config\";\nimport styles from \"./styles\";\n\nexport default function LoginCard() {\n\n    const firebase = useFirebase();\n    const classes = styles();\n    \n    function loginWithGoogle() {\n        return firebase.login({ provider: \"google\", type: \"popup\" })\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader \n                title={appConfig.name}\n            />\n            <CardContent>\n                <Button color=\"primary\" fullWidth variant=\"contained\" onClick={loginWithGoogle}>Sign in with Google</Button>\n            </CardContent>\n        </Card>\n    )\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: 250,\n        width: 250,\n        borderRight: `1px solid #ccc`,\n        minHeight: \"100vh\"\n    }\n}));","import {useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducer\";\n\nexport default function useUid() {\n    const { uid } = useSelector((state: RootState) => state.firebase.auth);\n    return { uid }\n}","export const LOGIN_PATH = \"/login\";\nexport const ACCOUNT_PATH = \"/account\";\nexport const SINGLE_PATH = \"/single-project/:id\";\nexport const LIST_BY_TEAM = \"/projects/by-team/:id\";\nexport const LIST_BY_USER = \"/projects/by-user/:id\";\nexport const ADD_PROJECT_ROUTE = \"/projects/add\";\nexport const MANAGE = \"/manage\";\nexport const LOGOUT_PATH = \"/logout\";\nexport const HOME_PATH = \"/\";","import SideMenu from \"./SideMenu\";\nexport default SideMenu;\n","import React from \"react\";\nimport { MenuList, MenuItem, Divider } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport useTeams from \"../../hooks/useTeams\";\nimport useUid from \"../../hooks/useUid\";\nimport {Team} from \"../../types\";\nimport {ADD_PROJECT_ROUTE, LIST_BY_TEAM} from \"../../constants/paths\";\n\nexport default function SideMenu() {\n\n    const classes = styles();\n    const history = useHistory();\n    const { pathname } = useLocation();\n\n    const { uid } = useUid();\n    const { teams, loaded } = useTeams();\n\n    const onSelect = (id: string) => {\n        history.push(LIST_BY_TEAM.replace(\":id\", id));\n    }\n\n    const onShowAllClick = () => {\n        history.push(LIST_BY_TEAM.replace(\":id\", \"all\"));\n    }\n\n    const onAddClick = () => {\n        history.push(ADD_PROJECT_ROUTE);\n    }\n\n    const lastPathPart = pathname.split(\"/\").pop();\n\n    return !loaded\n        ? <>Loading</>\n        : (\n            <MenuList className={classes.root}>\n                {teams.map((team: Team) => <MenuItem key={team.id} onClick={() => onSelect(team.id)}>\n                    {lastPathPart === team.id ? <strong>{team.name}</strong> : team.name}\n                </MenuItem>)}\n                <Divider />\n                <MenuItem onClick={onShowAllClick}>\n                    {lastPathPart === \"all\" ? <strong>All Projects</strong> : \"All Projects\"}\n                </MenuItem>\n                <Divider />\n                {uid && <MenuItem onClick={onAddClick}>\n                    {lastPathPart === \"add\" ? <strong>Add Project</strong> : \"Add Project\"}\n                </MenuItem>}\n            </MenuList>\n        );\n\n}","import {isLoaded, useFirestoreConnect} from \"react-redux-firebase\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducer\";\n\nexport default function useTeams() {\n    useFirestoreConnect([\n        {collection: \"teams\"}\n    ]);\n    const { teams } = useSelector((state:RootState) => state.firestore.ordered)\n    return {\n        loaded: isLoaded(teams),\n        teams\n    }\n}","import CoreLayout from \"./CoreLayout\";\nexport default CoreLayout;","import React from \"react\";\nimport styles from \"./styles\";\nimport Props from \"./props\";\nimport Navbar from \"../../containers/Navbar\";\nimport LoginCard from \"../../containers/LoginCard\";\nimport SideMenu from \"../../containers/SideMenu\";\nimport useUid from \"../../hooks/useUid\";\n\nexport default function CoreLayout({ children }: Props) {\n\n    const classes = styles();\n\n    const { uid } = useUid();\n\n    return (\n        <div className={classes.root}>\n            {!uid && <LoginCard />}\n            <Navbar />\n            <div className={classes.content}>\n                <SideMenu />\n                <div className={classes.children}>{children}</div>\n            </div>\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {}\n}));","import HomePage from \"./components/Home\";\n\nexport default {\n    path: \"/\",\n    component: HomePage\n};","import React from \"react\";\nimport styles from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function Home() {\n\n    const classes = styles();\n    const history = useHistory();\n\n    React.useEffect(() => history.push(\"projects/by-team/all\"), []);\n    return <></>\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {}\n}));\n","import NotFoundPage from \"./components/NotFound\";\n\nexport default {\n    component: NotFoundPage \n};","import * as React from \"react\";\nimport styles from \"./styles\"\n\nexport default function NotFoundPage() {\n\n    const classes = styles();\n\n    return (\n        <div className={classes.root}>\n            <p>404</p>\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {},\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    }\n}));\n","export function createMeta(createdBy: string)\n{\n    return {\n        createdBy,\n        createdOn: Date.now().toString(),\n        visible: true\n    }\n}\n\nexport function dateString(timestamp: string)\n{\n    const date = new Date(+timestamp);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}","import React from \"react\";\nimport { Divider, Collapse, IconButton, Button, Card, CardContent, CardActions, Typography, CardHeader, Avatar } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport styles from \"./styles\";\nimport { createMeta, dateString } from \"../../utils\";\nimport {SINGLE_PATH} from \"../../constants/paths\";\n\nexport default function ProjectCard({ project, ...rest }: any) {\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const history = useHistory();\n    const classes = styles();\n\n    const handleExpandClick = () => setExpanded(!expanded);\n\n    return (\n        <Card {...rest}>\n\n            <CardHeader\n                avatar={\n                    <Avatar src={project.meta.createdBy.avatarUrl} />\n                }\n                title={project.name}\n                subheader={dateString(project.meta.createdOn)}\n            />\n\n            <CardContent>\n                {project.updates && project.updates.length > 0 && <Typography variant=\"caption\" gutterBottom>Latest update: {dateString(project.updates[0].createdOn)} {project.updates[0].value}</Typography>}\n                <Typography>{project.description}</Typography>\n            </CardContent>\n\n            <CardActions disableSpacing>\n                <Button onClick={() => history.push(SINGLE_PATH.replace(\":id\", project.id))}>Read More</Button>\n                <IconButton onClick={handleExpandClick} disabled={project.updates && project.updates.length === 0} style={{ marginLeft: \"auto\" }}>\n                    <ExpandMoreIcon className={expanded ? classes.expand : classes.expandOpen} />\n                </IconButton>\n            </CardActions>\n\n            {project.updates && project.updates.length > 0 && <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                {project.updates.map((update:any) => (\n                    <Card key={update.value}>\n                        <CardContent>\n                            <Typography variant=\"subtitle2\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                    </Card>\n                ))}\n            </Collapse>}\n        </Card>\n    );\n\n}","import ProjectsPage from \"./components/Projects\";\nimport { LIST_BY_TEAM as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectsPage\n}","import React, {useEffect, useState} from \"react\";\nimport styles from \"./styles\";\nimport {useFirestoreConnect, populate, isLoaded, isEmpty, firebaseConnect} from \"react-redux-firebase\";\nimport {connect, useSelector} from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport ProjectCard from \"../../../containers/ProjectCard/ProjectCard\";\nimport { Project } from \"../../../types/index\";\nimport { PageTitle } from \"../../../containers/PageTitle\";\nimport {RootState} from \"../../../store/reducer\";\nimport useTeams from \"../../../hooks/useTeams\";\n\nexport default function Projects(props: any) {\n\n    const [ready, setReady] = useState(false);\n    const [team, setTeam] = useState(\"\");\n\n    const classes = styles();\n\n    // get the team id from url params\n    const { id }: { id: string } = useParams();\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n\n    useFirestoreConnect([\n        { \n            collection: \"projects\",\n            populates,\n            ...(id ? [\"meta.createdBy.team\", \"==\", id]: {})\n        },\n    ]);\n\n    // at this point, the results aren't filtered because we need to populate the projects to get\n    // the team id\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    // filter the projects by team id\n    const filteredProjects = projects && Object.keys(projects)\n        .map(key => ({ id: key, ...projects[key] }))\n        .filter(project => (id === \"all\" ? project : project.meta.createdBy.team === id))\n\n    return (\n        <div className={classes.root}>\n            {filteredProjects && filteredProjects.map((project: Project) => <ProjectCard key={project.id} project={project} className={classes.row} />)}\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(2),\n        maxWidth: 200\n    },\n    preview: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    }\n}));\n","/**\n * @description\n * \n * This file provides React hook for an input field.\n * \n * @example\n * \n * const { value, bind, reset } = useInput('');\n * <input type=\"text\" {...bind} />\n * \n */\n\nimport { useState } from \"react\";\n\nexport default function useInput(initialValue: string) {\n\n    const [value, setValue] = useState(initialValue)\n\n    return {\n        value,\n        setValue,\n        reset: (val: string|undefined) => val ? setValue(val) : setValue(\"\"),\n        bind: {\n            value,\n            onChange: (e: any) => {\n                // If event.target is set, we can assume the field is a text input with a value property\n                // If event.target is not set, check to see if e is a moment object. If it is a moment object\n                // that means we can use e.toString() to get the date\n                e.target \n                    ? setValue(e.target.value) \n                        : Date.parse(e)\n                            ? setValue(e.toISOString()) : null\n            }\n        }\n    }\n\n}","import { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n        maxWidth: 300\n    }\n}));\n\ninterface Props extends ButtonProps {\n    label: string\n}\n\nexport function FormSubmitButton({ label, ...rest }: Props) {\n\n    const classes = styles();\n\n    return (\n        <Button size=\"large\" variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.root} {...rest}>{label}</Button>\n    );\n\n}","import AddProjectPage from \"./components/AddProject\";\nexport default {\n    path: \"/projects/add\",\n    component: AddProjectPage\n};\n\n","import { TextField, Button, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Project } from \"../../../types\";\nimport { RootState } from \"../../../store/reducer\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\n\nexport default function AddProjectPage() {\n\n    // whether or not to show markdown preview\n    const [mdPreview, setMdPreview] = React.useState(false);\n\n    const firestore = useFirestore();\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const classes = styles();\n\n    const history = useHistory();\n\n    // the name field\n    const { \n        value: name, \n        bind: bindName, \n        reset: resetName \n    } = useInput(\"\");\n\n    // the description field\n    const { \n        value: description, \n        bind: bindDescription, \n        reset: resetDescription \n    } = useInput(\"\");\n\n    // the deadline field\n    const { \n        value: deadline, \n        bind: bindDeadline, \n        reset: resetDeadline\n    } = useInput(new Date(Date.now()).toISOString());\n\n    // the markdown field\n    const { \n        value: markdown, \n        bind: bindMarkdown, \n        reset: resetMarkdown\n     } = useInput(\"\");\n\n    // adds a project to firestore\n    function addProject(project: Project) {\n        return firestore.collection('projects').add(project);\n    }\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n\n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n        \n        const uid = auth.uid.toString();\n\n        const project: Project = {\n            name,\n            description,\n            markdown,\n            deadline,\n            meta: {\n                ownedBy: uid,\n                createdBy: uid,\n                createdOn: Date.now().toString() \n            },\n            updates: []\n        }\n\n        try {\n            const res = await addProject(project);\n            resetForm();\n            history.push(`/projects/${res.id}`);\n            \n        } catch (error) {\n            console.error(error);\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Add Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n\n                <DatePicker label=\"Project Deadline\" className={classes.field} format=\"MM/DD/yyyy\" disablePast={true} {...bindDeadline} />\n                \n                <div className={classes.field}>\n                    <label>\n                        Tell us about your project. You can use Markdown, but keep it under 400 characters\n                    </label>\n                    <TextField className={classes.field} fullWidth label=\"Markdown description\" rows={10} rowsMax={10} variant=\"filled\" multiline {...bindMarkdown} />\n                </div>\n\n                <FormSubmitButton label=\"Submit\" />\n            </form>\n        </div>\n    )\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    card: {\n        marginBottom: theme.spacing(3)\n    },\n    update: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2)\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nexport default function StatusUpdate({ onSubmit }: { onSubmit: (val: string) => void }) {\n\n    const [val, setVal] = React.useState(\"\");\n\n    const classes = styles();\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        // restrict to 300 characters\n        setVal(\n            e.target.value.slice(0, 300)\n        )\n    }\n\n    const onClick = (val:string) => {\n        try {\n            onSubmit(val);\n            // clear the form\n            setVal(\"\");\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    \n    return (\n        <div className={classes.root}>\n            <TextField value={val} onChange={onChange} fullWidth variant=\"filled\" label=\"Share an update about this project\" />\n            <Button className={classes.button} color=\"primary\" variant=\"contained\" onClick={() => onClick(val)} disabled={val.length < 5}>Post Update</Button>\n        </div>\n    )\n\n}","import ProjectPage from \"./components/Project\";\nimport { SINGLE_PATH as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectPage\n}","import React from \"react\";\nimport { Card, CardContent, Typography, Divider } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty, useFirestore } from \"react-redux-firebase\";\nimport ReactMarkdown from \"react-markdown\";\nimport PostUpdate from \"../../../containers/StatusUpdate/StatusUpdate\";\nimport firebase from \"firebase\";\nimport { dateString } from \"../../../utils\";\nimport {Project} from \"../../../types\";\nimport {RootState} from \"../../../store/reducer\";\n\nexport default function ProjectPage() {\n\n    const classes = styles();\n    const history = useHistory();\n\n    const firestore = useFirestore();\n    const auth = useSelector((state: any) => state.firebase.auth);\n\n    const params: { id: string } = useParams();\n\n    // if there is no project id provided, redirect the user to the home page\n    if (!params.id) {\n        history.push(\"/\");\n    }\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = params.id;\n\n    useFirestoreConnect([ \n        { collection, populates, doc }\n    ])\n\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    // Show message while project is loading\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project \n    if (isEmpty(projects)) {\n        return <div>Project is empty</div>\n    }\n\n    const project: Project = {\n        id: params.id,\n        ...projects[params.id]\n    }\n\n    const isOwner = project.meta.ownedBy === auth?.uid;\n\n    const onSubmit = async (value: string) => {\n        const update = {\n            value: value,\n            createdOn: Date.now().toString(),\n            createdBy: auth.uid\n        }\n        await firestore.update(`projects/${project.id}`, { updates:  firebase.firestore.FieldValue.arrayUnion(update) });\n    }\n    \n    return (\n        <div className={classes.root}>\n            {isOwner && <PostUpdate onSubmit={onSubmit} />}\n\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"h2\">{project.name}</Typography>\n                    <Typography variant=\"subtitle1\">Started on {dateString(project.meta.createdOn)}</Typography>\n                    <Typography variant=\"subtitle2\">{project.description}</Typography>\n                    {project.markdown && <ReactMarkdown>{project.markdown}</ReactMarkdown>}\n                </CardContent>\n            </Card>\n\n\n            {project.updates && project.updates.length > 0 && <Typography variant=\"h4\">Updates</Typography>}\n            {project.updates && project.updates.map((update: any, i: number) => (\n                <Card key={i} className={classes.update}>\n                    <CardContent>\n                        <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                        <Typography>{update.value}</Typography>\n                    </CardContent>\n                </Card>\n            ))}\n\n\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginButton: theme.spacing(1)\n    }\n}));\n","import UserPage from \"./components/User\";\nimport { LIST_BY_USER as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: UserPage \n}","import React from \"react\";\nimport styles from \"./styles\"\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport ProjectCard from \"../../../containers/ProjectCard/ProjectCard\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function UserPage() {\n\n    const classes = styles();\n\n    const params: { userId: string } = useParams();\n\n    const collection = \"projects\";\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }]; \n\n    useFirestoreConnect([\n        {\n            collection,\n            populates,\n            where: [\"meta.createdBy\", \"==\", params.userId]\n        }\n    ])\n\n    const projects = useSelector((state: any) => populate(state.firestore, \"projects\", populates));\n\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    if (isEmpty(projects)) {\n        return <div>User has no projects</div>\n    }\n\n    console.log(\n        projects[Object.keys(projects)[0]]\n    )\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Projects by {projects[Object.keys(projects)[0]].meta.createdBy.displayName}</Typography>\n            {Object.keys(projects).map((key: string) => \n                <div className={classes.row} key={key}>\n                    <ProjectCard project={projects[key]} />\n                </div>\n            )}\n        </div>\n    );\n\n}\n","import ManagePage from \"./components/ManagePage\";\n\nexport default {\n    path: \"/manage\",\n    component: ManagePage \n};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, isLoaded, isEmpty, useFirestore } from \"react-redux-firebase\";\nimport { RootState } from \"../../../store/reducer\";\nimport { useHistory } from \"react-router-dom\";\nimport { Paper, Table, TableBody, TableHead, TableCell, TableContainer, TableRow, Button } from \"@material-ui/core\";\nimport { Project } from \"../../../types\";\nimport { dateString } from \"../../../utils\";\nimport useUid from \"../../../hooks/useUid\";\n\nexport default function ManagePage() {\n\n    const history = useHistory();\n\n    const firestore = useFirestore();\n\n    const { uid } = useUid();\n\n    // at this point we have the user id\n    useFirestoreConnect([\n        { collection: \"projects\", where: [\"meta.createdBy\", \"==\", uid], storeAs: \"ownedProject\" }\n    ]);\n\n    const projects = useSelector((state: RootState) => state.firestore.ordered.ownedProject);\n\n    if (!isLoaded(projects)) {\n        return <>Loading...</>\n    }\n\n    if (isEmpty(projects)) {\n        return <>You have no projects</>\n    }\n\n    const onEditClick = (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        e.preventDefault();\n        history.push(`/projects/edit/${project.id}`);\n    }\n\n    const onDeleteClick = async (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        try {\n            e.preventDefault();\n            const confirmation = confirm(\"WARNING: This action is permanent. Click OK to proceed.\");\n            if (!confirmation) return;\n            await firestore.collection(\"projects\").doc(project.id).delete();\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell>Deadline</TableCell>\n                        <TableCell>Created</TableCell>\n                        <TableCell>Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {projects.map((project: Project) => (\n                        <TableRow key={project.id || project.name}>\n                            <TableCell>{project.name}</TableCell>\n                            <TableCell>{project.description.length > 100 ? project.description.substr(0, 100) + \"...\" : project.description}</TableCell>\n                            <TableCell>{project.deadline && new Date(project.deadline).toLocaleDateString()}</TableCell>\n                            <TableCell>{dateString(project.meta.createdOn)}</TableCell>\n                            <TableCell>\n                                <Button onClick={e => onEditClick(e, project)}>Edit</Button>\n                                <Button onClick={e => onDeleteClick(e, project)}>Delete</Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(1)\n    },\n    preview: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    },\n    updates: {\n        marginTop: theme.spacing(2)\n    }\n}));\n","import EditProjectPage from \"./components/EditProject\";\nexport default {\n    path: \"/projects/edit/:id\",\n    component: EditProjectPage \n};\n\n","import React from \"react\";\nimport { TextField, Button, Typography, Card, CardContent, CardActions } from \"@material-ui/core\";\nimport { useFirestore, useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { RootState } from \"../../../store/reducer\";\nimport { dateString } from \"../../../utils\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\nimport {HOME_PATH, SINGLE_PATH} from \"../../../constants/paths\";\n\nexport default function EditProjectPage() {\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n    const firestore = useFirestore();\n\n    if (!params.id) {\n        history.push(\"/\");\n    }\n\n    const classes = styles();\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = params.id;\n\n    useFirestoreConnect([\n        { collection, populates, doc }\n    ]);\n\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    // Show message while project is loading\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project \n    if (isEmpty(projects)) {\n        return <div>Project is empty</div>\n    }\n\n    // the name field\n    const { \n        value: name, \n        bind: bindName, \n        reset: resetName \n    } = useInput(projects[params.id].name);\n\n    // the description field\n    const { \n        value: description, \n        bind: bindDescription, \n        reset: resetDescription \n    } = useInput(projects[params.id].description);\n\n    // the deadline field\n    const { \n        value: deadline, \n        bind: bindDeadline, \n        reset: resetDeadline\n    } = useInput(projects[params.id].deadline);\n\n    // the markdown field\n    const { \n        value: markdown, \n        bind: bindMarkdown, \n        reset: resetMarkdown\n    } = useInput(projects[params.id].markdown);\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n \n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n        \n        const updatedProject = {\n            name,\n            description,\n            markdown,\n            deadline\n        }\n\n        try {\n            await firestore.update(`projects/${params.id}`, updatedProject)\n            resetForm();\n            history.push(SINGLE_PATH.replace(\":id\", params.id));\n\n        } catch (error) {\n            console.error(error);\n        }\n\n    }\n\n    const deleteUpdate = async (update: any) => {\n        try {\n            const updatedData = {\n                updates: firestore.FieldValue.arrayRemove(update)\n            }\n            const confirmed = confirm(\"WARNING: This action is permanent. Proceed?\");\n            if (!confirmed) return;\n            await firestore.update({ collection: \"projects\", doc: params.id }, updatedData);\n            // TODO: this is hacky and should be fixed\n            history.push(HOME_PATH);\n        \n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\" gutterBottom>Edit Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n                <DatePicker className={classes.field} format=\"MM/DD/yyyy\" {...bindDeadline} />\n                <TextField className={classes.field} label=\"Project Markdown\" rows=\"10\" rowsMax=\"10\" variant=\"filled\" multiline fullWidth {...bindMarkdown} />\n                <FormSubmitButton label=\"Save\" />\n            </form>\n\n\n            <div className={classes.updates}>\n                {<Typography variant=\"h5\" gutterBottom>Updates</Typography>}\n                {projects[params.id].updates.length === 0 && <Typography>You haven't posted any updates to this project yet</Typography>}\n                {projects[params.id].updates.map((update: any, i: number) => (\n                    <Card key={i}>\n                        <CardContent>\n                            <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button onClick={() => deleteUpdate(update)}>Delete</Button>\n                        </CardActions>\n                    </Card>\n                ))}\n            </div>\n        </div>\n    )\n\n}","import AuthIsLoaded from \"./AuthIsLoaded\";\nexport default AuthIsLoaded;","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/reducer\";\nimport { isLoaded } from \"react-redux-firebase\";\n\nexport default function AuthIsLoaded({ children }: { children: JSX.Element }) {\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    if (!isLoaded(auth)) {\n        return <>Loading...</>\n    }\n    return children;\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n    },\n    content: {\n        flexGrow: 1,\n        marginTop: theme.spacing(2)\n    }\n}));","import { createMuiTheme, colors } from \"@material-ui/core\";\nconst { blue } = colors;\n\nconst MuiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(99, 25, 25)\",\n    },\n    secondary: {\n      main: blue[\"500\"],\n    },\n  },\n});\n\nexport { MuiTheme };\n","import App from \"./App\";\nexport default App;\n","/**\n * @description\n * \n * This component is the root-level component for the application\n * \n */\n\nimport * as React from \"react\";\nimport firebase from \"firebase/app\";\nimport { rrfConfig } from \"../../config\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport styles from \"./styles\";\nimport Props from \"./props\";\nimport { MuiTheme } from \"../../theme\";\n\nexport default function App({ store, routes }: Props) {\n\n    const classes = styles();\n\n    // react-redux-firebase props\n    const rrfProps = {\n        firebase,\n        config: rrfConfig,\n        dispatch: store.dispatch,\n        createFirestoreInstance\n    }\n\n    return (\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <ThemeProvider theme={MuiTheme}>\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <HashRouter>\n                            <CssBaseline/>\n                            {routes}\n                        </HashRouter>\n                    </MuiPickersUtilsProvider> \n                </ThemeProvider>\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport store from \"./store/store\";\nimport createRoutes from \"./routes\";\n\nimport App from \"./containers/App\";\nimport \"./global.css\";\n\nconst target = document.getElementById(\"root\");\nReactDOM.render(<App store={store} routes={createRoutes()} />, target);\n","import * as React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport CoreLayout from \"../layouts/CoreLayout\";\nimport HomeRoute from \"./Home\";\nimport NotFoundRoute from \"./NotFound\";\nimport ProjectsRoute from \"./Projects\";\nimport AddProjectRoute from \"./AddProject\";\nimport ProjectRoute from \"./Project\";\nimport UserRoute from \"./User\";\nimport ManageRoute from \"./Manage\";\nimport EditProjectRoute from \"./EditProject\";\nimport AuthIsLoaded from \"../containers/AuthIsLoaded\";\n\nexport default function createRoutes() {\n\n    return (\n        <CoreLayout>\n            <AuthIsLoaded>\n                <Switch>\n                    <Route exact path={HomeRoute.path} component={() => <HomeRoute.component />} />\n                    {[\n                        AddProjectRoute,\n                        EditProjectRoute,\n                        ProjectsRoute,\n                        ProjectRoute,\n                        UserRoute,\n                        ManageRoute,\n                    ].map((settings: any, i) => (\n                        <Route key={`Route-${i}`} {...settings} />\n                    ))}\n                    <Route component={NotFoundRoute.component} />\n                </Switch>\n            </AuthIsLoaded>\n        </CoreLayout>\n    );\n\n}\n"],"sourceRoot":""}