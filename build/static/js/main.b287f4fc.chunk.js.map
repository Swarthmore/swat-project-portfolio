{"version":3,"sources":["config.ts","store/reducer.ts","store/store.ts","layouts/CoreLayout/styles.ts","containers/Navbar/LogoutButton/LogoutButton.tsx","containers/Navbar/ProfileButton/ProfileButton.tsx","containers/Navbar/styles.ts","contexts/DarkMode.tsx","containers/DarkModeSwitch/styles.ts","containers/DarkModeSwitch/DarkModeSwitch.tsx","containers/Navbar/index.ts","containers/Navbar/Navbar.tsx","containers/LoginCard/styles.ts","containers/LoginCard/index.ts","containers/LoginCard/LoginCard.tsx","containers/SideMenu/styles.ts","hooks/useTeams.ts","hooks/useUid.ts","constants/paths.ts","containers/SideMenu/Indicator/styles.ts","containers/SideMenu/Indicator/Indicator.tsx","containers/SideMenu/index.ts","containers/SideMenu/SideMenu.tsx","contexts/Snackbar.tsx","hooks/useSnax.ts","layouts/CoreLayout/index.ts","layouts/CoreLayout/CoreLayout.tsx","routes/Home/components/styles.ts","routes/Home/index.ts","routes/Home/components/Home.tsx","routes/NotFound/components/styles.ts","routes/NotFound/index.ts","routes/NotFound/components/NotFound.tsx","routes/Projects/components/styles.ts","containers/PageTitle/PageTitle.tsx","containers/PCard/styles.ts","utils/index.ts","containers/PCard/PCard.tsx","routes/Projects/index.ts","routes/Projects/components/Projects.tsx","routes/AddProject/components/styles.ts","hooks/useInput.ts","containers/FormSubmitButton/FormSubmitButton.tsx","containers/MarkdownRenderer/MarkdownRenderer.tsx","routes/AddProject/components/AddProject.tsx","routes/AddProject/index.ts","routes/Project/components/styles.ts","containers/StatusUpdate/styles.ts","containers/StatusUpdate/StatusUpdate.tsx","routes/Project/index.ts","routes/Project/components/Project.tsx","routes/User/components/styles.ts","containers/ProjectCard/styles.ts","containers/ProjectCard/ProjectCard.tsx","routes/User/index.ts","routes/User/components/User.tsx","routes/Manage/components/styles.ts","routes/Manage/index.ts","routes/Manage/components/ManagePage.tsx","routes/EditProject/components/styles.ts","routes/EditProject/index.ts","routes/EditProject/components/EditProject.tsx","containers/AuthIsLoaded/index.ts","containers/AuthIsLoaded/AuthIsLoaded.tsx","theme.tsx","containers/App/index.ts","containers/App/App.tsx","index.tsx","routes/index.tsx"],"names":["rrfConfig","userProfile","useFirestoreForProfile","appConfig","rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","createStore","makeStyles","theme","root","flexGrow","content","display","background","palette","paper","children","padding","spacing","LogoutButton","useFirebase","history","useHistory","Tooltip","title","IconButton","color","aria-label","component","onClick","logout","then","push","ProfileButton","auth","useSelector","state","uid","cursor","textDecoration","DarkModeCtx","createContext","isOn","toggle","DarkModeProvider","matches","window","matchMedia","useState","setIsOn","Provider","value","alignItems","paddingLeft","paddingRight","on","fontWeight","off","DarkModeSwitch","classes","useContext","className","Switch","checked","onChange","icon","Brightness7","checkedIcon","Brightness2","Navbar","styles","AppBar","position","Toolbar","Typography","variant","isLoaded","isEmpty","top","right","width","LoginCard","Card","CardHeader","CardContent","Button","fullWidth","login","provider","type","minWidth","borderRight","minHeight","useTeams","useFirestoreConnect","collection","teams","ordered","loaded","useUid","SINGLE_PATH","LIST_BY_TEAM","useStyles","textAlign","text","secondary","Indicator","SideMenu","pathname","useLocation","lastPathPart","split","pop","MenuList","map","team","MenuItem","id","replace","name","Divider","style","marginTop","marginBottom","SnackbarContext","snack","msg","open","setSnack","useSnax","CoreLayout","closeSnack","Snackbar","autoHideDuration","onClose","Alert","elevation","severity","path","to","row","cardGrid","flexDirection","gridItem","PageTitle","gutterBottom","actions","updateDate","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","dateString","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","sortUpdates","updates","Array","from","sort","first","second","createdOn","ReadMoreIconButton","props","More","ExpandIconButton","tooltipMsg","rest","PCard","project","isExpanded","setIsExpanded","parseCreatedOnToDate","str","parseInt","firstUpdate","length","undefined","subheader","meta","createdBy","displayName","avatar","Avatar","src","avatarUrl","CardActions","align","Collapse","in","timeout","unmountOnExit","update","useParams","teamsAreLoaded","populates","child","projects","populate","filteredProjects","Object","keys","key","filter","teamName","Grid","container","item","lg","maxWidth","form","field","mdButton","button","markdown","border","boxSizing","useInput","initialValue","setValue","reset","val","bind","e","target","parse","toISOString","FormSubmitButton","label","size","MarkdownRenderer","plugins","gfm","components","a","Link","markdownCheat","React","mdPreview","setMdPreview","useFirestore","bindName","resetName","description","bindDescription","resetDescription","now","deadline","bindDeadline","resetDeadline","bindMarkdown","resetMarkdown","addProject","add","resetForm","event","preventDefault","toString","ownedBy","res","onSubmit","TextField","required","DatePicker","format","disablePast","href","rows","rowsMax","multiline","disabled","divider","card","skeleton","height","subtitle","section","StatusUpdate","setVal","slice","error","console","doc","isOwner","FieldValue","arrayUnion","i","marginButton","ProjectCard","expanded","setExpanded","disableSpacing","endIcon","params","where","userId","log","descriptionCell","storeAs","ownedProject","onDeleteClick","confirm","delete","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","substr","onEditClick","preview","updatedProject","deleteUpdate","updatedData","arrayRemove","AuthIsLoaded","email","test","makeTheme","createMuiTheme","primary","deepPurple","lightBlue","red","blue","ThemeProvider","App","store","routes","rrfProps","config","dispatch","createFirestoreInstance","utils","MomentUtils","CssBaseline","document","getElementById","ReactDOM","exact","HomeRoute","AddProjectRoute","EditProjectRoute","ProjectsRoute","ProjectRoute","UserRoute","ManageRoute","settings","NotFoundRoute"],"mappings":"yPAoBaA,EAAY,CACrBC,YAAa,QACbC,wBAAwB,GAIfC,EACH,wB,iBChBGC,EAAcC,YAAgB,CACvCC,SAAUC,kBACVC,UAAWC,qBCKfH,IAASI,cAAT,2BFTwB,CACpBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBEEsBjB,IAGzCM,IAASE,YAGTF,IAASY,YAGT,IAEeC,cAAYf,EAFN,I,iBCzBNgB,eAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFC,SAAU,GAEdC,QAAS,CACLC,QAAS,OACTF,SAAU,EACVG,WAAYL,EAAMM,QAAQD,WAAWE,OAEzCC,SAAU,CACNN,SAAU,EACVO,QAAST,EAAMU,QAAQ,Q,8ECGhB,SAASC,IAEpB,IAAM1B,EAAW2B,wBACXC,EAAUC,cAQhB,OACI,cAACC,EAAA,EAAD,CAASC,MAAM,gBAAf,SACI,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,gBAAgBC,UAAU,OAAOC,QARhF,WACIpC,EAASqC,SAASC,MAAK,WACnBV,EAAQW,KAAK,SAMb,SACI,cAAC,IAAD,Q,sBCvBD,SAASC,IAEpB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAgBA,EAAM3C,SAASyC,QAClDb,EAAUC,cAEhB,OAAKY,EAAKG,IAIN,cAACd,EAAA,EAAD,CAASC,MAAM,eAAf,SACI,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,eAAeC,UAAU,OAAOC,QAAS,kBAAMR,EAAQW,KAAK,YAAnG,SACI,cAAC,IAAD,QALD,8CCXAzB,mBAAW,SAAAC,GAAK,MAAK,CAChCgB,MAAO,CACHd,SAAU,EACV4B,OAAQ,UACR,UAAW,CACPC,eAAgB,kB,iBCJfC,EAAcC,wBAAmD,CAC1EC,MAAM,EACNC,OAAQ,eAGCC,EAAmB,SAAC,GAAyC,IAAxC5B,EAAuC,EAAvCA,SAGxB6B,EAAUC,OAAOC,WAAW,gCAAgCF,QAHG,EAI7CG,mBAASH,GAJoC,mBAI9DH,EAJ8D,KAIxDO,EAJwD,KAcrE,OACI,cAACT,EAAYU,SAAb,CAAsBC,MAAO,CAACT,OAAMC,OATzB,WAEPM,GADAP,KAQJ,SAA8C1B,K,kBCrBvCT,eAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFG,QAAS,OACTwC,WAAY,SACZC,YAAa7C,EAAMU,QAAQ,GAC3BoC,aAAc9C,EAAMU,QAAQ,IAEhCqC,GAAI,CACAC,WAAY,OACZ9B,MAAO,WAEX+B,IAAK,CACDD,WAAY,UACZ9B,MAAO,eCNA,SAASgC,IAEpB,IAAMC,EAAUpD,IAFqB,EAGdqD,qBAAWpB,GAA3BE,EAH8B,EAG9BA,KAAMC,EAHwB,EAGxBA,OAEb,OACI,sBAAKkB,UAAWF,EAAQlD,KAAxB,UACI,sBAAMoD,UAAWnB,EAAOiB,EAAQF,IAAME,EAAQJ,GAA9C,mBACA,cAACO,EAAA,EAAD,CACIC,QAASrB,EACTsB,SAAUrB,EACVsB,KAAM,cAACC,EAAA,EAAD,IACNC,YAAa,cAACC,EAAA,EAAD,MAEjB,sBAAMP,UAAWnB,EAAOiB,EAAQJ,GAAKI,EAAQF,IAA7C,qBCtBGY,MCkBA,WAEX,IAAMnC,EAAOC,aAAY,SAACC,GAAD,OAAsBA,EAAM3C,SAASyC,QACxDyB,EAAUW,IACVjD,EAAUC,cAEhB,OACI,cAACiD,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKd,UAAWF,EAAQnC,MAAOE,MAAM,UAAUG,QAAS,kBAAMR,EAAQW,KAAK,MAA/F,SAAsG1C,IACtG,cAACoE,EAAD,IAECkB,mBAAS1C,KAAU2C,kBAAQ3C,IAAS,cAACD,EAAD,IACpC2C,mBAAS1C,KAAU2C,kBAAQ3C,IAAS,cAACf,EAAD,U,oCC9BtCZ,eAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACF+D,SAAU,WACVM,IAAK,OACLC,MAAO,OACPC,MAAO,QACPnE,WAAYL,EAAMM,QAAQD,WAAWE,WCP9BkE,MCKA,WAEX,IAAMxF,EAAW2B,wBACXuC,EAAUW,IAMhB,OACI,eAACY,EAAA,EAAD,CAAMrB,UAAWF,EAAQlD,KAAzB,UACI,cAAC0E,EAAA,EAAD,CACI3D,MAAOlC,IAEX,cAAC8F,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQ3D,MAAM,UAAU4D,WAAS,EAACX,QAAQ,YAAY9C,QAVlE,WACI,OAAOpC,EAAS8F,MAAM,CAAEC,SAAU,SAAUC,KAAM,WAS1C,uC,2BCnBDlF,eAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFuE,MAAO,IACPU,SAAU,IACVC,YAAY,iBACZC,UAAW,aCHJ,SAASC,IACpBC,8BAAoB,CAChB,CAACC,WAAY,WAFc,IAIvBC,EAAU7D,aAAY,SAACC,GAAD,OAAqBA,EAAMzC,UAAUsG,WAA3DD,MACR,MAAO,CACHE,OAAQtB,mBAASoB,GACjBA,SCRO,SAASG,IAEpB,MAAO,CAAE9D,IADOF,aAAY,SAACC,GAAD,OAAsBA,EAAM3C,SAASyC,QAAzDG,KCJL,IAEM+D,EAAc,sBACdC,GAAe,wBCDfC,GAAY/F,aAAW,SAACC,GAAD,MAAkB,CAClDC,KAAM,CACFuE,MAAO,OACPuB,UAAW,QACX7E,MAAOlB,EAAMM,QAAQ0F,KAAKC,eCJnB,SAASC,KACpB,IAAM/C,EAAU2C,KAChB,OAAO,qBAAKzC,UAAWF,EAAQlD,KAAxB,oBCHIkG,OCSA,WAEX,IAAMhD,EAAUW,IACVjD,EAAUC,cACRsF,EAAaC,cAAbD,SAEAvE,EAAQ8D,IAAR9D,IANuB,EAOLwD,IAAlBG,EAPuB,EAOvBA,MAAOE,EAPgB,EAOhBA,OAEf,IAAK7D,EACD,OAAO,gDAGX,IAiBMyE,EAAeF,EAASG,MAAM,KAAKC,MAEzC,OAAQd,EAGA,qBAAKrC,UAAWF,EAAQlD,KAAxB,SACI,eAACwG,EAAA,EAAD,WACKjB,EAAMkB,KAAI,SAACC,GAAD,OAAgB,eAACC,EAAA,EAAD,CAAwBvF,QAAS,kBAxB1DwF,EAwByEF,EAAKE,QAvB5FhG,EAAQW,KAAKqE,GAAaiB,QAAQ,MAAOD,IAD5B,IAACA,GAwByB,UACtBP,IAAiBK,EAAKE,GAAK,iCAASF,EAAKI,OAAiBJ,EAAKI,KAC/DT,IAAiBK,EAAKE,IAAM,cAACX,GAAD,MAFSS,EAAKE,OAI/C,cAACG,EAAA,EAAD,CAASC,MAAO,CAAEC,UAAW,MAAOC,aAAc,SAClD,eAACP,EAAA,EAAD,CAAUvF,QAzBH,WACnBR,EAAQW,KAAKqE,GAAaiB,QAAQ,MAAO,SAwB7B,UACsB,QAAjBR,EAAyB,kDAAgC,eACxC,QAAjBA,GAA0B,cAACJ,GAAD,OAE/B,cAACc,EAAA,EAAD,CAASC,MAAO,CAAEC,UAAW,MAAOC,aAAc,SACjDtF,GACG,gCACI,eAAC+E,EAAA,EAAD,CAAUvF,QA5Bf,WACfR,EAAQW,KJ3BiB,kBIsDL,UACsB,QAAjB8E,EAAyB,iDAA+B,cACvC,QAAjBA,GAA0B,cAACJ,GAAD,OAE/B,eAACU,EAAA,EAAD,CAAUvF,QA5BZ,WAClBR,EAAQW,KJ9BW,YIyDC,UACsB,WAAjB8E,EAA4B,iDAA+B,cAC1C,WAAjBA,GAA6B,cAACJ,GAAD,eAtBpD,gD,oBCjCGkB,GAAkBnF,wBAC3B,CACIoF,MAAO,CAAEpC,KAAM,QAASqC,IAAK,GAAIC,MAAM,GACvCC,SAAU,eAIH,eAAmD,IAAxChH,EAAuC,EAAvCA,SAAuC,EACnCgC,mBAAgB,CACtCyC,KAAM,QACNqC,IAAK,GACLC,MAAM,IAJmD,mBACtDF,EADsD,KAC/CG,EAD+C,KAO7D,OAAO,cAACJ,GAAgB1E,SAAjB,CAA0BC,MAAO,CAAE0E,QAAOG,YAA1C,SACFhH,KCtBM,SAASiH,KAAW,IAAD,EACJrE,qBAAWgE,IACrC,MAAO,CAACC,MAFsB,EACvBA,MACQG,SAFe,EAChBA,UCHHE,OCUA,YAA0C,IAApBlH,EAAmB,EAAnBA,SAE3B2C,EAAUW,IACRjC,EAAQ8D,IAAR9D,IAH4C,EAKxB4F,KAApBJ,EAL4C,EAK5CA,MAAOG,EALqC,EAKrCA,SAETG,EAAa,kBAAMH,EAAS,CAAED,MAAM,EAAOD,IAAK,GAAIrC,KAAM,MAEhE,OACI,sBAAK5B,UAAWF,EAAQlD,KAAxB,WACM4B,GAAO,cAAC,EAAD,IACT,cAAC,EAAD,IACA,sBAAKwB,UAAWF,EAAQhD,QAAxB,UACK0B,GAAO,cAAC,GAAD,IACR,qBAAKwB,UAAWF,EAAQ3C,SAAxB,SAAmCA,OAEtC6G,EAAME,MAAQ,cAACK,GAAA,EAAD,CAAUL,KAAMF,EAAME,KAAMM,iBAAkB,IAAMC,QAAS,kBAAMH,KAAnE,SACX,cAACI,GAAA,EAAD,CAAOC,UAAW,EAAG7D,QAAQ,SAAS8D,SAAUZ,EAAMpC,KAC/C6C,QAAS,kBAAMH,KADtB,SACqCN,EAAMC,YC5B5CvH,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,OCDK,QACXiI,KAAM,IACN9G,UCCW,WAMX,OAJgB0C,KACA6B,IAAR9D,IAGK,cAAC,IAAD,CAAUsG,GAAG,yBAA4B,2DCT3CpI,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,OCDK,QACXmB,UCAW,WAEX,IAAM+B,EAAUW,KAEhB,OACI,qBAAKT,UAAWF,EAAQlD,KAAxB,SACI,wCCPGF,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFC,SAAU,EACVsE,MAAO,QAEX4D,IAAK,CACDlB,UAAWlH,EAAMU,QAAQ,GACzByG,aAAcnH,EAAMU,QAAQ,IAEhC2H,SAAU,CACNjI,QAAS,OACTkI,cAAe,OAEnBC,SAAU,CACNnI,QAAS,OACTF,SAAU,O,UCfX,SAASsI,GAAT,GAAkD,IAA7BxH,EAA4B,EAA5BA,MAExB,OACI,eAACkD,EAAA,EAAD,CAAYC,QAAQ,KAAKsE,cAAY,EAArC,UAAwCzH,EAAxC,e,2CCHOjB,gBAAW,SAACC,GAAD,MAAW,CACjCC,KAAM,CACFG,QAAS,OACTkI,cAAe,SACfpI,SAAU,EACVsE,MAAO,QAEXkE,QAAS,CACLtI,QAAS,OACTC,WAAYL,EAAMM,QAAQD,WAAWE,OAEzCJ,QAAS,CACLD,SAAU,GAEdyI,WAAY,CACRzI,SAAU,GAEd0I,OAAQ,CACJC,UAAW,eACXC,WAAY,OACZC,WAAY/I,EAAMgJ,YAAYC,OAAO,YAAa,CAC9CC,SAAUlJ,EAAMgJ,YAAYE,SAASC,YAG7CC,WAAY,CACRP,UAAW,sB,+BCjBZ,SAASQ,GAAWC,GACvB,IAAMC,EAAO,IAAIC,MAAMF,GACvB,MAAM,GAAN,OAAUC,EAAKE,qBAAf,YAAuCF,EAAKG,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,aAG3F,SAASC,GAAYC,GACxB,OAAOC,MAAMC,KAAKF,GAASG,MAAK,SAACC,EAAOC,GAAR,OAAqBA,EAAOC,WAAaF,EAAME,aCYnF,SAASC,GAAmBC,GACxB,OACI,cAACvJ,EAAA,EAAD,CAASC,MAAM,YAAf,SACI,cAACC,EAAA,EAAD,2BAAgBqJ,GAAhB,aACI,cAACC,GAAA,EAAD,SAUhB,SAASC,GAAT,GAA2E,IAA/CC,EAA8C,EAA9CA,WAAeC,EAA+B,+BACtE,OACI,cAAC3J,EAAA,EAAD,CAASC,MAAOyJ,EAAhB,SACI,cAACxJ,EAAA,EAAD,2BAAgByJ,GAAhB,aACI,cAAC,KAAD,SAMD,SAASC,GAAT,GAAkD,IAAD,MAAhCC,EAAgC,EAAhCA,QAAYF,EAAoB,4BAEtDvH,EAAU2C,KACVjF,EAAUC,cAH4C,EAKxB0B,oBAAS,GALe,mBAKrDqI,EALqD,KAKzCC,EALyC,KAStDC,EAAuB,SAACC,GAE1B,OADa,IAAIxB,KAAKyB,SAASD,IACnBvB,sBAKVyB,EAFaN,EAAQd,SAAWc,EAAQd,QAAQqB,OAAS,EAEjC,UAAGP,EAAQd,eAAX,aAAG,EAAkB,QAAKsB,EAExD,OAEI,eAAC1G,EAAA,EAAD,yBAAMrB,UAAWF,EAAQlD,MAAUyK,GAAnC,cAEI,cAAC/F,EAAA,EAAD,CACI3D,MAAO4J,EAAQ7D,KACfsE,UAAS,UAAKT,EAAQU,KAAKC,UAAUC,YAA5B,eAA8CT,EAAqBH,EAAQU,KAAKlB,YACzFqB,OACI,cAACC,GAAA,EAAD,CACIC,IAAKf,EAAQU,KAAKC,UAAUK,cAKxC,cAAChH,EAAA,EAAD,CAAavB,UAAWF,EAAQhD,QAAhC,SACK+K,GACG,cAAChH,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACK+G,EAAYvI,UAKzB,eAACkJ,GAAA,EAAD,CAAaxI,UAAWF,EAAQuF,QAAhC,UACI,cAAC2B,GAAD,CAAoBhJ,QAAS,kBAAMR,EAAQW,KAAKoE,EAAYkB,QAAQ,MAAO8D,EAAQ/D,IAAM,QACxFqE,GACG,qCACI,cAAChH,EAAA,EAAD,CAAYb,UAAWF,EAAQwF,WAAYxE,QAAQ,UAAU2H,MAAM,SAAS5K,MAAM,gBAAlF,SACK6J,EAAqBG,EAAYd,aAErCQ,EAAQd,UAAW,UAAAc,EAAQd,eAAR,eAAiBqB,QAAS,GAC1C,cAACX,GAAD,CACInH,UAAWwH,EAAa1H,EAAQyF,OAASzF,EAAQiG,WACjD/H,QA3CF,kBAAMyJ,GAAeD,IA4CnBJ,WAAU,UAAKG,EAAQd,QAAQqB,OAArB,uBAA0CP,EAAQd,QAAQqB,OAAU,EAAI,IAAM,YAO3GP,EAAQd,UAAW,UAAAc,EAAQd,eAAR,eAAiBqB,QAAS,GAC1C,cAACY,GAAA,EAAD,CAAUC,GAAInB,EAAYoB,QAAQ,OAAOC,eAAe,EAAxD,SACKrC,GAAYE,MAAMC,KAAKY,EAAQd,UAAUpD,KAAI,SAAAyF,GAAM,OACjD,eAACvH,EAAA,EAAD,WACI,cAACV,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B4G,EAAqBoB,EAAO/B,aACtD,cAAClG,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BgI,EAAOxJ,UAFtBwJ,EAAOxJ,gBC9GjC,QACXuF,QACA9G,UCOW,SAAkBkJ,GAE7B,IAAMnH,EAAUW,KACR+C,EAAuBuF,cAAvBvF,GAHiC,EAICxB,IAAlCG,EAJiC,EAIjCA,MAAe6G,EAJkB,EAI1B3G,OACPU,EAAaC,cAAbD,SAEFkG,EAAY,CAAC,CAAEC,MAAO,iBAAkBtM,KAAM,UAEpDqF,8BAAoB,CAAC,aAEbC,WAAY,WACZ+G,aACIzF,EAAK,CAAC,sBAAuB,KAAMA,GAAK,MAMpD,IAAM2F,EAAW7K,aAAY,SAACC,GAAD,OAAsB6K,mBAAS7K,EAAMzC,UAAW,WAAYmN,MAEzF,IAAKlI,mBAASoI,KAAcH,EACxB,OAAO,6CAGX,GAAIhI,kBAAQmI,GACR,OAAO,oDAIX,IAAME,EAAmBC,OAAOC,KAAKJ,GAChC9F,KAAI,SAAAmG,GAAG,oBAAOhG,GAAIgG,GAAQL,EAASK,OACnCC,QAAO,SAAAlC,GAAO,MAAY,QAAP/D,EAAe+D,EAAUA,EAAQU,KAAKC,UAAU5E,OAASE,KAI3EkG,EAA4B,QAFb3G,EAASG,MAAM,KAAKC,MAEC,MAAQhB,EAAMsH,QAAO,SAACnG,GAAD,OAAgBA,EAAKE,KAAOA,KAAI,GAAGE,MAAQ,UAE1G,OACI,sBAAK1D,UAAWF,EAAQlD,KAAxB,UACI,cAACuI,GAAD,CAAWxH,MAAO+L,IACW,IAA5BL,EAAiBvB,QAAgB,cAACjH,EAAA,EAAD,CAAYC,QAAQ,YAApB,4DACjCuI,EAAiBvB,OAAS,GACvB,cAAC6B,GAAA,EAAD,CAAMC,WAAS,EAACvM,QAAS,EAAzB,SACKgM,EAAiBhG,KAAI,SAACkE,GAAD,OAClB,cAACoC,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAoB9J,UAAWF,EAAQoF,SAAtD,SACI,cAACoC,GAAD,CAAOC,QAASA,KADGA,EAAQ/D,c,iDCvDxC9G,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFmN,SAAU,QACVlN,SAAU,GAEdmN,KAAM,CACFjN,QAAS,OACTkI,cAAe,UAEnBgF,MAAO,CACHpG,UAAWlH,EAAMU,QAAQ,IAE7B6M,SAAU,CACNxE,WAAY,gBACZ7B,UAAWlH,EAAMU,QAAQ,IAE7B8M,OAAQ,CACJtG,UAAWlH,EAAMU,QAAQ,GACzB0M,SAAU,KAEdK,SAAU,CACNC,OAAQ,kBACRC,UAAW,aACXlN,QAAST,EAAMU,QAAQ,GACvBwG,UAAWlH,EAAMU,QAAQ,Q,UCxBlB,SAASkN,GAASC,GAAuB,IAAD,EAEzBrL,mBAASqL,GAFgB,mBAE5ClL,EAF4C,KAErCmL,EAFqC,KAInD,MAAO,CACHnL,QACAmL,SAAU,kBAAMA,GAChBC,MAAO,SAACC,GAAD,OAAiCF,EAANE,GAA+B,KACjEC,KAAM,CACFtL,QACAa,SAAU,SAAC0K,GAIPA,EAAEC,OACIL,EAASI,EAAEC,OAAOxL,OACd6G,KAAK4E,MAAMF,IACPJ,EAASI,EAAEG,kBCjBzC,IAAMvK,GAAS/D,aAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFiH,UAAWlH,EAAMU,QAAQ,GACzB0M,SAAU,SAQX,SAASkB,GAAT,GAAsD,IAA1BC,EAAyB,EAAzBA,MAAU7D,EAAe,0BAElDvH,EAAUW,KAEhB,OACI,cAACe,EAAA,EAAD,yBAAQ2J,KAAK,QAAQrK,QAAQ,YAAYc,KAAK,SAAS/D,MAAM,UAAUmC,UAAWF,EAAQlD,MAAUyK,GAApG,aAA2G6D,K,8CCdpG,SAASE,GAAT,GAAqE,IAAzCjO,EAAwC,EAAxCA,SAAakK,EAA2B,6BAChF,OACI,cAAC,KAAD,aACIgE,QAAS,CAACC,MACVnO,SAAUA,EACVoO,WAAY,CACRC,EAAG,SAACvE,GAAD,OAAW,cAACwE,GAAA,EAAD,2BAAUxE,GAAV,IAAiBpJ,MAAM,kBAErCwJ,ICKR,IAAMqE,GAAgB,mEChBd,QACX7G,KAAM,gBACN9G,UDgBW,WAA0B,MAGH4N,IAAMxM,UAAS,GAHZ,mBAG9ByM,EAH8B,KAGnBC,EAHmB,KAK/B/P,EAAYgQ,yBACZzN,EAAOC,aAAY,SAACC,GAAD,OAAsBA,EAAM3C,SAASyC,QACxDyB,EAAUW,KACT0D,EAAYC,KAAZD,SAID3G,EAAUC,cAZqB,EAmBjC8M,GAAS,IAHF7G,EAhB0B,EAgBjCpE,MACMyM,EAjB2B,EAiBjCnB,KACOoB,EAlB0B,EAkBjCtB,MAlBiC,EA0BjCH,GAAS,IAHF0B,EAvB0B,EAuBjC3M,MACM4M,EAxB2B,EAwBjCtB,KACOuB,EAzB0B,EAyBjCzB,MAzBiC,EAiCjCH,GAAS,IAAIpE,KAAKA,KAAKiG,OAAOpB,eAHvBqB,EA9B0B,EA8BjC/M,MACMgN,EA/B2B,EA+BjC1B,KACO2B,EAhC0B,EAgCjC7B,MAhCiC,EAwChCH,GAAS,IAHHH,EArC0B,EAqCjC9K,MACMkN,EAtC2B,EAsCjC5B,KACO6B,EAvC0B,EAuCjC/B,MAIJ,SAASgC,EAAWnF,GAChB,OAAOzL,EAAUoG,WAAW,YAAYyK,IAAIpF,GAIhD,SAASqF,IACLZ,OAAUjE,GACVoE,OAAiBpE,GACjBwE,OAAcxE,GACd0E,OAAc1E,GApDmB,8CAwDrC,WAAwB8E,GAAxB,oBAAArB,EAAA,6DAEIqB,EAAMC,iBAEAtO,EAAMH,EAAKG,IAAIuO,WAEfxF,EAAmB,CACrB7D,OACAuI,cACA7B,WACAiC,WACApE,KAAM,CACF+E,QAASxO,EACT0J,UAAW1J,EACXuI,UAAWZ,KAAKiG,MAAMW,YAE1BtG,QAAS,IAhBjB,kBAoB0BiG,EAAWnF,GApBrC,OAoBc0F,EApBd,OAqBQL,IACAzI,EAAS,CAAEvC,KAAM,UAAWqC,IAAK,0BAA2BC,MAAM,IAClE1G,EAAQW,KAAKoE,EAAYkB,QAAQ,MAAOwJ,EAAIzJ,KAvBpD,kDA0BQW,EAAS,CAAEvC,KAAM,QAASqC,IAAK,KAAM8I,WAAY7I,MAAM,IA1B/D,2DAxDqC,sBA+FrC,OACI,sBAAKlE,UAAWF,EAAQlD,KAAxB,UACI,cAACiE,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBACA,uBAAMd,UAAWF,EAAQkK,KAAMkD,SAlGF,4CAkG7B,UACI,cAACC,GAAA,EAAD,aAAWtP,MAAM,YAAYmC,UAAWF,EAAQmK,MAAOiB,MAAM,gCAAgCpK,QAAQ,SAASsM,UAAQ,GAAKrB,IAC3H,cAACoB,GAAA,EAAD,aAAWtP,MAAM,YAAYmC,UAAWF,EAAQmK,MAAOiB,MAAM,wCAAwCpK,QAAQ,SAASsM,UAAQ,GAAKlB,IAEnI,cAACmB,GAAA,EAAD,aAAYnC,MAAM,mBAAmBlL,UAAWF,EAAQmK,MAAOqD,OAAO,aAAaC,aAAa,GAAUjB,IAEzGV,EAEO,sBAAK5L,UAAWF,EAAQmK,MAAxB,UACI,cAACpJ,EAAA,EAAD,CAAYC,QAAQ,UAAUsE,cAAY,EAA1C,8BACA,cAACgG,GAAD,CAAkBjO,SAAUiN,IAC5B,cAAC5I,EAAA,EAAD,CAAQC,WAAS,EAAC0J,KAAK,QAAQrK,QAAQ,YAAY9C,QAlB9C,WACzB6N,GAAa,IAiBO,qBAIJ,qCACI,sBAAK7L,UAAWF,EAAQmK,MAAxB,UACI,uHAGA,uBACA,cAACwB,GAAA,EAAD,CAAM+B,KAAM9B,GAAeZ,OAAO,SAASjN,MAAM,YAAjD,kCACA,cAACsP,GAAA,EAAD,aAAWnN,UAAWF,EAAQmK,MAAOxI,WAAS,EAACyJ,MAAM,uBAAuBuC,KAAM,GAAIC,QAAS,GACpF7P,MAAM,YAAYiD,QAAQ,SAAS6M,WAAS,GAAKnB,OAEhE,cAAChL,EAAA,EAAD,CAAQ2J,KAAK,QAAQrK,QAAQ,YAAY9C,QApCtC,WACvB6N,GAAa,IAmC6E+B,SAAUhC,EAAhF,iCAKZ,cAACX,GAAD,CAAkBC,MAAM,mBEjJzBxO,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFC,SAAU,EACV2C,YAAa7C,EAAMU,QAAQ,GAC3BoC,aAAc9C,EAAMU,QAAQ,IAEhCwQ,QAAS,CACLhK,UAAWlH,EAAMU,QAAQ,GACzByG,aAAcnH,EAAMU,QAAQ,IAEhCyQ,KAAM,CACFhK,aAAcnH,EAAMU,QAAQ,IAEhCyL,OAAQ,CACJjF,UAAWlH,EAAMU,QAAQ,GACzByG,aAAcnH,EAAMU,QAAQ,IAEhC+M,SAAU,CACNC,OAAQ,kBACRC,UAAW,aACXlN,QAAST,EAAMU,QAAQ,GACvBwG,UAAWlH,EAAMU,QAAQ,IAE7B0Q,SAAU,CACNlR,SAAU,EACVmR,OAAQ,KAEZrQ,MAAO,CACHkG,UAAWlH,EAAMU,QAAQ,GACzByG,aAAcnH,EAAMU,QAAQ,IAEhC4Q,SAAU,CACNpK,UAAWlH,EAAMU,QAAQ,GACzByG,aAAcnH,EAAMU,QAAQ,IAEhC6Q,QAAS,CACLrK,UAAWlH,EAAMU,QAAQ,GACzByG,aAAcnH,EAAMU,QAAQ,QCrCrBX,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFkH,aAAcnH,EAAMU,QAAQ,IAEhC8M,OAAQ,CACJtG,UAAWlH,EAAMU,QAAQ,GACzByG,aAAcnH,EAAMU,QAAQ,QCJrB,SAAS8Q,GAAT,GAA0E,IAAlDjB,EAAiD,EAAjDA,SAAiD,EAE9DvB,IAAMxM,SAAS,IAF+C,mBAE7EwL,EAF6E,KAExEyD,EAFwE,KAI9EtO,EAAUW,KAmBhB,OACI,sBAAKT,UAAWF,EAAQlD,KAAxB,UACI,cAACuQ,GAAA,EAAD,CAAW7N,MAAOqL,EAAKxK,SAnBd,SAAC0K,GAEduD,EACIvD,EAAEC,OAAOxL,MAAM+O,MAAM,EAAG,OAgBmB5M,WAAS,EAACX,QAAQ,SAASoK,MAAM,qCAAsCrN,MAAM,cACxH,cAAC2D,EAAA,EAAD,CAAQxB,UAAWF,EAAQqK,OAAQtM,MAAM,UAAUiD,QAAQ,YAAY9C,QAAS,kBAbxE,SAAC2M,GACb,IACIuC,EAASvC,GAETyD,EAAO,IACT,MAAOE,GACLC,QAAQD,MAAMA,IAOwEtQ,CAAQ2M,IAAMiD,SAAUjD,EAAI7C,OAAS,EAA3H,4B,cC3BG,QACXjD,OACA9G,UCWW,WAEX,IAAM+B,EAAUW,KACVjD,EAAUC,cACV3B,EAAYgQ,yBACXtN,EAAO8D,IAAP9D,IACAgF,EAAsBuF,cAAtBvF,GACAW,EAAYC,KAAZD,SAGFX,GACDhG,EAAQW,KAAK,KAIjB,IACMqQ,EAAMhL,EAEZvB,8BAAoB,CAChB,CAAEC,WAJa,WAIDsM,SAGlB,IAAMjH,EAAUjJ,aAAY,SAACC,GAAD,OAAsBA,EAAMzC,UAAUsG,QAAQ+G,YAG1E,IAAKpI,mBAASwG,GACV,OAAO,6CAIX,GAAIvG,kBAAQuG,GACR,OAAO,mDAGX,IAAMV,EAAQU,EAAQ,GAEjBV,GACD1C,EAAS,CAAEF,IAAK,qBAAsBrC,KAAM,QAASsC,MAAM,IAG/D,IAAMuK,EAAU5H,EAAMoB,KAAK+E,UAAYxO,EAEjC0O,EAAQ,yCAAG,WAAO5N,GAAP,gBAAAkM,EAAA,sEAEH1C,EAAS,CACXxJ,MAAOA,EACPyH,UAAWZ,KAAKiG,MAAMW,WACtB7E,UAAW1J,GALN,SAOH1C,EAAUgN,OAAV,mBAA6BjC,EAAMrD,IAAM,CAAEiD,QAAU7K,KAASE,UAAU4S,WAAWC,WAAW7F,KAP3F,OAQT3E,EAAS,CAAEF,IAAK,uBAAwBrC,KAAM,UAAWsC,MAAM,IARtD,gDAUTC,EAAS,CAAEF,IAAK,KAAM8I,WAAYnL,KAAM,QAASsC,MAAM,IAV9C,yDAAH,sDAcd,OACI,sBAAKlE,UAAWF,EAAQlD,KAAxB,UAEI,cAACiE,EAAA,EAAD,CAAYC,QAAQ,KAAK2H,MAAM,SAASzI,UAAWF,EAAQnC,MAA3D,SAAmEkJ,EAAMnD,OACzE,eAAC7C,EAAA,EAAD,CAAYC,QAAQ,YAAY2H,MAAM,SAAtC,wBAA2DzC,GAAWa,EAAMoB,KAAKlB,cACjF,cAAClG,EAAA,EAAD,CAAYC,QAAQ,YAAY2H,MAAM,SAAtC,SAAgD5B,EAAMoF,cAErDwC,GAAW,cAAC,GAAD,CAAYvB,SAAUA,IAEjCrG,EAAMJ,SAAWI,EAAMJ,QAAQqB,OAAS,GAAK,cAACjH,EAAA,EAAD,CAAYC,QAAQ,KAAK2H,MAAM,SAASzI,UAAWF,EAAQmO,SAA3D,6BAE7CpH,EAAMJ,SAAWD,GAAYK,EAAMJ,SAASpD,KAAI,SAACyF,EAAa8F,GAAd,OAC7C,sBAAa5O,UAAWF,EAAQgJ,OAAhC,UACI,cAACjI,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCkF,GAAW8C,EAAO/B,aACnD,cAAClG,EAAA,EAAD,UAAaiI,EAAOxJ,UAFdsP,MAMb/H,EAAMuD,UAAY,cAACvJ,EAAA,EAAD,CAAYC,QAAQ,KAAK2H,MAAM,SAASzI,UAAWF,EAAQmO,SAA3D,gCAClBpH,EAAMuD,UAAY,cAACgB,GAAD,CAAkBjO,SAAU0J,EAAMuD,gBCzFlD1N,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFC,SAAU,GAEdkI,IAAK,CACDlB,UAAWlH,EAAMU,QAAQ,GACzBwR,aAAclS,EAAMU,QAAQ,QCNrBX,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,GACN2I,OAAQ,CACJC,UAAW,eACXC,WAAY,OACZC,WAAY/I,EAAMgJ,YAAYC,OAAO,YAAa,CAC9CC,SAAUlJ,EAAMgJ,YAAYE,SAASC,YAG7CC,WAAY,CACRP,UAAW,sBCHJ,SAASsJ,GAAT,GAAiD,IAA1BvH,EAAyB,EAAzBA,QAAYF,EAAa,8BAE3BsE,IAAMxM,UAAS,GAFY,mBAEpD4P,EAFoD,KAE1CC,EAF0C,KAIrDxR,EAAUC,cACVqC,EAAUW,KAIhB,OAEI,eAACY,EAAA,EAAD,2BAAUgG,GAAV,cAEI,cAAC/F,EAAA,EAAD,CACI8G,OACI,cAACC,GAAA,EAAD,CAAQC,IAAKf,EAAQU,KAAKC,UAAUK,YAExC5K,MAAO4J,EAAQ7D,KACfsE,UAAWhC,GAAWuB,EAAQU,KAAKlB,aAGvC,cAACxF,EAAA,EAAD,UACKgG,EAAQd,SAAWc,EAAQd,QAAQqB,OAAS,GACzC,qCACI,cAACjH,EAAA,EAAD,CAAYC,QAAQ,QAAQjD,MAAM,gBAAlC,SAAmDmI,GAAWQ,GAAYE,MAAMC,KAAKY,EAAQd,UAAU,GAAGM,aAC1G,cAAClG,EAAA,EAAD,CAAYC,QAAQ,QAAQjD,MAAM,gBAAlC,SAAmD2I,GAAYE,MAAMC,KAAKY,EAAQd,UAAU,GAAGnH,aAK3G,eAACkJ,GAAA,EAAD,CAAayG,gBAAc,EAA3B,UACI,cAACzN,EAAA,EAAD,CAAQxD,QAAS,kBAAMR,EAAQW,KAAKoE,EAAYkB,QAAQ,MAAO8D,EAAQ/D,MAAvE,uBACA,cAAChC,EAAA,EAAD,CAAQxD,QAzBM,kBAAMgR,GAAaD,IAyBGnB,SAAUrG,EAAQd,SAAsC,IAA3Bc,EAAQd,QAAQqB,OAAclE,MAAO,CAAE6B,WAAY,QAAUyJ,QAC1H,cAAC,KAAD,CAAgBlP,UAAW+O,EAAWjP,EAAQyF,OAASzF,EAAQiG,aADnE,gCAOHwB,EAAQd,SAAWc,EAAQd,QAAQqB,OAAS,GAAK,cAACY,GAAA,EAAD,CAAUC,GAAIoG,EAAUnG,QAAQ,OAAOC,eAAa,EAApD,SAC7CrC,GAAYE,MAAMC,KAAKY,EAAQd,UAAUpD,KAAI,SAACyF,GAAD,OAC1C,cAACzH,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,WACI,cAACV,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCkF,GAAW8C,EAAO/B,aACnD,cAAClG,EAAA,EAAD,UAAaiI,EAAOxJ,YAHjBwJ,EAAOxJ,gBC/CvB,QACXuF,KpCAwB,wBoCCxB9G,UCGW,WAEX,IAAM+B,EAAUW,KAEV0O,EAA6BpG,cAG7BE,EAAY,CAAC,CAAEC,MAAO,iBAAkBtM,KAAM,UAEpDqF,8BAAoB,CAChB,CACIC,WALW,WAMX+G,YACAmG,MAAO,CAAC,iBAAkB,KAAMD,EAAOE,WAI/C,IAAMlG,EAAW7K,aAAY,SAACC,GAAD,OAAgB6K,mBAAS7K,EAAMzC,UAAW,WAAYmN,MAEnF,OAAKlI,mBAASoI,GAIVnI,kBAAQmI,GACD,wDAGXoF,QAAQe,IACJnG,EAASG,OAAOC,KAAKJ,GAAU,KAI/B,sBAAKnJ,UAAWF,EAAQlD,KAAxB,UACI,eAACiE,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAAsCqI,EAASG,OAAOC,KAAKJ,GAAU,IAAIlB,KAAKC,UAAUC,eACvFmB,OAAOC,KAAKJ,GAAU9F,KAAI,SAACmG,GAAD,OACvB,qBAAKxJ,UAAWF,EAAQiF,IAAxB,SACI,cAAC+J,GAAD,CAAavH,QAAS4B,EAASK,MADDA,UAfnC,+C,gHC1BA9M,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFC,SAAU,GAEd0S,gBAAiB,CACb1S,SAAU,O,SCLH,QACXgI,KAAM,UACN9G,UCsBW,WAEX,IAAMP,EAAUC,cACV3B,EAAYgQ,yBACVtN,EAAQ8D,IAAR9D,IACFsB,EAAUW,KACT0D,EAAYC,KAAZD,SAGPlC,8BAAoB,CAChB,CAAEC,WAAY,WAAYkN,MAAO,CAAC,iBAAkB,KAAM5Q,GAAMgR,QAAS,kBAG7E,IAAMrG,EAAW7K,aAAY,SAACC,GAAD,OAAsBA,EAAMzC,UAAUsG,QAAQqN,gBAE3E,IAAK1O,mBAASoI,GACV,OAAO,kDAGX,GAAInI,kBAAQmI,GACR,OAAO,4DAGX,IAKMuG,EAAa,yCAAG,WAAO7E,EAAwCtD,GAA/C,UAAAiE,EAAA,kEAEdX,EAAEiC,iBACmB6C,QAAQ,2DAHf,iEAKR7T,EAAUoG,WAAW,YAAYsM,IAAIjH,EAAQ/D,IAAIoM,SALzC,OAMdzL,EAAS,CAAEF,IAAK,kBAAmBrC,KAAM,UAAWsC,MAAM,IAN5C,kDAQdC,EAAS,CAAEF,IAAK,KAAM8I,WAAYnL,KAAM,QAASsC,MAAM,IARzC,0DAAH,wDAYnB,OACI,cAAC2L,GAAA,EAAD,CAAgB9R,UAAW+R,KAAO9P,UAAWF,EAAQlD,KAArD,SACI,eAACmT,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,0BACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,2BAGR,cAACC,GAAA,EAAD,UACKhH,EAAS9F,KAAI,SAACkE,GAAD,OACV,eAAC0I,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,CACIpL,GAAIvC,EAAYkB,QAAQ,MAAO8D,EAAQ/D,IAAM,IAC7CI,MAAO,CAAElF,eAAgB,QAF7B,SAII,cAACmC,EAAA,EAAD,CAAYhD,MAAM,YAAlB,SAA+B0J,EAAQ7D,WAG/C,cAACwM,GAAA,EAAD,CAAWlQ,UAAWF,EAAQyP,gBAA9B,SACKhI,EAAQ0E,YAAYnE,OAAS,IACxBP,EAAQ0E,YAAYmE,OAAO,EAAG,KAAO,MACrC7I,EAAQ0E,cAElB,cAACiE,GAAA,EAAD,UACK3I,EAAQ8E,UAAY,IAAIlG,KAAKoB,EAAQ8E,UAAUjG,uBAEpD,cAAC8J,GAAA,EAAD,UACKlK,GAAWuB,EAAQU,KAAKlB,aAE7B,eAACmJ,GAAA,EAAD,WACI,cAACtS,EAAA,EAAD,CAAYI,QAAS,SAAA6M,GAAC,OApD9B,SAACA,EAAwCtD,GACzDsD,EAAEiC,iBACFtP,EAAQW,KAAR,yBAA+BoJ,EAAQ/D,KAkDW6M,CAAYxF,EAAGtD,IAAzC,SACI,cAAC,KAAD,MAEJ,cAAC3J,EAAA,EAAD,CAAYI,QAAS,SAAA6M,GAAC,OAAI6E,EAAc7E,EAAGtD,IAA3C,SACI,cAAC,KAAD,WAzBGA,EAAQ/D,IAAM+D,EAAQ7D,kBC9E9ChH,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFmN,SAAU,QACVlN,SAAU,GAEdmN,KAAM,CACFjN,QAAS,OACTkI,cAAe,UAEnBgF,MAAO,CACHpG,UAAWlH,EAAMU,QAAQ,IAE7B6M,SAAU,CACNxE,WAAY,gBACZ7B,UAAWlH,EAAMU,QAAQ,IAE7B8M,OAAQ,CACJtG,UAAWlH,EAAMU,QAAQ,IAE7BiT,QAAS,CACLjG,OAAQ,kBACRC,UAAW,aACXlN,QAAST,EAAMU,QAAQ,GACvBwG,UAAWlH,EAAMU,QAAQ,IAE7BoJ,QAAS,CACL5C,UAAWlH,EAAMU,QAAQ,IAE7B+M,SAAU,CACNC,OAAQ,kBACRC,UAAW,aACXlN,QAAST,EAAMU,QAAQ,GACvBwG,UAAWlH,EAAMU,QAAQ,QCjClB,QACXwH,KAAM,qBACN9G,UCeW,WAEX,IAAMoR,EAAyBpG,cACzBvL,EAAUC,cACV3B,EAAYgQ,yBACV3H,EAAaC,KAAbD,SAEHgL,EAAO3L,IACRhG,EAAQW,KAAK,KAGjB,IAAM2B,EAAUW,KAXsB,EAaJtB,oBAAS,GAbL,mBAa/ByM,EAb+B,KAapBC,EAboB,KAehC5C,EAAY,CAAC,CAAEC,MAAO,iBAAkBtM,KAAM,UAE9C4R,EAAMW,EAAO3L,GAEnBvB,8BAAoB,CAChB,CAAEC,WAJa,WAID+G,YAAWuF,SAG7B,IAAMrF,EAAW7K,aAAY,SAACC,GAAD,OAAsB6K,mBAAS7K,EAAMzC,UAAW,WAAYmN,MAGzF,IAAKlI,mBAASoI,GACV,OAAO,6CAIX,GAAInI,kBAAQmI,GACR,OAAO,mDAhC2B,MAwClCoB,GAASpB,EAASgG,EAAO3L,IAAIE,MAHtBA,EArC2B,EAqClCpE,MACMyM,EAtC4B,EAsClCnB,KACOoB,EAvC2B,EAuClCtB,MAvCkC,EA+ClCH,GAASpB,EAASgG,EAAO3L,IAAIyI,aAHtBA,EA5C2B,EA4ClC3M,MACM4M,EA7C4B,EA6ClCtB,KACOuB,EA9C2B,EA8ClCzB,MA9CkC,EAsDlCH,GAASpB,EAASgG,EAAO3L,IAAI6I,UAHtBA,EAnD2B,EAmDlC/M,MACMgN,EApD4B,EAoDlC1B,KACO2B,EArD2B,EAqDlC7B,MArDkC,EA6DlCH,GAASpB,EAASgG,EAAO3L,IAAI4G,UAHtBA,EA1D2B,EA0DlC9K,MACMkN,EA3D4B,EA2DlC5B,KACO6B,EA5D2B,EA4DlC/B,MAIJ,SAASkC,IACLZ,OAAUjE,GACVoE,OAAiBpE,GACjBwE,OAAcxE,GACd0E,OAAc1E,GApEoB,8CAwEtC,WAAwB8E,GAAxB,gBAAArB,EAAA,6DAEIqB,EAAMC,iBAEAyD,EAAiB,CACnB7M,OACAuI,cACA7B,WACAiC,YARR,kBAYcvQ,EAAUgN,OAAV,mBAA6BqG,EAAO3L,IAAM+M,GAZxD,OAaQ3D,IACAzI,EAAS,CAAEF,IAAK,kBAAmBrC,KAAM,UAAWsC,MAAM,IAC1D1G,EAAQW,KAAKoE,EAAYkB,QAAQ,MAAO0L,EAAO3L,KAfvD,kDAkBQW,EAAS,CAAEF,IAAK,KAAM8I,WAAYnL,KAAM,QAASsC,MAAM,IAlB/D,2DAxEsC,sBA+FtC,IAAMsM,EAAY,yCAAG,WAAO1H,GAAP,gBAAA0C,EAAA,kEAEPiF,EAAc,CAChBhK,QAAS3K,EAAU4S,WAAWgC,YAAY5H,IAE5B6G,QAAQ,+CALb,iEAOP7T,EAAUgN,OAAO,CAAE5G,WAAY,WAAYsM,IAAKW,EAAO3L,IAAMiN,GAPtD,OAQbtM,EAAS,CAAEF,IAAK,wBAAyBrC,KAAM,UAAWsC,MAAM,IAEhE1G,EAAQW,K3CnHK,K2CyGA,kDAabgG,EAAS,CAAEF,IAAK,KAAM8I,WAAYnL,KAAM,QAASsC,MAAM,IAb1C,0DAAH,sDAyBlB,OACI,sBAAKlE,UAAWF,EAAQlD,KAAxB,UACI,cAACiE,EAAA,EAAD,CAAYC,QAAQ,KAAKsE,cAAY,EAArC,0BACA,uBAAMpF,UAAWF,EAAQkK,KAAMkD,SA3HD,4CA2H9B,UACI,cAACC,GAAA,EAAD,aAAWtP,MAAM,YAAYmC,UAAWF,EAAQmK,MAAOiB,MAAM,gCAAgCpK,QAAQ,SAASsM,UAAQ,GAAKrB,IAC3H,cAACoB,GAAA,EAAD,aAAWtP,MAAM,YAAYmC,UAAWF,EAAQmK,MAAOiB,MAAM,wCAAwCpK,QAAQ,SAASsM,UAAQ,GAAKlB,IACnI,cAACmB,GAAA,EAAD,aAAYrN,UAAWF,EAAQmK,MAAOqD,OAAO,cAAiBhB,IAE7DV,EACG,sBAAK5L,UAAWF,EAAQmK,MAAxB,UACI,cAACpJ,EAAA,EAAD,CAAYC,QAAQ,UAAUsE,cAAY,EAA1C,8BACA,cAACgG,GAAD,CAAkBjO,SAAUiN,IAC5B,cAAC5I,EAAA,EAAD,CAAQC,WAAS,EAAC0J,KAAK,QAAQrK,QAAQ,YAAY9C,QAhB1C,WACzB6N,GAAa,IAeG,qBAGJ,qCACI,cAACJ,GAAA,EAAD,CAAM+B,KAAM9B,GAAeZ,OAAO,SAASjN,MAAM,YAAjD,kCACA,cAACsP,GAAA,EAAD,aAAWtP,MAAM,YAAYmC,UAAWF,EAAQmK,MAAOiB,MAAM,mBAAmBuC,KAAK,KAAKC,QAAQ,KAAK5M,QAAQ,SAAS6M,WAAS,EAAClM,WAAS,GAAK+K,IAChJ,cAAChL,EAAA,EAAD,CAAQ2J,KAAK,QAAQrK,QAAQ,YAAY9C,QA1BlC,WACvB6N,GAAa,IAyByE+B,SAAUhC,EAAhF,iCAGR,cAACX,GAAD,CAAkBC,MAAM,YAI5B,sBAAKlL,UAAWF,EAAQ2G,QAAxB,UACK,cAAC5F,EAAA,EAAD,CAAYC,QAAQ,KAAKsE,cAAY,EAArC,qBACuC,IAAvC+D,EAASgG,EAAO3L,IAAIiD,QAAQqB,QAAgB,cAACjH,EAAA,EAAD,iEAC5CsI,EAASgG,EAAO3L,IAAIiD,QAAQpD,KAAI,SAACyF,EAAa8F,GAAd,OAC7B,eAACvN,EAAA,EAAD,WACI,eAACE,EAAA,EAAD,WACI,cAACV,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCkF,GAAW8C,EAAO/B,aACnD,cAAClG,EAAA,EAAD,UAAaiI,EAAOxJ,WAExB,cAACkJ,GAAA,EAAD,UACI,cAAChH,EAAA,EAAD,CAAQxD,QAAS,kBAAMwS,EAAa1H,IAApC,wBANG8F,cCtKhB+B,OCMA,YAAgE,IAAxCxT,EAAuC,EAAvCA,SAC7BkB,EAAOC,aAAY,SAACC,GAAD,OAAsBA,EAAM3C,SAASyC,QACxDzC,EAAW2B,wBACXC,EAAUC,cACT0G,EAAYC,KAAZD,SAEP,OAAKpD,mBAAS1C,IAKV0C,mBAAS1C,IAASA,EAAKuS,QACjB,sBAAsBC,KAAKxS,EAAKuS,QAClChV,EAASqC,SAASC,MAAK,WACnBiG,EAAS,CAAEvC,KAAM,QAASqC,IAAK,wDAAyDC,MAAM,IAC9F1G,EAAQW,KAAK,SAKlBhB,GAbI,mD,6FCPT2T,GAAY,SAACjS,GACf,OAAOkS,aACFlS,EAIG,CACA5B,QAAS,CACL2E,KAAM,OAAQoP,QAASC,KAAYrO,UAAWsO,OAN9C,CACJjU,QAAS,CACL2E,KAAM,QAASoP,QAASG,KAAKvO,UAAWwO,SAU3CC,GAAgB,SAAC,GAA6C,IAA3ClU,EAA0C,EAA1CA,SACrB0B,EAAQkB,qBAAWpB,GAAnBE,KACP,OACI,cAAC,KAAD,CAAkBlC,MAAOmU,GAAUjS,GAAnC,SACK1B,KCxBEmU,OCcA,YAAwC,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAG3BC,EAAW,CACb7V,aACA8V,OAAQpW,EACRqW,SAAUJ,EAAMI,SAChBC,mDAGJ,OACI,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,6BAAD,2BAAgCE,GAAhC,aACI,cAAC,EAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,KAAD,CAAyBI,MAAOC,KAAhC,SACI,eAAC,KAAD,WACI,cAACC,GAAA,EAAD,IACCP,mBC1B/B1G,I,OAASkH,SAASC,eAAe,SACvCC,SAAgB,cAAC,GAAD,CAAKX,MAAOA,EAAOC,OCM3B,cAAC,GAAD,UACI,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOW,OAAK,EAACtN,KAAMuN,GAAUvN,KAAM9G,UAAWqU,GAAUrU,YACvD,CACGsU,GACAC,GACAC,GACAC,GACAC,GACAC,IACFrP,KAAI,SAACsP,EAAe/D,GAAhB,OAAsB,cAAC,IAAD,eAAmB+D,GAAP/D,MACxC,cAAC,IAAD,CAAO7Q,UAAW6U,GAAc7U,qBDlBW+M,M","file":"static/js/main.b287f4fc.chunk.js","sourcesContent":["/**\n * @description\n * \n * This file contains configurations for packages used in this app\n * \n */\n\n// firebase config\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const fbConfig = {\n    apiKey: \"AIzaSyDyQLHfX6av-b8p1BkvZiAR6W387AqdmT4\",\n    authDomain: \"swart-project-portfolio.firebaseapp.com\",\n    projectId: \"swart-project-portfolio\",\n    storageBucket: \"swart-project-portfolio.appspot.com\",\n    messagingSenderId: \"418686934766\",\n    appId: \"1:418686934766:web:8064a0a8c9bb5f20de5dff\",\n    measurementId: \"G-7HCHCYKQFS\"\n};\n\n// react-redux-firebase config\nexport const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\n\n// app config\nexport const appConfig = {\n    name: \"Projects @ Swarthmore\"\n}\n","/**\n * @description\n * \n * This file contains the root reducer for the firebase / firestore store\n * \n */\n\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nexport const rootReducer = combineReducers({\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","/**\n * @description\n * \n * This file includes configuration and setup for react-redux-firebase. It exports both the rrfConfig,\n * which is used by the root-level provider in the App component, as well as the firebase store.\n * \n */\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport { createStore } from \"redux\";\nimport { fbConfig, rrfConfig } from \"../config\";\nimport { rootReducer } from \"./reducer\";\n\n// initialize firebase\nfirebase.initializeApp({ ...fbConfig, ...rrfConfig})\n\n// initialize firestore\nfirebase.firestore()\n\n// enable analytics\nfirebase.analytics();\n\n// initial state for this store\nconst initialState = {}\n\nexport default createStore(rootReducer, initialState)","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    content: {\n        display: \"flex\",\n        flexGrow: 1,\n        background: theme.palette.background.paper\n    },\n    children: {\n        flexGrow: 1,\n        padding: theme.spacing(4)\n    }\n}));\n","/**\n * @description\n * \n * This component provides a styled logout button that when clicked\n * will log the user out of the app. This should destroy session/cookie\n * data for the user.\n * \n */\n\nimport * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tooltip } from \"@material-ui/core\";\n\nexport default function LogoutButton() {\n\n    const firebase = useFirebase();\n    const history = useHistory();\n\n    function onClick() {\n        firebase.logout().then(() => {\n            history.push(\"/\");\n        });\n    }\n\n    return (\n        <Tooltip title=\"Logout of app\">\n            <IconButton color=\"inherit\" aria-label=\"Logout of app\" component=\"span\" onClick={onClick}>\n                <ExitToAppIcon />\n            </IconButton>\n        </Tooltip>      \n    )\n\n}","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ProfileIcon from \"@material-ui/icons/Person\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ProfileButton() {\n\n    const auth = useSelector((state: any) => state.firebase.auth)\n    const history = useHistory();\n\n    if (!auth.uid) {\n        return <>no uid</>\n    }\n    return (\n        <Tooltip title=\"View Profile\">\n            <IconButton color=\"inherit\" aria-label=\"View Profile\" component=\"span\" onClick={() => history.push(\"/manage\")}>\n                <ProfileIcon />\n            </IconButton>\n        </Tooltip>      \n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    title: {\n        flexGrow: 1,\n        cursor: \"pointer\",\n        \"&:hover\": {\n            textDecoration: \"underline\"\n        }\n    }\n}));","import {createContext, useState} from \"react\";\n\n// TODO: Get this setting from the browser, then set it as default\nexport const DarkModeCtx = createContext<{isOn: boolean, toggle: () => void}>({\n    isOn: false,\n    toggle: () => {}\n});\n\nexport const DarkModeProvider = ({children}: {children: JSX.Element}) => {\n\n    // check user's browser preferences for dark mode\n    const matches = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    const [isOn, setIsOn] = useState(matches);\n\n    const toggle = () => {\n        if (isOn) {\n            setIsOn(false);\n        } else {\n            setIsOn(true);\n        }\n    }\n\n    return (\n        <DarkModeCtx.Provider value={{isOn, toggle}}>{children}</DarkModeCtx.Provider>\n    );\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1)\n    },\n    on: {\n        fontWeight: \"bold\",\n        color: \"#ffffff\"\n    },\n    off: {\n        fontWeight: \"lighter\",\n        color: \"#dedede\"\n    }\n}));","import {Switch} from \"@material-ui/core\";\nimport {useContext} from \"react\";\nimport {DarkModeCtx} from \"../../contexts/DarkMode\";\nimport {\n    Brightness2,\n    Brightness7\n} from \"@material-ui/icons\";\nimport makeStyles from \"./styles\";\n\nexport default function DarkModeSwitch() {\n\n    const classes = makeStyles();\n    const {isOn, toggle} = useContext(DarkModeCtx);\n\n    return (\n        <div className={classes.root}>\n            <span className={isOn ? classes.off : classes.on }>Light</span>\n            <Switch\n                checked={isOn}\n                onChange={toggle}\n                icon={<Brightness7/>}\n                checkedIcon={<Brightness2/>}\n            />\n            <span className={isOn ? classes.on : classes.off}>Dark</span>\n        </div>\n    );\n}","import Navbar from \"./Navbar\";\nexport default Navbar;\n","/**\n * @description\n * \n * This file contains the main navbar for the app. It will appear on the top of the page.\n * \n */\n\nimport * as React from \"react\";\nimport { AppBar, Link, Toolbar, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { RootState } from \"../../store/reducer\";\nimport LogoutButton from \"./LogoutButton/LogoutButton\";\nimport ProfileButton from \"./ProfileButton/ProfileButton\";\nimport styles from \"./styles\";\nimport { appConfig } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\nimport DarkModeSwitch from \"../DarkModeSwitch/DarkModeSwitch\";\n\nexport default function Navbar() {\n\n    const auth = useSelector((state: RootState) => state.firebase.auth)\n    const classes = styles();\n    const history = useHistory();\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title} color=\"inherit\" onClick={() => history.push(\"/\")}>{appConfig.name}</Typography>\n                <DarkModeSwitch />\n                {/* Display the logout button if the user is logged in */}\n                {isLoaded(auth) && !isEmpty(auth) && <ProfileButton />}\n                {isLoaded(auth) && !isEmpty(auth) && <LogoutButton />}\n            </Toolbar>\n        </AppBar>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        width: \"400px\",\n        background: theme.palette.background.paper\n    },\n}))","import LoginCard from \"./LoginCard\";\nexport default LoginCard;","import * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { Card, CardContent, CardHeader, Button } from \"@material-ui/core\";\nimport { appConfig } from \"../../config\";\nimport styles from \"./styles\";\n\nexport default function LoginCard() {\n\n    const firebase = useFirebase();\n    const classes = styles();\n\n    function loginWithGoogle() {\n        return firebase.login({ provider: \"google\", type: \"popup\"  })\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader \n                title={appConfig.name}\n            />\n            <CardContent>\n                <Button color=\"primary\" fullWidth variant=\"contained\" onClick={loginWithGoogle}>Sign in with Google</Button>\n            </CardContent>\n        </Card>\n    )\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        width: 300,\n        minWidth: 300,\n        borderRight: `1px solid #ccc`,\n        minHeight: \"100vh\"\n    }\n}));","import {isLoaded, useFirestoreConnect} from \"react-redux-firebase\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducer\";\n\nexport default function useTeams() {\n    useFirestoreConnect([\n        {collection: \"teams\"}\n    ]);\n    const { teams } = useSelector((state:RootState) => state.firestore.ordered)\n    return {\n        loaded: isLoaded(teams),\n        teams\n    }\n}","import {useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducer\";\n\nexport default function useUid() {\n    const { uid } = useSelector((state: RootState) => state.firebase.auth);\n    return { uid }\n}","export const LOGIN_PATH = \"/login\";\nexport const ACCOUNT_PATH = \"/account\";\nexport const SINGLE_PATH = \"/single-project/:id\";\nexport const LIST_BY_TEAM = \"/projects/by-team/:id\";\nexport const LIST_BY_USER = \"/projects/by-user/:id\";\nexport const ADD_PROJECT_ROUTE = \"/projects/add\";\nexport const MANAGE_PATH = \"/manage\";\nexport const LOGOUT_PATH = \"/logout\";\nexport const HOME_PATH = \"/\";","import {makeStyles, Theme} from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme: Theme)=> ({\n    root: {\n        width: \"100%\",\n        textAlign: \"right\",\n        color: theme.palette.text.secondary\n    }\n}));","import {useStyles} from \"./styles\";\n\nexport default function Indicator() {\n    const classes = useStyles();\n    return <div className={classes.root}>&#9679;</div>\n}","import SideMenu from \"./SideMenu\";\nexport default SideMenu;\n","import React from \"react\";\nimport { MenuList, MenuItem, Divider } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport useTeams from \"../../hooks/useTeams\";\nimport useUid from \"../../hooks/useUid\";\nimport {Team} from \"../../types\";\nimport {ADD_PROJECT_ROUTE, LIST_BY_TEAM, MANAGE_PATH} from \"../../constants/paths\";\nimport Indicator from \"./Indicator/Indicator\";\n\nexport default function SideMenu() {\n\n    const classes = styles();\n    const history = useHistory();\n    const { pathname } = useLocation();\n\n    const { uid } = useUid();\n    const { teams, loaded } = useTeams();\n\n    if (!uid) {\n        return <div>Not logged in</div>\n    }\n\n    const onSelect = (id: string) => {\n        history.push(LIST_BY_TEAM.replace(\":id\", id));\n    }\n\n    const onShowAllClick = () => {\n        history.push(LIST_BY_TEAM.replace(\":id\", \"all\"));\n    }\n\n    const onAddClick = () => {\n        history.push(ADD_PROJECT_ROUTE);\n    }\n\n    const onManageClick = () => {\n        history.push(MANAGE_PATH);\n    }\n\n\n    const lastPathPart = pathname.split(\"/\").pop();\n\n    return !loaded\n        ? <>Loading</>\n        : (\n            <div className={classes.root}>\n                <MenuList>\n                    {teams.map((team: Team) => <MenuItem key={team.id} onClick={() => onSelect(team.id)}>\n                        {lastPathPart === team.id ? <strong>{team.name}</strong> : team.name}\n                        {lastPathPart === team.id && <Indicator />}\n                    </MenuItem>)}\n                    <Divider style={{ marginTop: \"5px\", marginBottom: \"5px\" }} />\n                    <MenuItem onClick={onShowAllClick}>\n                        {lastPathPart === \"all\" ? <strong>All Projects</strong> : \"All Projects\"}\n                        {lastPathPart === \"all\" && <Indicator />}\n                    </MenuItem>\n                    <Divider style={{ marginTop: \"5px\", marginBottom: \"5px\" }} />\n                    {uid && (\n                        <div>\n                            <MenuItem onClick={onAddClick}>\n                                {lastPathPart === \"add\" ? <strong>Add Project</strong> : \"Add Project\"}\n                                {lastPathPart === \"add\" && <Indicator />}\n                            </MenuItem>\n                            <MenuItem onClick={onManageClick}>\n                                {lastPathPart === \"manage\" ? <strong>My Projects</strong> : \"My Projects\"}\n                                {lastPathPart === \"manage\" && <Indicator />}\n                            </MenuItem>\n                        </div>\n                    )}\n                </MenuList>\n            </div>\n        );\n}","import {createContext, useState} from \"react\";\n\ntype Severity = \"error\" | \"warning\" | \"info\" | \"success\";\n\ninterface Snack {\n    type: Severity,\n    msg: string,\n    open: boolean\n}\n\nexport const SnackbarContext = createContext<{ snack: Snack, setSnack: any }>(\n    {\n        snack: { type: \"error\", msg: \"\", open: false },\n        setSnack: () => {}\n    }\n);\n\nexport default function({ children }: { children: JSX.Element }) {\n    const [snack, setSnack] = useState<Snack>({\n        type: \"error\",\n        msg: \"\",\n        open: false\n    });\n\n    return <SnackbarContext.Provider value={{ snack, setSnack }}>\n        {children}\n    </SnackbarContext.Provider>\n}","import {useContext} from \"react\";\nimport {SnackbarContext} from \"../contexts/Snackbar\";\n\nexport default function useSnax() {\n    const {snack, setSnack} = useContext(SnackbarContext);\n    return {snack, setSnack}\n}","import CoreLayout from \"./CoreLayout\";\nexport default CoreLayout;","import React from \"react\";\nimport styles from \"./styles\";\nimport Props from \"./props\";\nimport Navbar from \"../../containers/Navbar\";\nimport LoginCard from \"../../containers/LoginCard\";\nimport SideMenu from \"../../containers/SideMenu\";\nimport useUid from \"../../hooks/useUid\";\nimport {Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport useSnax from \"../../hooks/useSnax\";\n\nexport default function CoreLayout({ children }: Props) {\n\n    const classes = styles();\n    const { uid } = useUid();\n\n    const { snack, setSnack } = useSnax();\n\n    const closeSnack = () => setSnack({ open: false, msg: \"\", type: \"\" });\n\n    return (\n        <div className={classes.root}>\n            {!uid && <LoginCard />}\n            <Navbar />\n            <div className={classes.content}>\n                {uid && <SideMenu/>}\n                <div className={classes.children}>{children}</div>\n            </div>\n            {snack.open && <Snackbar open={snack.open} autoHideDuration={5000} onClose={() => closeSnack()}>\n                <Alert elevation={6} variant=\"filled\" severity={snack.type}\n                       onClose={() => closeSnack()}>{snack.msg}</Alert>\n            </Snackbar>}\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {}\n}));","import HomePage from \"./components/Home\";\n\nexport default {\n    path: \"/\",\n    component: HomePage\n};","import React from \"react\";\nimport styles from \"./styles\";\nimport { Redirect } from \"react-router-dom\";\nimport useUid from \"../../../hooks/useUid\";\n\nexport default function Home() {\n\n    const classes = styles();\n    const { uid } = useUid();\n\n\n    return uid ? <Redirect to=\"projects/by-team/all\" /> : <div>Login to view projects</div>\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {}\n}));\n","import NotFoundPage from \"./components/NotFound\";\n\nexport default {\n    component: NotFoundPage \n};","import * as React from \"react\";\nimport styles from \"./styles\"\n\nexport default function NotFoundPage() {\n\n    const classes = styles();\n\n    return (\n        <div className={classes.root}>\n            <p>404</p>\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        width: \"100%\"\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    },\n    cardGrid: {\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    gridItem: {\n        display: \"flex\",\n        flexGrow: 1\n    }\n}));\n","import { Typography } from \"@material-ui/core\";\n\nexport function PageTitle({ title }: { title: string }) {\n\n    return (\n        <Typography variant=\"h4\" gutterBottom >{title} Projects</Typography>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles((theme)=> ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexGrow: 1,\n        width: \"100%\"\n    },\n    actions: {\n        display: \"flex\",\n        background: theme.palette.background.paper,\n    },\n    content: {\n        flexGrow: 1\n    },\n    updateDate: {\n        flexGrow: 1\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    }\n}));\n","import {ProjectStatusUpdate} from \"../types\";\n\nexport function createMeta(createdBy: string) {\n    return {\n        createdBy,\n        createdOn: Date.now().toString(),\n        visible: true\n    }\n}\n\nexport function dateString(timestamp: string) {\n    const date = new Date(+timestamp);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}`\n}\n\nexport function sortUpdates(updates: ProjectStatusUpdate[]) {\n    return Array.from(updates).sort((first, second) => (+second.createdOn - +first.createdOn));\n}","import {Project} from \"../../types\";\nimport {\n    Avatar,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader, Collapse, IconButton, IconButtonProps, Tooltip,\n    Typography\n} from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport {More} from \"@material-ui/icons\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {useState} from \"react\";\nimport {sortUpdates} from \"../../utils\";\nimport {SINGLE_PATH} from \"../../constants/paths\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface PCardProps {\n    project: Project &\n        {\n            meta: {\n                createdBy: any,\n                createdOn: any,\n                [k:string]: any\n            }\n        }\n}\n\nfunction ReadMoreIconButton(props: IconButtonProps) {\n    return (\n        <Tooltip title=\"Read More\">\n            <IconButton {...props}>\n                <More />\n            </IconButton>\n        </Tooltip>\n    )\n}\n\ninterface ExpandIconButtonProps extends IconButtonProps {\n    tooltipMsg: string\n}\n\nfunction ExpandIconButton({ tooltipMsg, ...rest }: ExpandIconButtonProps) {\n    return (\n        <Tooltip title={tooltipMsg}>\n            <IconButton {...rest}>\n                <ExpandMoreIcon />\n            </IconButton>\n        </Tooltip>\n    )\n}\n\nexport default function PCard({ project, ...rest }: PCardProps) {\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    const handleExpandClick = () => setIsExpanded(!isExpanded);\n\n    const parseCreatedOnToDate = (str: string) => {\n        const date = new Date(parseInt(str));\n        return date.toLocaleDateString();\n    }\n\n    const hasUpdates = project.updates && project.updates.length > 0;\n\n    const firstUpdate = hasUpdates ? project.updates?.[0] : undefined;\n\n    return (\n\n        <Card className={classes.root} {...rest}>\n            \n            <CardHeader\n                title={project.name}\n                subheader={`${project.meta.createdBy.displayName} on ${parseCreatedOnToDate(project.meta.createdOn)}`}\n                avatar={\n                    <Avatar\n                        src={project.meta.createdBy.avatarUrl}\n                    />\n                }\n            />\n\n            <CardContent className={classes.content}>\n                {firstUpdate && (\n                    <Typography variant=\"body2\">\n                        {firstUpdate.value}\n                    </Typography>\n                )}\n            </CardContent>\n\n            <CardActions className={classes.actions}>\n                <ReadMoreIconButton onClick={() => history.push(SINGLE_PATH.replace(\":id\", project.id || \"\"))} />\n                {firstUpdate && (\n                    <>\n                        <Typography className={classes.updateDate} variant=\"caption\" align=\"center\" color=\"textSecondary\">\n                            {parseCreatedOnToDate(firstUpdate.createdOn)}\n                        </Typography>\n                        {project.updates && project.updates?.length > 0 && (\n                            <ExpandIconButton\n                                className={isExpanded ? classes.expand : classes.expandOpen}\n                                onClick={handleExpandClick}\n                                tooltipMsg={`${project.updates.length} more update${project.updates.length  > 1 ? \"s\" : \"\"}`}\n                            />\n                        )}\n                    </>\n                )}\n            </CardActions>\n\n            {project.updates && project.updates?.length > 0 && (\n                <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit={true}>\n                    {sortUpdates(Array.from(project.updates)).map(update => (\n                       <CardContent key={update.value}>\n                           <Typography variant=\"h6\">{parseCreatedOnToDate(update.createdOn)}</Typography>\n                           <Typography variant=\"body2\">{update.value}</Typography>\n                       </CardContent>\n                    ))}\n                </Collapse>\n            )}\n\n        </Card>\n    )\n}","import ProjectsPage from \"./components/Projects\";\nimport { LIST_BY_TEAM as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectsPage\n}","import React from \"react\";\nimport styles from \"./styles\";\nimport {useFirestoreConnect, populate, isLoaded, isEmpty} from \"react-redux-firebase\";\nimport {useSelector} from \"react-redux\";\nimport {useLocation, useParams} from \"react-router-dom\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport {Project, Team} from \"../../../types/index\";\nimport { PageTitle } from \"../../../containers/PageTitle\";\nimport {RootState} from \"../../../store/reducer\";\nimport useTeams from \"../../../hooks/useTeams\";\nimport PCard from \"../../../containers/PCard/PCard\";\n\nexport default function Projects(props: any) {\n\n    const classes = styles();\n    const { id }: { id: string } = useParams();\n    const { teams, loaded: teamsAreLoaded } = useTeams();\n    const { pathname } = useLocation();\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n\n    useFirestoreConnect([\n        { \n            collection: \"projects\",\n            populates,\n            ...(id ? [\"meta.createdBy.team\", \"==\", id]: {})\n        },\n    ]);\n\n    // at this point, the results aren't filtered because we need to populate the projects to get\n    // the team id\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    if (!isLoaded(projects) || !teamsAreLoaded) {\n        return <div>Loading...</div>\n    }\n\n    if (isEmpty(projects)) {\n        return <div>No projects found</div>\n    }\n\n    // filter the projects by team id\n    const filteredProjects = Object.keys(projects)\n        .map(key => ({ id: key, ...projects[key] }))\n        .filter(project => (id === \"all\" ? project : project.meta.createdBy.team === id))\n\n    const lastPathPart = pathname.split(\"/\").pop();\n\n    const teamName = lastPathPart === \"all\" ? \"All\" : teams.filter((team: Team) => team.id === id)[0].name || \"Unknown\";\n\n    return (\n        <div className={classes.root}>\n            <PageTitle title={teamName} />\n            {filteredProjects.length === 0 && <Typography variant=\"subtitle1\">This team doesn't have any projects posted yet</Typography>}\n            {filteredProjects.length > 0 && (\n                <Grid container spacing={3}>\n                    {filteredProjects.map((project: Project) => (\n                        <Grid item lg={3} key={project.id} className={classes.gridItem}>\n                            <PCard project={project} />\n                        </Grid>\n                    ))}\n                </Grid>\n            )}\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(2),\n        maxWidth: 200\n    },\n    markdown: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    }\n}));\n","import { useState } from \"react\";\n\nexport default function useInput(initialValue: string) {\n\n    const [value, setValue] = useState(initialValue)\n\n    return {\n        value,\n        setValue: () => setValue,\n        reset: (val: string|undefined) => val ? setValue(val) : setValue(\"\"),\n        bind: {\n            value,\n            onChange: (e: any) => {\n                // If event.target is set, we can assume the field is a text input with a value property\n                // If event.target is not set, check to see if e is a moment object. If it is a moment object\n                // that means we can use e.toString() to get the date\n                e.target \n                    ? setValue(e.target.value) \n                        : Date.parse(e)\n                            ? setValue(e.toISOString()) : null\n            }\n        }\n    }\n\n}","import { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n        maxWidth: 300\n    }\n}));\n\ninterface Props extends ButtonProps {\n    label: string\n}\n\nexport function FormSubmitButton({ label, ...rest }: Props) {\n\n    const classes = styles();\n\n    return (\n        <Button size=\"large\" variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.root} {...rest}>{label}</Button>\n    );\n\n}","import ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport {Link} from \"@material-ui/core\";\n\nexport default function MarkdownRenderer({ children, ...rest }: { children: any }) {\n   return (\n       <ReactMarkdown\n           plugins={[gfm]}\n           children={children}\n           components={{\n               a: (props) => <Link {...props} color=\"secondary\" />\n           }}\n           {...rest}\n       />\n   )\n}","import { TextField, Button, Typography, Link } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Project } from \"../../../types\";\nimport { RootState } from \"../../../store/reducer\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport {SINGLE_PATH} from \"../../../constants/paths\";\nimport MD from \"react-markdown\";\nimport gfm from \"remark-gfm\"\nimport MarkdownRenderer from \"../../../containers/MarkdownRenderer/MarkdownRenderer\";\n\nexport const markdownCheat = \"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\";\n\nexport default function AddProjectPage() {\n\n    // whether or not to show markdown preview\n    const [mdPreview, setMdPreview] = React.useState(false);\n\n    const firestore = useFirestore();\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const classes = styles();\n    const {setSnack} = useSnax();\n\n    // if auth.email is not from swarthmore, log the user out\n\n    const history = useHistory();\n\n    // the name field\n    const { \n        value: name, \n        bind: bindName, \n        reset: resetName \n    } = useInput(\"\");\n\n    // the description field\n    const { \n        value: description, \n        bind: bindDescription, \n        reset: resetDescription \n    } = useInput(\"\");\n\n    // the deadline field\n    const { \n        value: deadline, \n        bind: bindDeadline, \n        reset: resetDeadline\n    } = useInput(new Date(Date.now()).toISOString());\n\n    // the markdown field\n    const { \n        value: markdown, \n        bind: bindMarkdown, \n        reset: resetMarkdown\n     } = useInput(\"\");\n\n    // adds a project to firestore\n    function addProject(project: Project) {\n        return firestore.collection('projects').add(project);\n    }\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n\n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n        \n        const uid = auth.uid.toString();\n\n        const project: Project = {\n            name,\n            description,\n            markdown,\n            deadline,\n            meta: {\n                ownedBy: uid,\n                createdBy: uid,\n                createdOn: Date.now().toString() \n            },\n            updates: []\n        }\n\n        try {\n            const res = await addProject(project);\n            resetForm();\n            setSnack({ type: \"success\", msg: \"Project created success\", open: true });\n            history.push(SINGLE_PATH.replace(\":id\", res.id));\n            \n        } catch (error) {\n            setSnack({ type: \"error\", msg: error.toString(), open: true });\n        }\n\n    }\n\n    const handlePreviewClick = () => {\n        setMdPreview(true);\n    }\n\n    const closeMarkdownPreview = () => {\n        setMdPreview(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Add Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField color=\"secondary\" className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField color=\"secondary\" className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n\n                <DatePicker label=\"Project Deadline\" className={classes.field} format=\"MM/DD/yyyy\" disablePast={true} {...bindDeadline} />\n\n                {mdPreview\n                    ? (\n                        <div className={classes.field}>\n                            <Typography variant=\"caption\" gutterBottom>Markdown Preview</Typography>\n                            <MarkdownRenderer children={markdown} />\n                            <Button fullWidth size=\"large\" variant=\"contained\" onClick={closeMarkdownPreview}>Edit</Button>\n                        </div>\n\n                    ) : (\n                        <>\n                            <div className={classes.field}>\n                                <label>\n                                    Tell us about your project. You can use Markdown, but keep it under 400 characters\n                                </label>\n                                <br/>\n                                <Link href={markdownCheat} target=\"_blank\" color=\"secondary\">Markdown Cheat Sheet</Link>\n                                <TextField className={classes.field} fullWidth label=\"Markdown description\" rows={10} rowsMax={10}\n                                           color=\"secondary\" variant=\"filled\" multiline {...bindMarkdown} />\n                            </div>\n                            <Button size=\"large\" variant=\"contained\" onClick={handlePreviewClick} disabled={mdPreview}>Preview Markdown</Button>\n                        </>\n                )}\n\n\n                <FormSubmitButton label=\"Submit\" />\n            </form>\n        </div>\n    )\n\n}","import AddProjectPage from \"./components/AddProject\";\nexport default {\n    path: \"/projects/add\",\n    component: AddProjectPage\n};\n\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(5),\n        paddingRight: theme.spacing(5)\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    card: {\n        marginBottom: theme.spacing(3)\n    },\n    update: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    },\n    markdown: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    },\n    skeleton: {\n        flexGrow: 1,\n        height: 300\n    },\n    title: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    },\n    subtitle: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    },\n    section: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    }\n}));\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2)\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nexport default function StatusUpdate({ onSubmit }: { onSubmit: (val: string) => void }) {\n\n    const [val, setVal] = React.useState(\"\");\n\n    const classes = styles();\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        // restrict to 300 characters\n        setVal(\n            e.target.value.slice(0, 300)\n        )\n    }\n\n    const onClick = (val:string) => {\n        try {\n            onSubmit(val);\n            // clear the form\n            setVal(\"\");\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    \n    return (\n        <div className={classes.root}>\n            <TextField value={val} onChange={onChange} fullWidth variant=\"filled\" label=\"Share an update about this project\"  color=\"secondary\" />\n            <Button className={classes.button} color=\"primary\" variant=\"contained\" onClick={() => onClick(val)} disabled={val.length < 5}>Post Update</Button>\n        </div>\n    )\n\n}","import ProjectPage from \"./components/Project\";\nimport { SINGLE_PATH as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectPage\n}","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty, useFirestore } from \"react-redux-firebase\";\nimport MD from \"react-markdown\";\nimport gfm from \"remark-gfm\"\nimport PostUpdate from \"../../../containers/StatusUpdate/StatusUpdate\";\nimport firebase from \"firebase\";\nimport {dateString, sortUpdates} from \"../../../utils\";\nimport {RootState} from \"../../../store/reducer\";\nimport useUid from \"../../../hooks/useUid\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport MarkdownRenderer from \"../../../containers/MarkdownRenderer/MarkdownRenderer\";\n\nexport default function ProjectPage() {\n\n    const classes = styles();\n    const history = useHistory();\n    const firestore = useFirestore();\n    const {uid} = useUid();\n    const {id}: { id: string } = useParams();\n    const {setSnack} = useSnax();\n\n    // if there is no project id provided, redirect the user to the home page\n    if (!id) {\n        history.push(\"/\");\n    }\n\n    //const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = id;\n\n    useFirestoreConnect([ \n        { collection, doc }\n    ])\n\n    const project = useSelector((state: RootState) => state.firestore.ordered.projects);\n\n    // Show message while project is loading\n    if (!isLoaded(project)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project \n    if (isEmpty(project)) {\n        return <div>Project is empty</div>\n    }\n\n    const first = project[0];\n\n    if (!first) {\n        setSnack({ msg: \"Project not found!\", type: \"error\", open: true });\n    }\n\n    const isOwner = first.meta.ownedBy === uid;\n\n    const onSubmit = async (value: string) => {\n        try {\n            const update = {\n                value: value,\n                createdOn: Date.now().toString(),\n                createdBy: uid\n            }\n            await firestore.update(`projects/${first.id}`, { updates:  firebase.firestore.FieldValue.arrayUnion(update) });\n            setSnack({ msg: \"Status update posted\", type: \"success\", open: true });\n        } catch(error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true });\n        }\n    }\n    \n    return (\n        <div className={classes.root}>\n\n            <Typography variant=\"h1\" align=\"center\" className={classes.title}>{first.name}</Typography>\n            <Typography variant=\"subtitle1\" align=\"center\">Started on {dateString(first.meta.createdOn)}</Typography>\n            <Typography variant=\"subtitle1\" align=\"center\">{first.description}</Typography>\n\n            {isOwner && <PostUpdate onSubmit={onSubmit} />}\n\n            {first.updates && first.updates.length > 0 && <Typography variant=\"h2\" align=\"center\" className={classes.subtitle}>Project Updates</Typography>}\n\n            {first.updates && sortUpdates(first.updates).map((update: any, i: number) => (\n                <div key={i} className={classes.update}>\n                    <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                    <Typography>{update.value}</Typography>\n                </div>\n            ))}\n\n            {first.markdown && <Typography variant=\"h2\" align=\"center\" className={classes.subtitle}>About This Project</Typography>}\n            {first.markdown && <MarkdownRenderer children={first.markdown} />}\n\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginButton: theme.spacing(1)\n    }\n}));\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {},\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    }\n}));\n","import React from \"react\";\nimport { Divider, Collapse, IconButton, Button, Card, CardContent, CardActions, Typography, CardHeader, Avatar } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport styles from \"./styles\";\nimport {createMeta, dateString, sortUpdates} from \"../../utils\";\nimport {SINGLE_PATH} from \"../../constants/paths\";\nimport {ProjectStatusUpdate} from \"../../types\";\n\nexport default function ProjectCard({ project, ...rest }: any) {\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const history = useHistory();\n    const classes = styles();\n\n    const handleExpandClick = () => setExpanded(!expanded);\n\n    return (\n\n        <Card {...rest}>\n\n            <CardHeader\n                avatar={\n                    <Avatar src={project.meta.createdBy.avatarUrl} />\n                }\n                title={project.name}\n                subheader={dateString(project.meta.createdOn)}\n            />\n\n            <CardContent>\n                {project.updates && project.updates.length > 0 && (\n                    <>\n                        <Typography variant=\"body2\" color=\"textSecondary\">{dateString(sortUpdates(Array.from(project.updates))[0].createdOn)}</Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">{sortUpdates(Array.from(project.updates))[0].value}</Typography>\n                    </>\n                )}\n            </CardContent>\n\n            <CardActions disableSpacing>\n                <Button onClick={() => history.push(SINGLE_PATH.replace(\":id\", project.id))}>Read More</Button>\n                <Button onClick={handleExpandClick} disabled={project.updates && project.updates.length === 0} style={{ marginLeft: \"auto\" }} endIcon={\n                    <ExpandMoreIcon className={expanded ? classes.expand : classes.expandOpen} />\n                }>\n                    Recent Activity\n                </Button>\n            </CardActions>\n\n            {project.updates && project.updates.length > 0 && <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                {sortUpdates(Array.from(project.updates)).map((update:ProjectStatusUpdate) => (\n                    <Card key={update.value}>\n                        <CardContent>\n                            <Typography variant=\"subtitle2\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                    </Card>\n                ))}\n            </Collapse>}\n        </Card>\n    );\n\n}","import UserPage from \"./components/User\";\nimport { LIST_BY_USER as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: UserPage\n}","import React from \"react\";\nimport styles from \"./styles\"\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport ProjectCard from \"../../../containers/ProjectCard/ProjectCard\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function UserPage() {\n\n    const classes = styles();\n\n    const params: { userId: string } = useParams();\n\n    const collection = \"projects\";\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }]; \n\n    useFirestoreConnect([\n        {\n            collection,\n            populates,\n            where: [\"meta.createdBy\", \"==\", params.userId]\n        }\n    ])\n\n    const projects = useSelector((state: any) => populate(state.firestore, \"projects\", populates));\n\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    if (isEmpty(projects)) {\n        return <div>User has no projects</div>\n    }\n\n    console.log(\n        projects[Object.keys(projects)[0]]\n    )\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Projects by {projects[Object.keys(projects)[0]].meta.createdBy.displayName}</Typography>\n            {Object.keys(projects).map((key: string) => \n                <div className={classes.row} key={key}>\n                    <ProjectCard project={projects[key]} />\n                </div>\n            )}\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    descriptionCell: {\n        flexGrow: 1\n    }\n}));\n","import ManagePage from \"./components/ManagePage\";\n\nexport default {\n    path: \"/manage\",\n    component: ManagePage\n};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, isLoaded, isEmpty, useFirestore } from \"react-redux-firebase\";\nimport { RootState } from \"../../../store/reducer\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Paper,\n    Table,\n    TableBody,\n    TableHead,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Button,\n    IconButton, Typography\n} from \"@material-ui/core\";\nimport { Project } from \"../../../types\";\nimport { dateString } from \"../../../utils\";\nimport useUid from \"../../../hooks/useUid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"./styles\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport { Link } from \"react-router-dom\";\nimport {SINGLE_PATH} from \"../../../constants/paths\";\n\nexport default function ManagePage() {\n\n    const history = useHistory();\n    const firestore = useFirestore();\n    const { uid } = useUid();\n    const classes = styles();\n    const {setSnack} = useSnax();\n\n    // at this point we have the user id\n    useFirestoreConnect([\n        { collection: \"projects\", where: [\"meta.createdBy\", \"==\", uid], storeAs: \"ownedProject\" }\n    ]);\n\n    const projects = useSelector((state: RootState) => state.firestore.ordered.ownedProject);\n\n    if (!isLoaded(projects)) {\n        return <>Loading...</>\n    }\n\n    if (isEmpty(projects)) {\n        return <>You have no projects</>\n    }\n\n    const onEditClick = (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        e.preventDefault();\n        history.push(`/projects/edit/${project.id}`);\n    }\n\n    const onDeleteClick = async (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        try {\n            e.preventDefault();\n            const confirmation = confirm(\"WARNING: This action is permanent. Click OK to proceed.\");\n            if (!confirmation) return;\n            await firestore.collection(\"projects\").doc(project.id).delete();\n            setSnack({ msg: \"Project deleted\", type: \"success\", open: true });\n        } catch(error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true });\n        }\n    }\n\n    return (\n        <TableContainer component={Paper} className={classes.root}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell>Deadline</TableCell>\n                        <TableCell>Created</TableCell>\n                        <TableCell>Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {projects.map((project: Project) => (\n                        <TableRow key={project.id || project.name}>\n                            <TableCell>\n                                <Link\n                                    to={SINGLE_PATH.replace(\":id\", project.id || \"\")}\n                                    style={{ textDecoration: \"none\" }}\n                                >\n                                    <Typography color=\"secondary\">{project.name}</Typography>\n                                </Link>\n                            </TableCell>\n                            <TableCell className={classes.descriptionCell}>\n                                {project.description.length > 100\n                                    ? project.description.substr(0, 100) + \"...\"\n                                    : project.description}\n                            </TableCell>\n                            <TableCell>\n                                {project.deadline && new Date(project.deadline).toLocaleDateString()}\n                            </TableCell>\n                            <TableCell>\n                                {dateString(project.meta.createdOn)}\n                            </TableCell>\n                            <TableCell>\n                                <IconButton onClick={e => onEditClick(e, project)}>\n                                    <EditIcon />\n                                </IconButton>\n                                <IconButton onClick={e => onDeleteClick(e, project)}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(1)\n    },\n    preview: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    },\n    updates: {\n        marginTop: theme.spacing(2)\n    },\n    markdown: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    }\n}));\n","import EditProjectPage from \"./components/EditProject\";\nexport default {\n    path: \"/projects/edit/:id\",\n    component: EditProjectPage\n};\n\n","import React, {useState} from \"react\";\nimport {TextField, Button, Typography, Card, CardContent, CardActions, Link} from \"@material-ui/core\";\nimport { useFirestore, useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { RootState } from \"../../../store/reducer\";\nimport { dateString } from \"../../../utils\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\nimport {HOME_PATH, SINGLE_PATH} from \"../../../constants/paths\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport MD from \"react-markdown\";\nimport {markdownCheat} from \"../../AddProject/components/AddProject\";\nimport gfm from \"remark-gfm\"\nimport MarkdownRenderer from \"../../../containers/MarkdownRenderer/MarkdownRenderer\";\n\nexport default function EditProjectPage() {\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n    const firestore = useFirestore();\n    const { setSnack } = useSnax();\n\n    if (!params.id) {\n        history.push(\"/\");\n    }\n\n    const classes = styles();\n\n    const [mdPreview, setMdPreview] = useState(false);\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = params.id;\n\n    useFirestoreConnect([\n        { collection, populates, doc }\n    ]);\n\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    // Show message while project is loading\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project\n    if (isEmpty(projects)) {\n        return <div>Project is empty</div>\n    }\n\n    // the name field\n    const {\n        value: name,\n        bind: bindName,\n        reset: resetName\n    } = useInput(projects[params.id].name);\n\n    // the description field\n    const {\n        value: description,\n        bind: bindDescription,\n        reset: resetDescription\n    } = useInput(projects[params.id].description);\n\n    // the deadline field\n    const {\n        value: deadline,\n        bind: bindDeadline,\n        reset: resetDeadline\n    } = useInput(projects[params.id].deadline);\n\n    // the markdown field\n    const {\n        value: markdown,\n        bind: bindMarkdown,\n        reset: resetMarkdown\n    } = useInput(projects[params.id].markdown);\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n\n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n\n        const updatedProject = {\n            name,\n            description,\n            markdown,\n            deadline\n        }\n\n        try {\n            await firestore.update(`projects/${params.id}`, updatedProject)\n            resetForm();\n            setSnack({ msg: \"Project updated\", type: \"success\", open: true })\n            history.push(SINGLE_PATH.replace(\":id\", params.id));\n\n        } catch (error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true })\n        }\n\n    }\n\n    const deleteUpdate = async (update: any) => {\n        try {\n            const updatedData = {\n                updates: firestore.FieldValue.arrayRemove(update)\n            }\n            const confirmed = confirm(\"WARNING: This action is permanent. Proceed?\");\n            if (!confirmed) return;\n            await firestore.update({ collection: \"projects\", doc: params.id }, updatedData);\n            setSnack({ msg: \"Status update deleted\", type: \"success\", open: true })\n            // TODO: this is hacky and should be fixed\n            history.push(HOME_PATH);\n\n        } catch(error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true });\n        }\n    }\n\n    const handlePreviewClick = () => {\n        setMdPreview(true);\n    }\n\n    const closeMarkdownPreview = () => {\n        setMdPreview(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\" gutterBottom>Edit Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField color=\"secondary\" className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField color=\"secondary\" className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n                <DatePicker className={classes.field} format=\"MM/DD/yyyy\" {...bindDeadline} />\n\n                {mdPreview ? (\n                    <div className={classes.field}>\n                        <Typography variant=\"caption\" gutterBottom>Markdown Preview</Typography>\n                        <MarkdownRenderer children={markdown} />\n                        <Button fullWidth size=\"large\" variant=\"contained\" onClick={closeMarkdownPreview}>Edit</Button>\n                    </div>\n                ) : (\n                    <>\n                        <Link href={markdownCheat} target=\"_blank\" color=\"secondary\">Markdown Cheat Sheet</Link>\n                        <TextField color=\"secondary\" className={classes.field} label=\"Project Markdown\" rows=\"10\" rowsMax=\"10\" variant=\"filled\" multiline fullWidth {...bindMarkdown} />\n                        <Button size=\"large\" variant=\"contained\" onClick={handlePreviewClick} disabled={mdPreview}>Preview Markdown</Button>\n                    </>\n                )}\n                <FormSubmitButton label=\"Save\" />\n            </form>\n\n\n            <div className={classes.updates}>\n                {<Typography variant=\"h5\" gutterBottom>Updates</Typography>}\n                {projects[params.id].updates.length === 0 && <Typography>You haven't posted any updates to this project yet</Typography>}\n                {projects[params.id].updates.map((update: any, i: number) => (\n                    <Card key={i}>\n                        <CardContent>\n                            <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button onClick={() => deleteUpdate(update)}>Delete</Button>\n                        </CardActions>\n                    </Card>\n                ))}\n            </div>\n        </div>\n    )\n\n}","import AuthIsLoaded from \"./AuthIsLoaded\";\nexport default AuthIsLoaded;","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/reducer\";\nimport {isLoaded, useFirebase} from \"react-redux-firebase\";\nimport {useHistory} from \"react-router-dom\";\nimport useSnax from \"../../hooks/useSnax\";\n\nexport default function AuthIsLoaded({ children }: { children: JSX.Element }) {\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const firebase = useFirebase();\n    const history = useHistory();\n    const {setSnack} = useSnax();\n\n    if (!isLoaded(auth)) {\n        return <>Loading...</>\n    }\n\n    // if auth.email exists, and is not part of the swarthmore domain, log the user out\n    if (isLoaded(auth) && auth.email) {\n        if (!(/@swarthmore.edu\\s*$/.test(auth.email))) {\n            firebase.logout().then(() => {\n                setSnack({ type: \"error\", msg: \"User email must be part of the @swarthmore.edu domain\", open: true })\n                history.push(\"/\");\n            });\n        }\n    }\n\n    return children;\n}","import * as React from \"react\";\nimport {createMuiTheme} from \"@material-ui/core\";\nimport {ThemeProvider as MuiThemeProvider} from \"@material-ui/core/styles\";\nimport {blue, deepPurple, lightBlue, red} from \"@material-ui/core/colors\";\nimport {useContext} from \"react\";\nimport {DarkModeCtx} from \"./contexts/DarkMode\";\n\nconst makeTheme = (isOn: boolean) => {\n    return createMuiTheme(\n        !isOn ? {\n            palette: {\n                type: \"light\", primary: red, secondary: blue,\n            }\n        } : {\n            palette: {\n                type: \"dark\", primary: deepPurple, secondary: lightBlue\n            }\n        }\n    );\n}\n\nexport const ThemeProvider = ({ children }: { children: JSX.Element }) => {\n    const {isOn} = useContext(DarkModeCtx);\n    return (\n        <MuiThemeProvider theme={makeTheme(isOn)}>\n            {children}\n        </MuiThemeProvider>\n    );\n}","import App from \"./App\";\nexport default App;\n","import * as React from \"react\";\nimport firebase from \"firebase/app\";\nimport { rrfConfig } from \"../../config\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport {HashRouter} from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport Props from \"./props\";\nimport SnackbarProvider from \"../../contexts/Snackbar\";\nimport {DarkModeProvider} from \"../../contexts/DarkMode\";\nimport {ThemeProvider} from \"../../theme\";\n\nexport default function App({ store, routes }: Props) {\n\n    // react-redux-firebase props\n    const rrfProps = {\n        firebase,\n        config: rrfConfig,\n        dispatch: store.dispatch,\n        createFirestoreInstance\n    }\n\n    return (\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <DarkModeProvider>\n                    <ThemeProvider>\n                        <SnackbarProvider>\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\n                                <HashRouter>\n                                    <CssBaseline/>\n                                    {routes}\n                                </HashRouter>\n                            </MuiPickersUtilsProvider>\n                        </SnackbarProvider>\n                    </ThemeProvider>\n                </DarkModeProvider>\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport store from \"./store/store\";\nimport createRoutes from \"./routes\";\n\nimport App from \"./containers/App\";\nimport \"./global.css\";\n\nconst target = document.getElementById(\"root\");\nReactDOM.render(<App store={store} routes={createRoutes()} />, target);\n","import * as React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport CoreLayout from \"../layouts/CoreLayout\";\nimport HomeRoute from \"./Home\";\nimport NotFoundRoute from \"./NotFound\";\nimport ProjectsRoute from \"./Projects\";\nimport AddProjectRoute from \"./AddProject\";\nimport ProjectRoute from \"./Project\";\nimport UserRoute from \"./User\";\nimport ManageRoute from \"./Manage\";\nimport EditProjectRoute from \"./EditProject\";\nimport AuthIsLoaded from \"../containers/AuthIsLoaded\";\n\nexport default function createRoutes() {\n    return (\n        <CoreLayout>\n            <AuthIsLoaded>\n                <Switch>\n                    <Route exact path={HomeRoute.path} component={HomeRoute.component} />\n                    {[\n                        AddProjectRoute,\n                        EditProjectRoute,\n                        ProjectsRoute,\n                        ProjectRoute,\n                        UserRoute,\n                        ManageRoute\n                    ].map((settings: any, i) => <Route key={i} {...settings} />)}\n                    <Route component={NotFoundRoute.component} />\n                </Switch>\n            </AuthIsLoaded>\n        </CoreLayout>\n    );\n\n}\n"],"sourceRoot":""}