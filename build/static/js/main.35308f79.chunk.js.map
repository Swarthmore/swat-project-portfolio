{"version":3,"sources":["config.ts","store/reducer.ts","store/store.ts","layouts/CoreLayout/styles.ts","containers/Navbar/LogoutButton/LogoutButton.tsx","containers/Navbar/ProfileButton/ProfileButton.tsx","containers/Navbar/styles.ts","contexts/DarkMode.tsx","containers/DarkModeSwitch/styles.ts","containers/DarkModeSwitch/DarkModeSwitch.tsx","containers/Navbar/index.ts","containers/Navbar/Navbar.tsx","containers/LoginCard/styles.ts","containers/LoginCard/index.ts","containers/LoginCard/LoginCard.tsx","containers/SideMenu/styles.ts","hooks/useTeams.ts","hooks/useUid.ts","constants/paths.ts","containers/SideMenu/index.ts","containers/SideMenu/SideMenu.tsx","contexts/Snackbar.tsx","hooks/useSnax.ts","layouts/CoreLayout/index.ts","layouts/CoreLayout/CoreLayout.tsx","routes/Home/components/styles.ts","routes/Home/index.ts","routes/Home/components/Home.tsx","routes/NotFound/components/styles.ts","routes/NotFound/index.ts","routes/NotFound/components/NotFound.tsx","routes/Projects/components/styles.ts","containers/ProjectCard/styles.ts","utils/index.ts","containers/ProjectCard/ProjectCard.tsx","containers/PageTitle/PageTitle.tsx","routes/Projects/index.ts","routes/Projects/components/Projects.tsx","routes/AddProject/components/styles.ts","hooks/useInput.ts","containers/FormSubmitButton/FormSubmitButton.tsx","routes/AddProject/components/AddProject.tsx","routes/AddProject/index.ts","routes/Project/components/styles.ts","containers/StatusUpdate/styles.ts","containers/StatusUpdate/StatusUpdate.tsx","routes/Project/index.ts","routes/Project/components/Project.tsx","routes/User/components/styles.ts","routes/User/index.ts","routes/User/components/User.tsx","routes/Manage/components/styles.ts","routes/Manage/index.ts","routes/Manage/components/ManagePage.tsx","routes/EditProject/components/styles.ts","routes/EditProject/index.ts","routes/EditProject/components/EditProject.tsx","containers/AuthIsLoaded/index.ts","containers/AuthIsLoaded/AuthIsLoaded.tsx","theme.tsx","containers/App/index.ts","containers/App/App.tsx","index.tsx","routes/index.tsx"],"names":["rrfConfig","userProfile","useFirestoreForProfile","appConfig","rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","createStore","makeStyles","theme","root","flexGrow","content","display","background","palette","paper","children","padding","spacing","LogoutButton","useFirebase","history","useHistory","Tooltip","title","IconButton","color","aria-label","component","onClick","logout","then","push","ProfileButton","auth","useSelector","state","uid","DarkModeCtx","createContext","isOn","toggle","DarkModeProvider","matches","window","matchMedia","useState","setIsOn","Provider","value","alignItems","paddingLeft","paddingRight","on","fontWeight","off","DarkModeSwitch","classes","useContext","className","Switch","checked","onChange","icon","Brightness7","checkedIcon","Brightness2","Navbar","styles","AppBar","position","Toolbar","Typography","variant","isLoaded","isEmpty","top","right","width","LoginCard","Card","CardHeader","CardContent","Button","fullWidth","login","provider","type","maxWidth","borderRight","minHeight","useTeams","useFirestoreConnect","collection","teams","ordered","loaded","useUid","SINGLE_PATH","LIST_BY_TEAM","SideMenu","pathname","useLocation","lastPathPart","split","pop","MenuList","map","team","MenuItem","id","replace","name","Divider","SnackbarContext","snack","msg","open","setSnack","useSnax","CoreLayout","closeSnack","Snackbar","autoHideDuration","onClose","Alert","elevation","severity","path","to","row","marginTop","marginBottom","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","dateString","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","sortUpdates","updates","Array","from","sort","first","second","createdOn","ProjectCard","project","rest","React","expanded","setExpanded","avatar","Avatar","src","meta","createdBy","avatarUrl","subheader","length","CardActions","disableSpacing","disabled","style","endIcon","Collapse","in","timeout","unmountOnExit","update","PageTitle","gutterBottom","props","useParams","teamsAreLoaded","populates","child","projects","populate","filteredProjects","Object","keys","key","filter","teamName","form","flexDirection","field","mdButton","button","markdown","border","boxSizing","useInput","initialValue","setValue","reset","val","bind","e","target","parse","toISOString","FormSubmitButton","label","size","markdownCheat","mdPreview","setMdPreview","useFirestore","bindName","resetName","description","bindDescription","resetDescription","now","deadline","bindDeadline","resetDeadline","bindMarkdown","resetMarkdown","addProject","add","resetForm","undefined","event","a","preventDefault","toString","ownedBy","res","onSubmit","TextField","required","DatePicker","format","disablePast","plugins","gfm","source","Link","href","rows","rowsMax","multiline","divider","card","skeleton","height","subtitle","section","StatusUpdate","setVal","slice","error","console","doc","isOwner","FieldValue","arrayUnion","align","i","marginButton","params","where","userId","log","displayName","descriptionCell","storeAs","ownedProject","onDeleteClick","confirm","delete","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","substr","onEditClick","preview","updatedProject","deleteUpdate","updatedData","arrayRemove","AuthIsLoaded","email","test","makeTheme","createMuiTheme","primary","deepPurple","secondary","deepOrange","red","blue","ThemeProvider","App","store","routes","rrfProps","config","dispatch","createFirestoreInstance","utils","MomentUtils","CssBaseline","document","getElementById","ReactDOM","exact","HomeRoute","AddProjectRoute","EditProjectRoute","ProjectsRoute","ProjectRoute","UserRoute","ManageRoute","settings","NotFoundRoute"],"mappings":"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","file":"static/js/main.35308f79.chunk.js","sourcesContent":["/**\n * @description\n * \n * This file contains configurations for packages used in this app\n * \n */\n\n// firebase config\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const fbConfig = {\n    apiKey: \"AIzaSyDyQLHfX6av-b8p1BkvZiAR6W387AqdmT4\",\n    authDomain: \"swart-project-portfolio.firebaseapp.com\",\n    projectId: \"swart-project-portfolio\",\n    storageBucket: \"swart-project-portfolio.appspot.com\",\n    messagingSenderId: \"418686934766\",\n    appId: \"1:418686934766:web:8064a0a8c9bb5f20de5dff\",\n    measurementId: \"G-7HCHCYKQFS\"\n};\n\n// react-redux-firebase config\nexport const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\n\n// app config\nexport const appConfig = {\n    name: \"Projects @ Swarthmore\"\n}\n","/**\n * @description\n * \n * This file contains the root reducer for the firebase / firestore store\n * \n */\n\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nexport const rootReducer = combineReducers({\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","/**\n * @description\n * \n * This file includes configuration and setup for react-redux-firebase. It exports both the rrfConfig,\n * which is used by the root-level provider in the App component, as well as the firebase store.\n * \n */\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport { createStore } from \"redux\";\nimport { fbConfig, rrfConfig } from \"../config\";\nimport { rootReducer } from \"./reducer\";\n\n// initialize firebase\nfirebase.initializeApp({ ...fbConfig, ...rrfConfig})\n\n// initialize firestore\nfirebase.firestore()\n\n// enable analytics\nfirebase.analytics();\n\n// initial state for this store\nconst initialState = {}\n\nexport default createStore(rootReducer, initialState)","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    content: {\n        display: \"flex\",\n        flexGrow: 1,\n        background: theme.palette.background.paper\n    },\n    children: {\n        flexGrow: 1,\n        padding: theme.spacing(4)\n    }\n}));\n","/**\n * @description\n * \n * This component provides a styled logout button that when clicked\n * will log the user out of the app. This should destroy session/cookie\n * data for the user.\n * \n */\n\nimport * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tooltip } from \"@material-ui/core\";\n\nexport default function LogoutButton() {\n\n    const firebase = useFirebase();\n    const history = useHistory();\n\n    function onClick() {\n        firebase.logout().then(() => {\n            history.push(\"/\");\n        });\n    }\n\n    return (\n        <Tooltip title=\"Logout of app\">\n            <IconButton color=\"inherit\" aria-label=\"Logout of app\" component=\"span\" onClick={onClick}>\n                <ExitToAppIcon />\n            </IconButton>\n        </Tooltip>      \n    )\n\n}","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ProfileIcon from \"@material-ui/icons/Person\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ProfileButton() {\n\n    const auth = useSelector((state: any) => state.firebase.auth)\n    const history = useHistory();\n\n    if (!auth.uid) {\n        return <>no uid</>\n    }\n    return (\n        <Tooltip title=\"View Profile\">\n            <IconButton color=\"inherit\" aria-label=\"View Profile\" component=\"span\" onClick={() => history.push(\"/manage\")}>\n                <ProfileIcon />\n            </IconButton>\n        </Tooltip>      \n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    title: {\n        flexGrow: 1\n    }\n}));","import {createContext, useState} from \"react\";\n\n// TODO: Get this setting from the browser, then set it as default\nexport const DarkModeCtx = createContext<{isOn: boolean, toggle: () => void}>({\n    isOn: false,\n    toggle: () => {}\n});\n\nexport const DarkModeProvider = ({children}: {children: JSX.Element}) => {\n\n    // check user's browser preferences for dark mode\n    const matches = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    const [isOn, setIsOn] = useState(matches);\n\n    const toggle = () => {\n        if (isOn) {\n            setIsOn(false);\n        } else {\n            setIsOn(true);\n        }\n    }\n\n    return (\n        <DarkModeCtx.Provider value={{isOn, toggle}}>{children}</DarkModeCtx.Provider>\n    );\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1)\n    },\n    on: {\n        fontWeight: \"bold\",\n        color: \"#ffffff\"\n    },\n    off: {\n        fontWeight: \"lighter\",\n        color: \"#dedede\"\n    }\n}));","import {Switch} from \"@material-ui/core\";\nimport {useContext} from \"react\";\nimport {DarkModeCtx} from \"../../contexts/DarkMode\";\nimport {\n    Brightness2,\n    Brightness7\n} from \"@material-ui/icons\";\nimport makeStyles from \"./styles\";\n\nexport default function DarkModeSwitch() {\n\n    const classes = makeStyles();\n    const {isOn, toggle} = useContext(DarkModeCtx);\n\n    return (\n        <div className={classes.root}>\n            <span className={isOn ? classes.off : classes.on }>Light</span>\n            <Switch\n                checked={isOn}\n                onChange={toggle}\n                icon={<Brightness7/>}\n                checkedIcon={<Brightness2/>}\n            />\n            <span className={isOn ? classes.on : classes.off}>Dark</span>\n        </div>\n    );\n}","import Navbar from \"./Navbar\";\nexport default Navbar;\n","/**\n * @description\n * \n * This file contains the main navbar for the app. It will appear on the top of the page.\n * \n */\n\nimport * as React from \"react\";\nimport { AppBar, Link, Toolbar, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { RootState } from \"../../store/reducer\";\nimport LogoutButton from \"./LogoutButton/LogoutButton\";\nimport ProfileButton from \"./ProfileButton/ProfileButton\";\nimport styles from \"./styles\";\nimport { appConfig } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\nimport DarkModeSwitch from \"../DarkModeSwitch/DarkModeSwitch\";\n\nexport default function Navbar() {\n\n    const auth = useSelector((state: RootState) => state.firebase.auth)\n    const classes = styles();\n    const history = useHistory();\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title} color=\"inherit\" onClick={() => history.push(\"/\")}>{appConfig.name}</Typography>\n                <DarkModeSwitch />\n                {/* Display the logout button if the user is logged in */}\n                {isLoaded(auth) && !isEmpty(auth) && <ProfileButton />}\n                {isLoaded(auth) && !isEmpty(auth) && <LogoutButton />}\n            </Toolbar>\n        </AppBar>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        width: \"400px\",\n        background: theme.palette.background.paper\n    },\n}))","import LoginCard from \"./LoginCard\";\nexport default LoginCard;","import * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { Card, CardContent, CardHeader, Button } from \"@material-ui/core\";\nimport { appConfig } from \"../../config\";\nimport styles from \"./styles\";\n\nexport default function LoginCard() {\n\n    const firebase = useFirebase();\n    const classes = styles();\n\n    function loginWithGoogle() {\n        return firebase.login({ provider: \"google\", type: \"popup\"  })\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader \n                title={appConfig.name}\n            />\n            <CardContent>\n                <Button color=\"primary\" fullWidth variant=\"contained\" onClick={loginWithGoogle}>Sign in with Google</Button>\n            </CardContent>\n        </Card>\n    )\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: 250,\n        width: 250,\n        borderRight: `1px solid #ccc`,\n        minHeight: \"100vh\"\n    }\n}));","import {isLoaded, useFirestoreConnect} from \"react-redux-firebase\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducer\";\n\nexport default function useTeams() {\n    useFirestoreConnect([\n        {collection: \"teams\"}\n    ]);\n    const { teams } = useSelector((state:RootState) => state.firestore.ordered)\n    return {\n        loaded: isLoaded(teams),\n        teams\n    }\n}","import {useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducer\";\n\nexport default function useUid() {\n    const { uid } = useSelector((state: RootState) => state.firebase.auth);\n    return { uid }\n}","export const LOGIN_PATH = \"/login\";\nexport const ACCOUNT_PATH = \"/account\";\nexport const SINGLE_PATH = \"/single-project/:id\";\nexport const LIST_BY_TEAM = \"/projects/by-team/:id\";\nexport const LIST_BY_USER = \"/projects/by-user/:id\";\nexport const ADD_PROJECT_ROUTE = \"/projects/add\";\nexport const MANAGE = \"/manage\";\nexport const LOGOUT_PATH = \"/logout\";\nexport const HOME_PATH = \"/\";","import SideMenu from \"./SideMenu\";\nexport default SideMenu;\n","import React from \"react\";\nimport { MenuList, MenuItem, Divider } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport useTeams from \"../../hooks/useTeams\";\nimport useUid from \"../../hooks/useUid\";\nimport {Team} from \"../../types\";\nimport {ADD_PROJECT_ROUTE, LIST_BY_TEAM} from \"../../constants/paths\";\n\nexport default function SideMenu() {\n\n    const classes = styles();\n    const history = useHistory();\n    const { pathname } = useLocation();\n\n    const { uid } = useUid();\n    const { teams, loaded } = useTeams();\n\n    if (!uid) {\n        return <div>Not logged in</div>\n    }\n\n    const onSelect = (id: string) => {\n        history.push(LIST_BY_TEAM.replace(\":id\", id));\n    }\n\n    const onShowAllClick = () => {\n        history.push(LIST_BY_TEAM.replace(\":id\", \"all\"));\n    }\n\n    const onAddClick = () => {\n        history.push(ADD_PROJECT_ROUTE);\n    }\n\n    const lastPathPart = pathname.split(\"/\").pop();\n\n    return !loaded\n        ? <>Loading</>\n        : (\n            <MenuList className={classes.root}>\n                {teams.map((team: Team) => <MenuItem key={team.id} onClick={() => onSelect(team.id)}>\n                    {lastPathPart === team.id ? <strong>{team.name}</strong> : team.name}\n                </MenuItem>)}\n                <Divider />\n                <MenuItem onClick={onShowAllClick}>\n                    {lastPathPart === \"all\" ? <strong>All Projects</strong> : \"All Projects\"}\n                </MenuItem>\n                <Divider />\n                {uid && <MenuItem onClick={onAddClick}>\n                    {lastPathPart === \"add\" ? <strong>Add Project</strong> : \"Add Project\"}\n                </MenuItem>}\n            </MenuList>\n        );\n\n}","import {createContext, useState} from \"react\";\n\ntype Severity = \"error\" | \"warning\" | \"info\" | \"success\";\n\ninterface Snack {\n    type: Severity,\n    msg: string,\n    open: boolean\n}\n\nexport const SnackbarContext = createContext<{ snack: Snack, setSnack: any }>(\n    {\n        snack: { type: \"error\", msg: \"\", open: false },\n        setSnack: () => {}\n    }\n);\n\nexport default function({ children }: { children: JSX.Element }) {\n    const [snack, setSnack] = useState<Snack>({\n        type: \"error\",\n        msg: \"\",\n        open: false\n    });\n\n    return <SnackbarContext.Provider value={{ snack, setSnack }}>\n        {children}\n    </SnackbarContext.Provider>\n}","import {useContext} from \"react\";\nimport {SnackbarContext} from \"../contexts/Snackbar\";\n\nexport default function useSnax() {\n    const {snack, setSnack} = useContext(SnackbarContext);\n    return {snack, setSnack}\n}","import CoreLayout from \"./CoreLayout\";\nexport default CoreLayout;","import React from \"react\";\nimport styles from \"./styles\";\nimport Props from \"./props\";\nimport Navbar from \"../../containers/Navbar\";\nimport LoginCard from \"../../containers/LoginCard\";\nimport SideMenu from \"../../containers/SideMenu\";\nimport useUid from \"../../hooks/useUid\";\nimport {Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport useSnax from \"../../hooks/useSnax\";\n\nexport default function CoreLayout({ children }: Props) {\n\n    const classes = styles();\n    const { uid } = useUid();\n\n    const { snack, setSnack } = useSnax();\n\n    const closeSnack = () => setSnack({ open: false, msg: \"\", type: \"\" });\n\n    return (\n        <div className={classes.root}>\n            {!uid && <LoginCard />}\n            <Navbar />\n            <div className={classes.content}>\n                {uid && <SideMenu/>}\n                <div className={classes.children}>{children}</div>\n            </div>\n            {snack.open && <Snackbar open={snack.open} autoHideDuration={5000} onClose={() => closeSnack()}>\n                <Alert elevation={6} variant=\"filled\" severity={snack.type}\n                       onClose={() => closeSnack()}>{snack.msg}</Alert>\n            </Snackbar>}\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {}\n}));","import HomePage from \"./components/Home\";\n\nexport default {\n    path: \"/\",\n    component: HomePage\n};","import React from \"react\";\nimport styles from \"./styles\";\nimport { Redirect } from \"react-router-dom\";\nimport useUid from \"../../../hooks/useUid\";\n\nexport default function Home() {\n\n    const classes = styles();\n    const { uid } = useUid();\n\n\n    return uid ? <Redirect to=\"projects/by-team/all\" /> : <div>Login to view projects</div>\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {}\n}));\n","import NotFoundPage from \"./components/NotFound\";\n\nexport default {\n    component: NotFoundPage \n};","import * as React from \"react\";\nimport styles from \"./styles\"\n\nexport default function NotFoundPage() {\n\n    const classes = styles();\n\n    return (\n        <div className={classes.root}>\n            <p>404</p>\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {},\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    }\n}));\n","import {ProjectStatusUpdate} from \"../types\";\n\nexport function createMeta(createdBy: string) {\n    return {\n        createdBy,\n        createdOn: Date.now().toString(),\n        visible: true\n    }\n}\n\nexport function dateString(timestamp: string) {\n    const date = new Date(+timestamp);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}`\n}\n\nexport function sortUpdates(updates: ProjectStatusUpdate[]) {\n    return Array.from(updates).sort((first, second) => (+second.createdOn - +first.createdOn));\n}","import React from \"react\";\nimport { Divider, Collapse, IconButton, Button, Card, CardContent, CardActions, Typography, CardHeader, Avatar } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport styles from \"./styles\";\nimport {createMeta, dateString, sortUpdates} from \"../../utils\";\nimport {SINGLE_PATH} from \"../../constants/paths\";\nimport {ProjectStatusUpdate} from \"../../types\";\n\nexport default function ProjectCard({ project, ...rest }: any) {\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const history = useHistory();\n    const classes = styles();\n\n    const handleExpandClick = () => setExpanded(!expanded);\n\n    return (\n\n        <Card {...rest}>\n\n            <CardHeader\n                avatar={\n                    <Avatar src={project.meta.createdBy.avatarUrl} />\n                }\n                title={project.name}\n                subheader={dateString(project.meta.createdOn)}\n            />\n\n            <CardContent>\n                {project.updates && project.updates.length > 0 && (\n                    <>\n                        <Typography variant=\"body2\" color=\"textSecondary\">{dateString(sortUpdates(Array.from(project.updates))[0].createdOn)}</Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">{sortUpdates(Array.from(project.updates))[0].value}</Typography>\n                    </>\n                )}\n            </CardContent>\n\n            <CardActions disableSpacing>\n                <Button onClick={() => history.push(SINGLE_PATH.replace(\":id\", project.id))}>Read More</Button>\n                <Button onClick={handleExpandClick} disabled={project.updates && project.updates.length === 0} style={{ marginLeft: \"auto\" }} endIcon={\n                    <ExpandMoreIcon className={expanded ? classes.expand : classes.expandOpen} />\n                }>\n                    Recent Activity\n                </Button>\n            </CardActions>\n\n            {project.updates && project.updates.length > 0 && <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                {sortUpdates(Array.from(project.updates)).map((update:ProjectStatusUpdate) => (\n                    <Card key={update.value}>\n                        <CardContent>\n                            <Typography variant=\"subtitle2\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                    </Card>\n                ))}\n            </Collapse>}\n        </Card>\n    );\n\n}","import { Typography } from \"@material-ui/core\";\n\nexport function PageTitle({ title }: { title: string }) {\n\n    return (\n        <Typography variant=\"h4\" gutterBottom >{title} Projects</Typography>\n    );\n\n}","import ProjectsPage from \"./components/Projects\";\nimport { LIST_BY_TEAM as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectsPage\n}","import React from \"react\";\nimport styles from \"./styles\";\nimport {useFirestoreConnect, populate, isLoaded, isEmpty, firebaseConnect} from \"react-redux-firebase\";\nimport {connect, useSelector} from \"react-redux\";\nimport {useHistory, useLocation, useParams} from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport ProjectCard from \"../../../containers/ProjectCard/ProjectCard\";\nimport {Project, Team} from \"../../../types/index\";\nimport { PageTitle } from \"../../../containers/PageTitle\";\nimport {RootState} from \"../../../store/reducer\";\nimport useTeams from \"../../../hooks/useTeams\";\n\nexport default function Projects(props: any) {\n\n    const classes = styles();\n    const { id }: { id: string } = useParams();\n    const { teams, loaded: teamsAreLoaded } = useTeams();\n    const { pathname } = useLocation();\n    const history = useHistory();\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n\n    useFirestoreConnect([\n        { \n            collection: \"projects\",\n            populates,\n            ...(id ? [\"meta.createdBy.team\", \"==\", id]: {})\n        },\n    ]);\n\n    // at this point, the results aren't filtered because we need to populate the projects to get\n    // the team id\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    if (!isLoaded(projects) || !teamsAreLoaded) {\n        return <div>Loading...</div>\n    }\n\n    if (isEmpty(projects)) {\n        return <div>No projects found</div>\n    }\n\n    // filter the projects by team id\n    const filteredProjects = Object.keys(projects)\n        .map(key => ({ id: key, ...projects[key] }))\n        .filter(project => (id === \"all\" ? project : project.meta.createdBy.team === id))\n\n    const lastPathPart = pathname.split(\"/\").pop();\n\n    const teamName = lastPathPart === \"all\" ? \"All\" : teams.filter((team: Team) => team.id === id)[0].name || \"Unknown\";\n\n    return (\n        <div className={classes.root}>\n            <PageTitle title={teamName} />\n            {filteredProjects.length === 0 && <Typography variant=\"subtitle1\">This team doesn't have any projects posted yet</Typography>}\n            {filteredProjects.map((project: Project) => <ProjectCard key={project.id} project={project} className={classes.row} />)}\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(2),\n        maxWidth: 200\n    },\n    markdown: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    }\n}));\n","import { useState } from \"react\";\n\nexport default function useInput(initialValue: string) {\n\n    const [value, setValue] = useState(initialValue)\n\n    return {\n        value,\n        setValue: () => setValue,\n        reset: (val: string|undefined) => val ? setValue(val) : setValue(\"\"),\n        bind: {\n            value,\n            onChange: (e: any) => {\n                // If event.target is set, we can assume the field is a text input with a value property\n                // If event.target is not set, check to see if e is a moment object. If it is a moment object\n                // that means we can use e.toString() to get the date\n                e.target \n                    ? setValue(e.target.value) \n                        : Date.parse(e)\n                            ? setValue(e.toISOString()) : null\n            }\n        }\n    }\n\n}","import { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n        maxWidth: 300\n    }\n}));\n\ninterface Props extends ButtonProps {\n    label: string\n}\n\nexport function FormSubmitButton({ label, ...rest }: Props) {\n\n    const classes = styles();\n\n    return (\n        <Button size=\"large\" variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.root} {...rest}>{label}</Button>\n    );\n\n}","import { TextField, Button, Typography, Link } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Project } from \"../../../types\";\nimport { RootState } from \"../../../store/reducer\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport {SINGLE_PATH} from \"../../../constants/paths\";\nimport MD from \"react-markdown\";\nimport gfm from \"remark-gfm\"\n\nexport const markdownCheat = \"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\";\n\nexport default function AddProjectPage() {\n\n    // whether or not to show markdown preview\n    const [mdPreview, setMdPreview] = React.useState(false);\n\n    const firestore = useFirestore();\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const classes = styles();\n    const {setSnack} = useSnax();\n\n    // if auth.email is not from swarthmore, log the user out\n\n    const history = useHistory();\n\n    // the name field\n    const { \n        value: name, \n        bind: bindName, \n        reset: resetName \n    } = useInput(\"\");\n\n    // the description field\n    const { \n        value: description, \n        bind: bindDescription, \n        reset: resetDescription \n    } = useInput(\"\");\n\n    // the deadline field\n    const { \n        value: deadline, \n        bind: bindDeadline, \n        reset: resetDeadline\n    } = useInput(new Date(Date.now()).toISOString());\n\n    // the markdown field\n    const { \n        value: markdown, \n        bind: bindMarkdown, \n        reset: resetMarkdown\n     } = useInput(\"\");\n\n    // adds a project to firestore\n    function addProject(project: Project) {\n        return firestore.collection('projects').add(project);\n    }\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n\n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n        \n        const uid = auth.uid.toString();\n\n        const project: Project = {\n            name,\n            description,\n            markdown,\n            deadline,\n            meta: {\n                ownedBy: uid,\n                createdBy: uid,\n                createdOn: Date.now().toString() \n            },\n            updates: []\n        }\n\n        try {\n            const res = await addProject(project);\n            resetForm();\n            setSnack({ type: \"success\", msg: \"Project created success\", open: true });\n            history.push(SINGLE_PATH.replace(\":id\", res.id));\n            \n        } catch (error) {\n            setSnack({ type: \"error\", msg: error.toString(), open: true });\n        }\n\n    }\n\n    const handlePreviewClick = () => {\n        setMdPreview(true);\n    }\n\n    const closeMarkdownPreview = () => {\n        setMdPreview(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Add Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n\n                <DatePicker label=\"Project Deadline\" className={classes.field} format=\"MM/DD/yyyy\" disablePast={true} {...bindDeadline} />\n\n                {mdPreview\n                    ? (\n                        <div className={classes.field}>\n                            <Typography variant=\"caption\" gutterBottom>Markdown Preview</Typography>\n                            <MD plugins={[gfm]} source={markdown} className={classes.markdown} />\n                            <Button fullWidth size=\"large\" variant=\"contained\" onClick={closeMarkdownPreview}>Edit</Button>\n                        </div>\n\n                    ) : (\n                        <>\n                            <div className={classes.field}>\n                                <label>\n                                    Tell us about your project. You can use Markdown, but keep it under 400 characters\n                                </label>\n                                <br/>\n                                <Link href={markdownCheat} target=\"_blank\">Markdown Cheat Sheet</Link>\n                                <TextField className={classes.field} fullWidth label=\"Markdown description\" rows={10} rowsMax={10}\n                                           variant=\"filled\" multiline {...bindMarkdown} />\n                            </div>\n                            <Button size=\"large\" variant=\"contained\" onClick={handlePreviewClick} disabled={mdPreview}>Preview Markdown</Button>\n                        </>\n                )}\n\n\n                <FormSubmitButton label=\"Submit\" />\n            </form>\n        </div>\n    )\n\n}","import AddProjectPage from \"./components/AddProject\";\nexport default {\n    path: \"/projects/add\",\n    component: AddProjectPage\n};\n\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(5),\n        paddingRight: theme.spacing(5)\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    card: {\n        marginBottom: theme.spacing(3)\n    },\n    update: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    },\n    markdown: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    },\n    skeleton: {\n        flexGrow: 1,\n        height: 300\n    },\n    title: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    },\n    subtitle: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    },\n    section: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    }\n}));\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2)\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nexport default function StatusUpdate({ onSubmit }: { onSubmit: (val: string) => void }) {\n\n    const [val, setVal] = React.useState(\"\");\n\n    const classes = styles();\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        // restrict to 300 characters\n        setVal(\n            e.target.value.slice(0, 300)\n        )\n    }\n\n    const onClick = (val:string) => {\n        try {\n            onSubmit(val);\n            // clear the form\n            setVal(\"\");\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    \n    return (\n        <div className={classes.root}>\n            <TextField value={val} onChange={onChange} fullWidth variant=\"filled\" label=\"Share an update about this project\" />\n            <Button className={classes.button} color=\"primary\" variant=\"contained\" onClick={() => onClick(val)} disabled={val.length < 5}>Post Update</Button>\n        </div>\n    )\n\n}","import ProjectPage from \"./components/Project\";\nimport { SINGLE_PATH as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectPage\n}","import React from \"react\";\nimport { Card, CardContent, Typography, Divider } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty, useFirestore } from \"react-redux-firebase\";\nimport MD from \"react-markdown\";\nimport gfm from \"remark-gfm\"\nimport PostUpdate from \"../../../containers/StatusUpdate/StatusUpdate\";\nimport firebase from \"firebase\";\nimport {dateString, sortUpdates} from \"../../../utils\";\nimport {Project} from \"../../../types\";\nimport {RootState} from \"../../../store/reducer\";\nimport useUid from \"../../../hooks/useUid\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport {Image} from \"@material-ui/icons\";\n\nexport default function ProjectPage() {\n\n    const classes = styles();\n    const history = useHistory();\n    const firestore = useFirestore();\n    const {uid} = useUid();\n    const {id}: { id: string } = useParams();\n    const {setSnack} = useSnax();\n\n    // if there is no project id provided, redirect the user to the home page\n    if (!id) {\n        history.push(\"/\");\n    }\n\n    //const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = id;\n\n    useFirestoreConnect([ \n        { collection, doc }\n    ])\n\n    const project = useSelector((state: RootState) => state.firestore.ordered.projects);\n\n    // Show message while project is loading\n    if (!isLoaded(project)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project \n    if (isEmpty(project)) {\n        return <div>Project is empty</div>\n    }\n\n    const first = project[0];\n\n    if (!first) {\n        setSnack({ msg: \"Project not found!\", type: \"error\", open: true });\n    }\n\n    const isOwner = first.meta.ownedBy === uid;\n\n    const onSubmit = async (value: string) => {\n        try {\n            const update = {\n                value: value,\n                createdOn: Date.now().toString(),\n                createdBy: uid\n            }\n            await firestore.update(`projects/${first.id}`, { updates:  firebase.firestore.FieldValue.arrayUnion(update) });\n            setSnack({ msg: \"Status update posted\", type: \"success\", open: true });\n        } catch(error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true });\n        }\n    }\n    \n    return (\n        <div className={classes.root}>\n\n            <Typography variant=\"h1\" align=\"center\" className={classes.title}>{first.name}</Typography>\n            <Typography variant=\"subtitle1\" align=\"center\">Started on {dateString(first.meta.createdOn)}</Typography>\n            <Typography variant=\"subtitle1\" align=\"center\">{first.description}</Typography>\n\n            {isOwner && <PostUpdate onSubmit={onSubmit} />}\n\n            {first.updates && first.updates.length > 0 && <Typography variant=\"h2\" align=\"center\" className={classes.subtitle}>Project Updates</Typography>}\n\n            {first.updates && sortUpdates(first.updates).map((update: any, i: number) => (\n                <div key={i} className={classes.update}>\n                    <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                    <Typography>{update.value}</Typography>\n                </div>\n            ))}\n\n            {first.markdown && <Typography variant=\"h2\" align=\"center\" className={classes.subtitle}>About This Project</Typography>}\n            {first.markdown && <MD plugins={[gfm]}>{first.markdown}</MD>}\n\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginButton: theme.spacing(1)\n    }\n}));\n","import UserPage from \"./components/User\";\nimport { LIST_BY_USER as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: UserPage\n}","import React from \"react\";\nimport styles from \"./styles\"\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport ProjectCard from \"../../../containers/ProjectCard/ProjectCard\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function UserPage() {\n\n    const classes = styles();\n\n    const params: { userId: string } = useParams();\n\n    const collection = \"projects\";\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }]; \n\n    useFirestoreConnect([\n        {\n            collection,\n            populates,\n            where: [\"meta.createdBy\", \"==\", params.userId]\n        }\n    ])\n\n    const projects = useSelector((state: any) => populate(state.firestore, \"projects\", populates));\n\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    if (isEmpty(projects)) {\n        return <div>User has no projects</div>\n    }\n\n    console.log(\n        projects[Object.keys(projects)[0]]\n    )\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Projects by {projects[Object.keys(projects)[0]].meta.createdBy.displayName}</Typography>\n            {Object.keys(projects).map((key: string) => \n                <div className={classes.row} key={key}>\n                    <ProjectCard project={projects[key]} />\n                </div>\n            )}\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    descriptionCell: {\n        flexGrow: 1\n    }\n}));\n","import ManagePage from \"./components/ManagePage\";\n\nexport default {\n    path: \"/manage\",\n    component: ManagePage\n};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, isLoaded, isEmpty, useFirestore } from \"react-redux-firebase\";\nimport { RootState } from \"../../../store/reducer\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Paper,\n    Table,\n    TableBody,\n    TableHead,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Button,\n    IconButton\n} from \"@material-ui/core\";\nimport { Project } from \"../../../types\";\nimport { dateString } from \"../../../utils\";\nimport useUid from \"../../../hooks/useUid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"./styles\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport { Link } from \"react-router-dom\";\nimport {SINGLE_PATH} from \"../../../constants/paths\";\n\nexport default function ManagePage() {\n\n    const history = useHistory();\n    const firestore = useFirestore();\n    const { uid } = useUid();\n    const classes = styles();\n    const {setSnack} = useSnax();\n\n    // at this point we have the user id\n    useFirestoreConnect([\n        { collection: \"projects\", where: [\"meta.createdBy\", \"==\", uid], storeAs: \"ownedProject\" }\n    ]);\n\n    const projects = useSelector((state: RootState) => state.firestore.ordered.ownedProject);\n\n    if (!isLoaded(projects)) {\n        return <>Loading...</>\n    }\n\n    if (isEmpty(projects)) {\n        return <>You have no projects</>\n    }\n\n    const onEditClick = (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        e.preventDefault();\n        history.push(`/projects/edit/${project.id}`);\n    }\n\n    const onDeleteClick = async (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        try {\n            e.preventDefault();\n            const confirmation = confirm(\"WARNING: This action is permanent. Click OK to proceed.\");\n            if (!confirmation) return;\n            await firestore.collection(\"projects\").doc(project.id).delete();\n            setSnack({ msg: \"Project deleted\", type: \"success\", open: true });\n        } catch(error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true });\n        }\n    }\n\n    return (\n        <TableContainer component={Paper} className={classes.root}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell>Deadline</TableCell>\n                        <TableCell>Created</TableCell>\n                        <TableCell>Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {projects.map((project: Project) => (\n                        <TableRow key={project.id || project.name}>\n                            <TableCell><Link to={SINGLE_PATH.replace(\":id\", project.id || \"\")}>{project.name}</Link></TableCell>\n                            <TableCell className={classes.descriptionCell}>{project.description.length > 100 ? project.description.substr(0, 100) + \"...\" : project.description}</TableCell>\n                            <TableCell>{project.deadline && new Date(project.deadline).toLocaleDateString()}</TableCell>\n                            <TableCell>{dateString(project.meta.createdOn)}</TableCell>\n                            <TableCell>\n                                <IconButton onClick={e => onEditClick(e, project)}>\n                                    <EditIcon />\n                                </IconButton>\n                                <IconButton onClick={e => onDeleteClick(e, project)}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(1)\n    },\n    preview: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    },\n    updates: {\n        marginTop: theme.spacing(2)\n    },\n    markdown: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    }\n}));\n","import EditProjectPage from \"./components/EditProject\";\nexport default {\n    path: \"/projects/edit/:id\",\n    component: EditProjectPage\n};\n\n","import React, {useState} from \"react\";\nimport {TextField, Button, Typography, Card, CardContent, CardActions, Link} from \"@material-ui/core\";\nimport { useFirestore, useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { RootState } from \"../../../store/reducer\";\nimport { dateString } from \"../../../utils\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\nimport {HOME_PATH, SINGLE_PATH} from \"../../../constants/paths\";\nimport useSnax from \"../../../hooks/useSnax\";\nimport MD from \"react-markdown\";\nimport {markdownCheat} from \"../../AddProject/components/AddProject\";\nimport gfm from \"remark-gfm\"\n\nexport default function EditProjectPage() {\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n    const firestore = useFirestore();\n    const { setSnack } = useSnax();\n\n    if (!params.id) {\n        history.push(\"/\");\n    }\n\n    const classes = styles();\n\n    const [mdPreview, setMdPreview] = useState(false);\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = params.id;\n\n    useFirestoreConnect([\n        { collection, populates, doc }\n    ]);\n\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    // Show message while project is loading\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project\n    if (isEmpty(projects)) {\n        return <div>Project is empty</div>\n    }\n\n    // the name field\n    const {\n        value: name,\n        bind: bindName,\n        reset: resetName\n    } = useInput(projects[params.id].name);\n\n    // the description field\n    const {\n        value: description,\n        bind: bindDescription,\n        reset: resetDescription\n    } = useInput(projects[params.id].description);\n\n    // the deadline field\n    const {\n        value: deadline,\n        bind: bindDeadline,\n        reset: resetDeadline\n    } = useInput(projects[params.id].deadline);\n\n    // the markdown field\n    const {\n        value: markdown,\n        bind: bindMarkdown,\n        reset: resetMarkdown\n    } = useInput(projects[params.id].markdown);\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n\n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n\n        const updatedProject = {\n            name,\n            description,\n            markdown,\n            deadline\n        }\n\n        try {\n            await firestore.update(`projects/${params.id}`, updatedProject)\n            resetForm();\n            setSnack({ msg: \"Project updated\", type: \"success\", open: true })\n            history.push(SINGLE_PATH.replace(\":id\", params.id));\n\n        } catch (error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true })\n        }\n\n    }\n\n    const deleteUpdate = async (update: any) => {\n        try {\n            const updatedData = {\n                updates: firestore.FieldValue.arrayRemove(update)\n            }\n            const confirmed = confirm(\"WARNING: This action is permanent. Proceed?\");\n            if (!confirmed) return;\n            await firestore.update({ collection: \"projects\", doc: params.id }, updatedData);\n            setSnack({ msg: \"Status update deleted\", type: \"success\", open: true })\n            // TODO: this is hacky and should be fixed\n            history.push(HOME_PATH);\n\n        } catch(error) {\n            setSnack({ msg: error.toString(), type: \"error\", open: true });\n        }\n    }\n\n    const handlePreviewClick = () => {\n        setMdPreview(true);\n    }\n\n    const closeMarkdownPreview = () => {\n        setMdPreview(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\" gutterBottom>Edit Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n                <DatePicker className={classes.field} format=\"MM/DD/yyyy\" {...bindDeadline} />\n\n                {mdPreview ? (\n                    <div className={classes.field}>\n                        <Typography variant=\"caption\" gutterBottom>Markdown Preview</Typography>\n                        <MD plugins={[gfm]} source={markdown} className={classes.markdown} />\n                        <Button fullWidth size=\"large\" variant=\"contained\" onClick={closeMarkdownPreview}>Edit</Button>\n                    </div>\n                ) : (\n                    <>\n                        <Link href={markdownCheat} target=\"_blank\">Markdown Cheat Sheet</Link>\n                        <TextField className={classes.field} label=\"Project Markdown\" rows=\"10\" rowsMax=\"10\" variant=\"filled\" multiline fullWidth {...bindMarkdown} />\n                        <Button size=\"large\" variant=\"contained\" onClick={handlePreviewClick} disabled={mdPreview}>Preview Markdown</Button>\n                    </>\n                )}\n                <FormSubmitButton label=\"Save\" />\n            </form>\n\n\n            <div className={classes.updates}>\n                {<Typography variant=\"h5\" gutterBottom>Updates</Typography>}\n                {projects[params.id].updates.length === 0 && <Typography>You haven't posted any updates to this project yet</Typography>}\n                {projects[params.id].updates.map((update: any, i: number) => (\n                    <Card key={i}>\n                        <CardContent>\n                            <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button onClick={() => deleteUpdate(update)}>Delete</Button>\n                        </CardActions>\n                    </Card>\n                ))}\n            </div>\n        </div>\n    )\n\n}","import AuthIsLoaded from \"./AuthIsLoaded\";\nexport default AuthIsLoaded;","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/reducer\";\nimport {isLoaded, useFirebase} from \"react-redux-firebase\";\nimport {useHistory} from \"react-router-dom\";\nimport useSnax from \"../../hooks/useSnax\";\n\nexport default function AuthIsLoaded({ children }: { children: JSX.Element }) {\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const firebase = useFirebase();\n    const history = useHistory();\n    const {setSnack} = useSnax();\n\n    if (!isLoaded(auth)) {\n        return <>Loading...</>\n    }\n\n    // if auth.email exists, and is not part of the swarthmore domain, log the user out\n    if (isLoaded(auth) && auth.email) {\n        if (!(/@swarthmore.edu\\s*$/.test(auth.email))) {\n            firebase.logout().then(() => {\n                setSnack({ type: \"error\", msg: \"User email must be part of the @swarthmore.edu domain\", open: true })\n                history.push(\"/\");\n            });\n        }\n    }\n\n    return children;\n}","import {createMuiTheme} from \"@material-ui/core\";\nimport {ThemeProvider as MuiThemeProvider} from \"@material-ui/core/styles\";\nimport {blue, deepOrange, deepPurple, red} from \"@material-ui/core/colors\";\nimport {useContext} from \"react\";\nimport {DarkModeCtx} from \"./contexts/DarkMode\";\n\nconst makeTheme = (isOn: boolean) => {\n    return createMuiTheme(\n        !isOn ? {\n            palette: {\n                type: \"light\", primary: red, secondary: blue\n            }\n        } : {\n            palette: {\n                type: \"dark\", primary: deepPurple, secondary: deepOrange\n            }\n        }\n    );\n}\n\nexport const ThemeProvider = ({ children }: { children: JSX.Element }) => {\n    const {isOn} = useContext(DarkModeCtx);\n    return (\n        <MuiThemeProvider theme={makeTheme(isOn)}>\n            {children}\n        </MuiThemeProvider>\n    );\n}","import App from \"./App\";\nexport default App;\n","import * as React from \"react\";\nimport firebase from \"firebase/app\";\nimport { rrfConfig } from \"../../config\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport {HashRouter} from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport Props from \"./props\";\nimport SnackbarProvider from \"../../contexts/Snackbar\";\nimport {DarkModeProvider} from \"../../contexts/DarkMode\";\nimport {ThemeProvider} from \"../../theme\";\n\nexport default function App({ store, routes }: Props) {\n\n    // react-redux-firebase props\n    const rrfProps = {\n        firebase,\n        config: rrfConfig,\n        dispatch: store.dispatch,\n        createFirestoreInstance\n    }\n\n    return (\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <DarkModeProvider>\n                    <ThemeProvider>\n                        <SnackbarProvider>\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\n                                <HashRouter>\n                                    <CssBaseline/>\n                                    {routes}\n                                </HashRouter>\n                            </MuiPickersUtilsProvider>\n                        </SnackbarProvider>\n                    </ThemeProvider>\n                </DarkModeProvider>\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport store from \"./store/store\";\nimport createRoutes from \"./routes\";\n\nimport App from \"./containers/App\";\nimport \"./global.css\";\n\nconst target = document.getElementById(\"root\");\nReactDOM.render(<App store={store} routes={createRoutes()} />, target);\n","import * as React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport CoreLayout from \"../layouts/CoreLayout\";\nimport HomeRoute from \"./Home\";\nimport NotFoundRoute from \"./NotFound\";\nimport ProjectsRoute from \"./Projects\";\nimport AddProjectRoute from \"./AddProject\";\nimport ProjectRoute from \"./Project\";\nimport UserRoute from \"./User\";\nimport ManageRoute from \"./Manage\";\nimport EditProjectRoute from \"./EditProject\";\nimport AuthIsLoaded from \"../containers/AuthIsLoaded\";\n\nexport default function createRoutes() {\n    return (\n        <CoreLayout>\n            <AuthIsLoaded>\n                <Switch>\n                    <Route exact path={HomeRoute.path} component={HomeRoute.component} />\n                    {[\n                        AddProjectRoute,\n                        EditProjectRoute,\n                        ProjectsRoute,\n                        ProjectRoute,\n                        UserRoute,\n                        ManageRoute\n                    ].map((settings: any, i) => <Route key={i} {...settings} />)}\n                    <Route component={NotFoundRoute.component} />\n                </Switch>\n            </AuthIsLoaded>\n        </CoreLayout>\n    );\n\n}\n"],"sourceRoot":""}