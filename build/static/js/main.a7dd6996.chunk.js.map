{"version":3,"sources":["config.ts","store/reducer.ts","store/store.ts","layouts/CoreLayout/styles.ts","containers/Navbar/LogoutButton/LogoutButton.tsx","containers/Navbar/ProfileButton/ProfileButton.tsx","containers/Navbar/styles.ts","containers/Navbar/index.ts","containers/Navbar/Navbar.tsx","containers/LoginCard/styles.ts","containers/LoginCard/index.ts","containers/LoginCard/LoginCard.tsx","containers/SideMenu/styles.ts","containers/SideMenu/index.ts","containers/SideMenu/SideMenu.tsx","layouts/CoreLayout/index.ts","layouts/CoreLayout/CoreLayout.tsx","routes/Home/components/styles.ts","routes/Home/index.ts","routes/Home/components/Home.tsx","routes/NotFound/components/styles.ts","routes/NotFound/index.ts","routes/NotFound/components/NotFound.tsx","routes/Projects/components/styles.ts","containers/ProjectCard/styles.ts","utils/index.ts","containers/ProjectCard/ProjectCard.tsx","containers/PageTitle/PageTitle.tsx","constants/paths.ts","routes/Projects/index.ts","routes/Projects/components/Projects.tsx","routes/AddProject/components/styles.ts","hooks/useInput.ts","containers/FormSubmitButton/FormSubmitButton.tsx","routes/AddProject/index.ts","routes/AddProject/components/AddProject.tsx","routes/Project/components/styles.ts","containers/StatusUpdate/styles.ts","containers/StatusUpdate/StatusUpdate.tsx","routes/Project/index.ts","routes/Project/components/Project.tsx","routes/User/components/styles.ts","routes/User/index.ts","routes/User/components/User.tsx","routes/Manage/index.ts","routes/Manage/components/ManagePage.tsx","routes/EditProject/components/styles.ts","routes/EditProject/index.ts","routes/EditProject/components/EditProject.tsx","containers/App/styles.ts","theme.ts","containers/App/index.ts","containers/App/App.tsx","index.tsx","routes/index.tsx"],"names":["rrfConfig","userProfile","useFirestoreForProfile","appConfig","rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","createStore","makeStyles","theme","root","flexGrow","content","display","background","palette","paper","children","padding","spacing","LogoutButton","useFirebase","history","useHistory","Tooltip","title","IconButton","color","aria-label","component","onClick","logout","then","push","ProfileButton","auth","useSelector","state","uid","Navbar","classes","styles","AppBar","position","Toolbar","Typography","variant","className","Link","href","e","preventDefault","isLoaded","isEmpty","top","right","width","LoginCard","Card","CardHeader","CardContent","Button","fullWidth","login","provider","type","maxWidth","borderRight","minHeight","SideMenu","teams","data","MenuList","Object","keys","map","key","MenuItem","id","name","Divider","CoreLayout","row","marginTop","marginBottom","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","dateString","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","ProjectCard","project","rest","React","useState","expanded","setExpanded","avatar","Avatar","src","meta","createdBy","avatarUrl","subheader","createdOn","description","CardActions","disableSpacing","updates","length","Collapse","in","timeout","unmountOnExit","update","value","PageTitle","gutterBottom","path","params","useParams","populates","child","useFirestoreConnect","collection","projects","populate","ordered","teamId","filter","team","Array","isArray","form","flexDirection","field","mdButton","button","preview","border","boxSizing","useInput","initialValue","setValue","reset","val","bind","onChange","target","parse","toISOString","FormSubmitButton","label","size","useFirestore","bindName","resetName","bindDescription","resetDescription","now","deadline","bindDeadline","resetDeadline","markdown","bindMarkdown","resetMarkdown","addProject","add","resetForm","undefined","event","a","toString","ownedBy","res","console","error","onSubmit","TextField","required","DatePicker","format","disablePast","rows","rowsMax","multiline","divider","card","StatusUpdate","setVal","slice","doc","isOwner","FieldValue","arrayUnion","i","marginButton","where","userId","log","displayName","onDeleteClick","confirm","delete","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","substr","onEditClick","updatedProject","deleteUpdate","updatedData","arrayRemove","blue","colors","MuiTheme","createMuiTheme","primary","main","secondary","App","store","routes","rrfProps","config","dispatch","createFirestoreInstance","ThemeProvider","utils","MomentUtils","CssBaseline","document","getElementById","ReactDOM","exact","HomeRoute","AddProjectRoute","EditProjectRoute","ProjectsRoute","ProjectRoute","UserRoute","ManageRoute","settings","NotFoundRoute"],"mappings":"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","file":"static/js/main.a7dd6996.chunk.js","sourcesContent":["/**\n * @description\n * \n * This file contains configurations for packages used in this app\n * \n */\n\n// firebase config\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const fbConfig = {\n    apiKey: \"AIzaSyDyQLHfX6av-b8p1BkvZiAR6W387AqdmT4\",\n    authDomain: \"swart-project-portfolio.firebaseapp.com\",\n    projectId: \"swart-project-portfolio\",\n    storageBucket: \"swart-project-portfolio.appspot.com\",\n    messagingSenderId: \"418686934766\",\n    appId: \"1:418686934766:web:8064a0a8c9bb5f20de5dff\",\n    measurementId: \"G-7HCHCYKQFS\"\n};\n\n// react-redux-firebase config\nexport const rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\n\n// app config\nexport const appConfig = {\n    name: \"Goose Emporium\"\n}\n","/**\n * @description\n * \n * This file contains the root reducer for the firebase / firestore store\n * \n */\n\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nexport const rootReducer = combineReducers({\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","/**\n * @description\n * \n * This file includes configuration and setup for react-redux-firebase. It exports both the rrfConfig,\n * which is used by the root-level provider in the App component, as well as the firebase store.\n * \n */\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport { createStore } from \"redux\";\nimport { fbConfig, rrfConfig } from \"../config\";\nimport { rootReducer } from \"./reducer\";\n\n// initialize firebase\nfirebase.initializeApp({ ...fbConfig, ...rrfConfig})\n\n// initialize firestore\nfirebase.firestore()\n\n// enable analytics\nfirebase.analytics();\n\n// initial state for this store\nconst initialState = {}\n\nexport default createStore(rootReducer, initialState)","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    content: {\n        display: \"flex\",\n        flexGrow: 1,\n        background: theme.palette.background.paper\n    },\n    children: {\n        flexGrow: 1,\n        padding: theme.spacing(4)\n    }\n}));\n","/**\n * @description\n * \n * This component provides a styled logout button that when clicked\n * will log the user out of the app. This should destroy session/cookie\n * data for the user.\n * \n */\n\nimport * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tooltip } from \"@material-ui/core\";\n\nexport default function LogoutButton() {\n\n    const firebase = useFirebase();\n    const history = useHistory();\n\n    function onClick() {\n        firebase.logout().then(() => {\n            history.push(\"/\");\n        });\n    }\n\n    return (\n        <Tooltip title=\"Logout of app\">\n            <IconButton color=\"inherit\" aria-label=\"Logout of app\" component=\"span\" onClick={onClick}>\n                <ExitToAppIcon />\n            </IconButton>\n        </Tooltip>      \n    )\n\n}","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ProfileIcon from \"@material-ui/icons/Person\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ProfileButton() {\n\n    const auth = useSelector((state: any) => state.firebase.auth)\n    const history = useHistory();\n\n    if (!auth.uid) {\n        return <>no uid</>\n    }\n    return (\n        <Tooltip title=\"View Profile\">\n            <IconButton color=\"inherit\" aria-label=\"View Profile\" component=\"span\" onClick={() => history.push(\"/manage\")}>\n                <ProfileIcon />\n            </IconButton>\n        </Tooltip>      \n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    title: {\n        flexGrow: 1\n    }\n}));","import Navbar from \"./Navbar\";\nexport default Navbar;\n","/**\n * @description\n * \n * This file contains the main navbar for the app. It will appear on the top of the page.\n * \n */\n\nimport * as React from \"react\";\nimport { AppBar, Link, Toolbar, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { RootState } from \"../../store/reducer\";\nimport LogoutButton from \"./LogoutButton/LogoutButton\";\nimport ProfileButton from \"./ProfileButton/ProfileButton\";\nimport styles from \"./styles\";\nimport { appConfig } from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Navbar() {\n\n    const auth = useSelector((state: RootState) => state.firebase.auth)\n    const classes = styles();\n    const history = useHistory();\n\n    const onClick = (e: any) => {\n        e.preventDefault();\n        history.push(\"/\");\n    }\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title} color=\"inherit\"><Link color=\"inherit\" href=\"/\" onClick={onClick}>{appConfig.name}</Link></Typography>\n                {/* Display the logout button if the user is logged in */}\n                {isLoaded(auth) && !isEmpty(auth) && <ProfileButton />}\n                {isLoaded(auth) && !isEmpty(auth) && <LogoutButton />}\n            </Toolbar>\n        </AppBar>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        width: \"400px\",\n        background: theme.palette.background.paper\n    },\n}))","import LoginCard from \"./LoginCard\";\nexport default LoginCard;","import * as React from \"react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { Card, CardContent, CardHeader, Button } from \"@material-ui/core\";\nimport { appConfig } from \"../../config\";\nimport styles from \"./styles\";\n\nexport default function LoginCard() {\n\n    const firebase = useFirebase();\n    const classes = styles();\n    \n    function loginWithGoogle() {\n        return firebase.login({ provider: \"google\", type: \"popup\" })\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader \n                title={appConfig.name}\n            />\n            <CardContent>\n                <Button color=\"primary\" fullWidth variant=\"contained\" onClick={loginWithGoogle}>Sign in with Google</Button>\n            </CardContent>\n        </Card>\n    )\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: 250,\n        width: 250,\n        borderRight: `1px solid #ccc`,\n        minHeight: \"100vh\"\n    }\n}));","import SideMenu from \"./SideMenu\";\nexport default SideMenu;\n","import React from \"react\";\nimport { Team } from \"../../types\";\nimport { MenuList, MenuItem, Divider } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty, isLoaded, useFirestore } from \"react-redux-firebase\";\nimport { RootState } from \"../../store/reducer\";\n\nexport default function SideMenu() {\n\n    const classes = styles();\n    const history = useHistory();\n\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const teams = useSelector((state: RootState) => state.firestore.data.teams);\n    \n    if (!isLoaded(teams) || !isLoaded(teams)) {\n        return <div>Loading...</div>\n    }\n\n    if (isEmpty(teams)) {\n        return <div>No teams found</div>\n    }\n\n    // handle what happens when the user clicks on a team \n    const onSelect = (id: string) => {\n        // go the project listing page for the specified team\n        history.push(`/projects/by-team/${id}`);\n    }\n\n    const onShowAllClick = () => {\n        history.push(\"/projects/by-team/all\");\n    }\n\n    const onAddClick = () => {\n        history.push(\"/projects/add\");\n    }\n\n    return (\n        <MenuList className={classes.root}>\n\n            {Object.keys(teams).map((key: string) => (\n                <MenuItem key={teams[key].id} onClick={() => onSelect(key)}>\n                    {teams[key].name}\n                </MenuItem>\n            ))}\n\n            <Divider />\n            <MenuItem onClick={onShowAllClick}>\n                {\"Show All\"}\n            </MenuItem>\n            <Divider />\n            {!isEmpty(auth) && <MenuItem onClick={onAddClick}>\n                {\"Add Project\"}\n            </MenuItem>}\n        </MenuList>\n    );\n\n}","import CoreLayout from \"./CoreLayout\";\nexport default CoreLayout;","import React from \"react\";\nimport styles from \"./styles\";\nimport Props from \"./props\";\nimport Navbar from \"../../containers/Navbar\";\nimport LoginCard from \"../../containers/LoginCard\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"react-redux-firebase\";\nimport SideMenu from \"../../containers/SideMenu\";\n\nexport default function CoreLayout({ children }: Props) {\n\n    const classes = styles();\n\n    const auth = useSelector((state: any) => state.firebase.auth)\n\n    return (\n        <div className={classes.root}>\n            {isEmpty(auth) && <LoginCard />}\n            <Navbar />\n            <div className={classes.content}>\n                <SideMenu />\n                <div className={classes.children}>{children}</div>\n            </div>\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {}\n}));","import HomePage from \"./components/Home\";\n\nexport default {\n    path: \"/\",\n    component: HomePage\n};","import React from \"react\";\nimport styles from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function Home() {\n\n    const classes = styles();\n    const history = useHistory();\n\n    history.push(\"projects/by-team/all\");\n\n    return (\n        <div className={classes.root}>\n            <p>Home page</p>\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {}\n}));\n","import NotFoundPage from \"./components/NotFound\";\n\nexport default {\n    component: NotFoundPage \n};","import * as React from \"react\";\nimport styles from \"./styles\"\n\nexport default function NotFoundPage() {\n\n    const classes = styles();\n\n    return (\n        <div className={classes.root}>\n            <p>404</p>\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {},\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    }\n}));\n","export function createMeta(createdBy: string)\n{\n    return {\n        createdBy,\n        createdOn: Date.now().toString(),\n        visible: true\n    }\n}\n\nexport function dateString(timestamp: string)\n{\n    const date = new Date(+timestamp);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}","import React from \"react\";\nimport { Divider, Collapse, IconButton, Button, Card, CardContent, CardActions, Typography, CardHeader, Avatar } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport styles from \"./styles\";\nimport { createMeta, dateString } from \"../../utils\";\n\nexport default function ProjectCard({ project, ...rest }: any) {\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const history = useHistory();\n    const classes = styles();\n\n    const handleExpandClick = () => setExpanded(!expanded);\n\n    // Get the last status update. If the project has no status updates, use the createdOn date.\n\n    return (\n        <Card {...rest}>\n            <CardHeader\n                avatar={\n                    <Avatar src={project.meta.createdBy.avatarUrl} />\n                }\n                title={project.name}\n                subheader={dateString(project.meta.createdOn)}\n            />\n            <CardContent>\n                <Typography>{project.description}</Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <Button onClick={() => history.push(`/projects/${project.id}`)}>Read More</Button>\n                <IconButton onClick={handleExpandClick}>\n                    <ExpandMoreIcon className={expanded ? classes.expand : classes.expandOpen} />\n                </IconButton>\n            </CardActions>\n            {project.updates && project.updates.length > 0 && <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                {project.updates.map((update:any) => (\n                    <Card key={update.value}>\n                        <CardContent>\n                            <Typography variant=\"subtitle2\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                    </Card>\n                ))}\n            </Collapse>}\n        </Card>\n    );\n\n}","import { Typography } from \"@material-ui/core\";\n\nexport function PageTitle({ title }: { title: string }) {\n\n    return (\n        <Typography variant=\"h4\" gutterBottom >{title} Projects</Typography>\n    );\n\n}","export const LOGIN_PATH = \"/login\";\nexport const ACCOUNT_PATH = \"/account\";\nexport const SINGLE_PATH = \"/projects/:projectId\";\nexport const LIST_BY_TEAM = \"/projects/by-team/:teamId\";\nexport const LIST_BY_USER = \"/projects/by-user/:userId\";\nexport const MANAGE = \"/manage\";\nexport const LOGOUT_PATH = \"/logout\";\nexport const HOME_PATH = \"/\";","import ProjectsPage from \"./components/Projects\";\nimport { LIST_BY_TEAM as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectsPage\n}","import React from \"react\";\nimport styles from \"./styles\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport ProjectCard from \"../../../containers/ProjectCard/ProjectCard\";\nimport { Project } from \"../../../types/index\";\nimport { PageTitle } from \"../../../containers/PageTitle\";\n\nexport default function Projects() {\n\n    const classes = styles();\n\n    const params: { teamId: string } = useParams();\n    \n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }]; \n\n    useFirestoreConnect([\n        { \n            collection: \"projects\",\n            populates\n        },\n        {\n            collection: \"teams\"\n        } \n    ]);\n\n    let projects = useSelector((state:any) => populate(state.firestore, \"projects\", populates));\n    const teams = useSelector((state: any) => state.firestore.ordered.teams);\n\n    // Show message while projects are loading\n    if (!isLoaded(projects) || !isLoaded(teams)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is are no projects \n    if (isEmpty(projects)) {\n        return <div>Projects empty</div>\n    }\n\n    // Show message if there are no teams (this shouldn't happen)\n    if (isEmpty(teams)) {\n        return <div>Teams empty</div>\n    }\n\n    // convert to array\n    if (projects) {\n        projects = Object.keys(projects).map(key => ({ id: key, ...projects[key] }));\n        if (params.teamId && params.teamId !== \"all\") {\n            projects = projects.filter((project: any) => project.meta.createdBy.team === params.teamId);\n        }\n    }\n\n    const [team] = teams.filter((team: any) => team.id === params.teamId);\n\n    return (\n        <div className={classes.root}>\n\n            <PageTitle title={team ? team.name : \"All\"} />\n            {Array.isArray(projects) && projects.map((project: Project) => (\n                <div className={classes.row} key={project.id}>\n                    <ProjectCard project={project} />\n                </div>\n            ))}\n        </div>\n    );\n\n}\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(2),\n        maxWidth: 200\n    },\n    preview: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    }\n}));\n","/**\n * @description\n * \n * This file provides React hook for an input field.\n * \n * @example\n * \n * const { value, bind, reset } = useInput('');\n * <input type=\"text\" {...bind} />\n * \n */\n\nimport { useState } from \"react\";\n\nexport default function useInput(initialValue: string) {\n\n    const [value, setValue] = useState(initialValue)\n\n    return {\n        value,\n        setValue,\n        reset: (val: string|undefined) => val ? setValue(val) : setValue(\"\"),\n        bind: {\n            value,\n            onChange: (e: any) => {\n                // If event.target is set, we can assume the field is a text input with a value property\n                // If event.target is not set, check to see if e is a moment object. If it is a moment object\n                // that means we can use e.toString() to get the date\n                e.target \n                    ? setValue(e.target.value) \n                        : Date.parse(e)\n                            ? setValue(e.toISOString()) : null\n            }\n        }\n    }\n\n}","import { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n        maxWidth: 300\n    }\n}));\n\ninterface Props extends ButtonProps {\n    label: string\n}\n\nexport function FormSubmitButton({ label, ...rest }: Props) {\n\n    const classes = styles();\n\n    return (\n        <Button size=\"large\" variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.root} {...rest}>{label}</Button>\n    );\n\n}","import AddProjectPage from \"./components/AddProject\";\nexport default {\n    path: \"/projects/add\",\n    component: AddProjectPage\n};\n\n","import { TextField, Button, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Project } from \"../../../types\";\nimport { RootState } from \"../../../store/reducer\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\n\nexport default function AddProjectPage() {\n\n    // whether or not to show markdown preview\n    const [mdPreview, setMdPreview] = React.useState(false);\n\n    const firestore = useFirestore();\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n    const classes = styles();\n\n    const history = useHistory();\n\n    // the name field\n    const { \n        value: name, \n        bind: bindName, \n        reset: resetName \n    } = useInput(\"\");\n\n    // the description field\n    const { \n        value: description, \n        bind: bindDescription, \n        reset: resetDescription \n    } = useInput(\"\");\n\n    // the deadline field\n    const { \n        value: deadline, \n        bind: bindDeadline, \n        reset: resetDeadline\n    } = useInput(new Date(Date.now()).toISOString());\n\n    // the markdown field\n    const { \n        value: markdown, \n        bind: bindMarkdown, \n        reset: resetMarkdown\n     } = useInput(\"\");\n\n    // adds a project to firestore\n    function addProject(project: Project) {\n        return firestore.collection('projects').add(project);\n    }\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n\n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n        \n        const uid = auth.uid.toString();\n\n        const project: Project = {\n            name,\n            description,\n            markdown,\n            deadline,\n            meta: {\n                ownedBy: uid,\n                createdBy: uid,\n                createdOn: Date.now().toString() \n            },\n            updates: []\n        }\n\n        try {\n            const res = await addProject(project);\n            resetForm();\n            history.push(`/projects/${res.id}`);\n            \n        } catch (error) {\n            console.error(error);\n        }\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Add Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n\n                <DatePicker label=\"Project Deadline\" className={classes.field} format=\"MM/DD/yyyy\" disablePast={true} {...bindDeadline} />\n                \n                <div className={classes.field}>\n                    <label>\n                        Tell us about your project. You can use Markdown, but keep it under 400 characters\n                    </label>\n                    <TextField className={classes.field} fullWidth label=\"Markdown description\" rows={10} rowsMax={10} variant=\"filled\" multiline {...bindMarkdown} />\n                </div>\n\n                <FormSubmitButton label=\"Submit\" />\n            </form>\n        </div>\n    )\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    card: {\n        marginBottom: theme.spacing(3)\n    },\n    update: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}));\n","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n    }\n}));\n","import React from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nexport default function StatusUpdate({ onSubmit }: { onSubmit: (val: string) => void }) {\n\n    const [val, setVal] = React.useState(\"\");\n\n    const classes = styles();\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        // restrict to 300 characters\n        setVal(\n            e.target.value.slice(0, 300)\n        )\n    }\n\n\n    const onClick = (val:string) => {\n\n        try {\n            onSubmit(val);\n            // clear the form\n            setVal(\"\");\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    \n    return (\n        <div className={classes.root}>\n            <TextField value={val} onChange={onChange} fullWidth variant=\"filled\" label=\"Share an update about this project\" />\n            <Button onClick={() => onClick(val)}>Post Update</Button>\n        </div>\n    )\n\n}","import ProjectPage from \"./components/Project\";\nimport { SINGLE_PATH as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: ProjectPage\n}","import React from \"react\";\nimport { Card, CardContent, Typography, Divider } from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty, useFirestore } from \"react-redux-firebase\";\nimport ReactMarkdown from \"react-markdown\";\nimport PostUpdate from \"../../../containers/StatusUpdate/StatusUpdate\";\nimport firebase from \"firebase\";\nimport { dateString } from \"../../../utils\";\n\nexport default function ProjectPage() {\n\n    const classes = styles();\n    const history = useHistory();\n\n    const firestore = useFirestore();\n    const auth = useSelector((state: any) => state.firebase.auth);\n\n    const params: { projectId: string } = useParams();\n\n    // if there is no project id provided, redirect the user to the home page\n    if (!params.projectId) {\n        history.push(\"/\");\n    }\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = params.projectId;\n\n    useFirestoreConnect([ \n        { collection, populates, doc }\n    ])\n\n    let project = useSelector((state: any) => populate(state.firestore, \"projects\", populates));\n\n    // Show message while project is loading\n    if (!isLoaded(project)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project \n    if (isEmpty(project)) {\n        return <div>Project is empty</div>\n    }\n\n    // convert the project to an array\n    [project] = Object.keys(project).map((key: string) => ({ id: key, ...project[key] }));\n\n    const isOwner = project.meta.ownedBy === auth?.uid;\n\n    const onSubmit = async (value: string) => {\n        const update = {\n            value: value,\n            createdOn: Date.now().toString(),\n            createdBy: auth.uid\n        }\n        await firestore.update(`projects/${project.id}`, { updates:  firebase.firestore.FieldValue.arrayUnion(update) });\n    }\n    \n    return (\n        <div className={classes.root}>\n            {isOwner && <PostUpdate onSubmit={onSubmit} />}\n\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"h2\">{project.name}</Typography>\n                    <Typography variant=\"subtitle1\">Started on {dateString(project.meta.createdOn)}</Typography>\n                    <Typography variant=\"subtitle2\">{project.description}</Typography>\n                    {project.markdown && <ReactMarkdown>{project.markdown}</ReactMarkdown>}\n                </CardContent>\n            </Card>\n\n\n            {project.updates.length > 0 && <Typography variant=\"h3\">Updates</Typography>}\n            {project.updates.map((update: any, i: number) => (\n                <Card key={i} className={classes.update}>\n                    <CardContent>\n                        <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                        <Typography>{update.value}</Typography>\n                    </CardContent>\n                </Card>\n            ))}\n\n\n        </div>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    row: {\n        marginTop: theme.spacing(1),\n        marginButton: theme.spacing(1)\n    }\n}));\n","import UserPage from \"./components/User\";\nimport { LIST_BY_USER as path } from \"../../constants/paths\";\n\nexport default {\n    path,\n    component: UserPage \n}","import React from \"react\";\nimport styles from \"./styles\"\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport ProjectCard from \"../../../containers/ProjectCard/ProjectCard\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function UserPage() {\n\n    const classes = styles();\n\n    const params: { userId: string } = useParams();\n\n    const collection = \"projects\";\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }]; \n\n    useFirestoreConnect([\n        {\n            collection,\n            populates,\n            where: [\"meta.createdBy\", \"==\", params.userId]\n        }\n    ])\n\n    const projects = useSelector((state: any) => populate(state.firestore, \"projects\", populates));\n\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    if (isEmpty(projects)) {\n        return <div>User has no projects</div>\n    }\n\n    console.log(\n        projects[Object.keys(projects)[0]]\n    )\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\">Projects by {projects[Object.keys(projects)[0]].meta.createdBy.displayName}</Typography>\n            {Object.keys(projects).map((key: string) => \n                <div className={classes.row} key={key}>\n                    <ProjectCard project={projects[key]} />\n                </div>\n            )}\n        </div>\n    );\n\n}\n","import ManagePage from \"./components/ManagePage\";\n\nexport default {\n    path: \"/manage\",\n    component: ManagePage \n};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, isLoaded, isEmpty, useFirestore } from \"react-redux-firebase\";\nimport { RootState } from \"../../../store/reducer\";\nimport { useHistory } from \"react-router-dom\";\nimport { Paper, Table, TableBody, TableHead, TableCell, TableContainer, TableRow, Button } from \"@material-ui/core\";\nimport { Project } from \"../../../types\";\nimport { dateString } from \"../../../utils\";\n\nexport default function ManagePage() {\n\n    const history = useHistory();\n\n    const firestore = useFirestore();\n\n    // get the currently logged in user\n    const auth = useSelector((state: RootState) => state.firebase.auth);\n\n    // at this point we have the user id\n    useFirestoreConnect([\n        { collection: \"projects\", where: [\"meta.createdBy\", \"==\", auth.uid || 0] }\n    ]);\n\n    const projects = useSelector((state: RootState) => state.firestore.ordered.projects);\n\n    if (!isLoaded(projects)) {\n        return <>Loading...</>\n    }\n\n    if (isEmpty(projects)) {\n        return <>You have no projects</>\n    }\n\n    const onEditClick = (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        e.preventDefault();\n        history.push(`/projects/edit/${project.id}`);\n    }\n    const onDeleteClick = async (e: React.MouseEvent<HTMLButtonElement>, project: Project) => {\n        try {\n            e.preventDefault();\n            const confirmation = confirm(\"WARNING: This action is permanent. Click OK to proceed.\");\n            if (!confirmation) return;\n            await firestore.collection(\"projects\").doc(project.id).delete();\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell>Deadline</TableCell>\n                        <TableCell>Created</TableCell>\n                        <TableCell>Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {projects.map((project: Project) => (\n                        <TableRow key={project.id || project.name}>\n                            <TableCell>{project.name}</TableCell>\n                            <TableCell>{project.description.length > 100 ? project.description.substr(0, 100) + \"...\" : project.description}</TableCell>\n                            <TableCell>{project.deadline && new Date(project.deadline).toLocaleDateString()}</TableCell>\n                            <TableCell>{dateString(project.meta.createdOn)}</TableCell>\n                            <TableCell>\n                                <Button onClick={e => onEditClick(e, project)}>Edit</Button>\n                                <Button onClick={e => onDeleteClick(e, project)}>Delete</Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n\n}","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(theme => ({\n    root: {\n        maxWidth: \"500px\",\n        flexGrow: 1\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    field: {\n        marginTop: theme.spacing(1)\n    },\n    mdButton: {\n        transition: \"all 0.2s ease\",\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        marginTop: theme.spacing(1)\n    },\n    preview: {\n        border: \"1px dashed #ccc\",\n        boxSizing: \"border-box\",\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    },\n    updates: {\n        marginTop: theme.spacing(2)\n    }\n}));\n","import EditProjectPage from \"./components/EditProject\";\nexport default {\n    path: \"/projects/edit/:id\",\n    component: EditProjectPage \n};\n\n","import React from \"react\";\nimport { TextField, Button, Typography, Card, CardContent, CardActions } from \"@material-ui/core\";\nimport { useFirestore, useFirestoreConnect, populate, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useInput from \"../../../hooks/useInput\";\nimport { RootState } from \"../../../store/reducer\";\nimport { dateString } from \"../../../utils\";\nimport { FormSubmitButton } from \"../../../containers/FormSubmitButton/FormSubmitButton\";\n\nexport default function EditProjectPage() {\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n    const firestore = useFirestore();\n\n    if (!params.id) {\n        history.push(\"/\");\n    }\n\n    const classes = styles();\n\n    const populates = [{ child: \"meta.createdBy\", root: \"users\" }];\n    const collection = \"projects\";\n    const doc = params.id;\n\n    useFirestoreConnect([\n        { collection, populates, doc }\n    ]);\n\n    const projects = useSelector((state: RootState) => populate(state.firestore, \"projects\", populates));\n\n    // Show message while project is loading\n    if (!isLoaded(projects)) {\n        return <div>Loading...</div>\n    }\n\n    // Show message if there is no project \n    if (isEmpty(projects)) {\n        return <div>Project is empty</div>\n    }\n\n    // the name field\n    const { \n        value: name, \n        bind: bindName, \n        reset: resetName \n    } = useInput(projects[params.id].name);\n\n    // the description field\n    const { \n        value: description, \n        bind: bindDescription, \n        reset: resetDescription \n    } = useInput(projects[params.id].description);\n\n    // the deadline field\n    const { \n        value: deadline, \n        bind: bindDeadline, \n        reset: resetDeadline\n    } = useInput(projects[params.id].deadline);\n\n    // the markdown field\n    const { \n        value: markdown, \n        bind: bindMarkdown, \n        reset: resetMarkdown\n    } = useInput(projects[params.id].markdown);\n\n    // resets the form fields\n    function resetForm() {\n        resetName(undefined)\n        resetDescription(undefined)\n        resetDeadline(undefined);\n        resetMarkdown(undefined);\n    }\n \n    // onSubmit will get called when the submit button is clicked\n    async function onSubmit(event: React.SyntheticEvent) {\n\n        event.preventDefault();\n        \n        const updatedProject = {\n            name,\n            description,\n            markdown,\n            deadline\n        }\n\n        try {\n            await firestore.update(`projects/${params.id}`, updatedProject)\n            resetForm();\n            history.push(`/projects/${params.id}`);\n\n        } catch (error) {\n            console.error(error);\n        }\n\n    }\n\n    const deleteUpdate = async (update: any) => {\n        try {\n            const updatedData = {\n                updates: firestore.FieldValue.arrayRemove(update)\n            }\n            const confirmed = confirm(\"WARNING: This action is permanent. Proceed?\");\n            if (!confirmed) return;\n            await firestore.update({ collection: \"projects\", doc: params.id }, updatedData);\n            // TODO: this is hacky and should be fixed\n            history.push(`/projects/${params.id}`);\n        \n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h3\" gutterBottom>Edit Project</Typography>\n            <form className={classes.form} onSubmit={onSubmit}>\n                <TextField className={classes.field} label=\"Enter a name for your project\" variant=\"filled\" required {...bindName} />\n                <TextField className={classes.field} label=\"Give your project a short description\" variant=\"filled\" required {...bindDescription} />\n                <DatePicker className={classes.field} format=\"MM/DD/yyyy\" {...bindDeadline} />\n                <TextField className={classes.field} label=\"Project Markdown\" rows=\"10\" rowsMax=\"10\" variant=\"filled\" multiline fullWidth {...bindMarkdown} />\n                <FormSubmitButton label=\"Save\" />\n            </form>\n\n\n            <div className={classes.updates}>\n                {<Typography variant=\"h5\" gutterBottom>Updates</Typography>}\n                {projects[params.id].updates.length === 0 && <Typography>You haven't posted any updates to this project yet</Typography>}\n                {projects[params.id].updates.map((update: any, i: number) => (\n                    <Card key={i}>\n                        <CardContent>\n                            <Typography variant=\"subtitle1\">{dateString(update.createdOn)}</Typography>\n                            <Typography>{update.value}</Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button onClick={() => deleteUpdate(update)}>Delete</Button>\n                        </CardActions>\n                    </Card>\n                ))}\n            </div>\n        </div>\n    )\n\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n    },\n    content: {\n        flexGrow: 1,\n        marginTop: theme.spacing(2)\n    }\n}));","import { createMuiTheme, colors } from \"@material-ui/core\";\nconst { blue } = colors;\n\nconst MuiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(99, 25, 25)\",\n    },\n    secondary: {\n      main: blue[\"500\"],\n    },\n  },\n});\n\nexport { MuiTheme };\n","import App from \"./App\";\nexport default App;\n","/**\n * @description\n * \n * This component is the root-level component for the application\n * \n */\n\nimport * as React from \"react\";\nimport firebase from \"firebase/app\";\nimport { rrfConfig } from \"../../config\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport styles from \"./styles\";\nimport Props from \"./props\";\nimport { MuiTheme } from \"../../theme\";\n\nexport default function App({ store, routes }: Props) {\n\n    const classes = styles();\n\n    // react-redux-firebase props\n    const rrfProps = {\n        firebase,\n        config: rrfConfig,\n        dispatch: store.dispatch,\n        createFirestoreInstance\n    }\n\n    return (\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <ThemeProvider theme={MuiTheme}>\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <BrowserRouter>\n                            <CssBaseline/>\n                            {routes}\n                        </BrowserRouter>\n                    </MuiPickersUtilsProvider> \n                </ThemeProvider>\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    )\n}","// This file is the entry point to the application\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport store from \"./store/store\";\nimport createRoutes from \"./routes\";\n\nimport App from \"./containers/App\";\nimport \"./global.css\";\n\nconst target = document.getElementById(\"root\");\nReactDOM.render(<App store={store} routes={createRoutes()} />, target);\n","import * as React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport CoreLayout from \"../layouts/CoreLayout\";\nimport HomeRoute from \"./Home\";\nimport NotFoundRoute from \"./NotFound\";\nimport ProjectsRoute from \"./Projects\";\nimport AddProjectRoute from \"./AddProject\";\nimport ProjectRoute from \"./Project\";\nimport UserRoute from \"./User\";\nimport ManageRoute from \"./Manage\";\nimport EditProjectRoute from \"./EditProject\";\n\nexport default function createRoutes() {\n\n    return (\n        <CoreLayout>\n            <Switch>\n                <Route exact path={HomeRoute.path} component={() => <HomeRoute.component />} />\n                {[\n                    AddProjectRoute,\n                    EditProjectRoute,\n                    ProjectsRoute,\n                    ProjectRoute,\n                    UserRoute,\n                    ManageRoute,\n                ].map((settings: any, i) => (\n                    <Route key={`Route-${i}`} {...settings} />\n                ))}\n                <Route component={NotFoundRoute.component} />\n            </Switch>\n        </CoreLayout>\n    );\n\n}\n"],"sourceRoot":""}